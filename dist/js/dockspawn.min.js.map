{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/index.js","dockspawn.min.js","package.json","src/containers/DocumentManagerContainer.js","src/containers/DocumentTabPage.js","src/containers/FillDockContainer.js","src/containers/HorizontalDockContainer.js","src/containers/PanelContainer.js","src/containers/SplitterDockContainer.js","src/containers/VerticalDockContainer.js","src/decorators/DraggableContainer.js","src/decorators/ResizableContainer.js","src/dialog/Dialog.js","src/dock/DockLayoutEngine.js","src/dock/DockManager.js","src/dock/DockManagerContext.js","src/dock/DockModel.js","src/dock/DockNode.js","src/dock/DockWheel.js","src/dock/DockWheelItem.js","src/serialization/DockGraphDeserializer.js","src/serialization/DockGraphSerializer.js","src/splitter/SplitterBar.js","src/splitter/SplitterPanel.js","src/tab/TabHandle.js","src/tab/TabHost.js","src/tab/TabPage.js","src/utils/EventHandler.js","src/utils/Point.js","src/utils/Rectangle.js","src/utils/UndockInitiator.js","src/utils/utils.js"],"names":["e","exports","module","define","amd","f","window","global","self","dockspawn","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"pkg","TabHandle","TabHost","TabPage","Dialog","DraggableContainer","ResizableContainer","DockLayoutEngine","DockManager","DockManagerContext","DockModel","DockNode","DockWheel","DockWheelItem","DocumentManagerContainer","FillDockContainer","HorizontalDockContainer","PanelContainer","SplitterDockContainer","VerticalDockContainer","SplitterBar","SplitterPanel","DockGraphDeserializer","DockGraphSerializer","Point","EventHandler","UndockInitiator","version","Array","prototype","remove","value","idx","this","indexOf","splice","contains","obj","orderByIndexes","indexes","sortedArray","push","../package.json","./containers/DocumentManagerContainer","./containers/FillDockContainer","./containers/HorizontalDockContainer","./containers/PanelContainer","./containers/SplitterDockContainer","./containers/VerticalDockContainer","./decorators/DraggableContainer","./decorators/ResizableContainer","./dialog/Dialog","./dock/DockLayoutEngine","./dock/DockManager","./dock/DockManagerContext","./dock/DockModel","./dock/DockNode","./dock/DockWheel","./dock/DockWheelItem","./serialization/DockGraphDeserializer","./serialization/DockGraphSerializer","./splitter/SplitterBar","./splitter/SplitterPanel","./tab/TabHandle","./tab/TabHost","./tab/TabPage","./utils/EventHandler","./utils/Point","./utils/UndockInitiator",2,"name","description","author","homepage","main","scripts","build","repository","type","url","bugs","dependencies","devDependencies","browserify","gulp","gulp-jshint","gulp-rename","gulp-sourcemaps","gulp-uglify","gulp-util","gulp-webserver","jshint","jshint-summary","vinyl-buffer","vinyl-source-stream","watchify",3,"dockManager","DIRECTION_TOP","minimumAllowedChildNodes","element","classList","add","tabHost","createTabPage","_createDocumentTabPage","displayCloseButton","DocumentTabPage","Object","create","constructor","container","saveState","state","documentManager","selectedTab","activeTab","../tab/TabHost","./DocumentTabPage","./FillDockContainer",4,"host","containerType","panel","containerElement","elementContent","utils","removeNode","destroy","elementContentHost","appendChild","../tab/TabPage","../utils/utils",5,"tabStripDirection","arguments","undefined","DIRECTION_BOTTOM","tabOrientation","getNextId","document","createElement","that","tabHostListener","onChange","_requestTabReorder","addListener","hostElement","setActiveChild","child","setActiveTab","resize","width","height","style","performLayout","children","loadState","defineProperty","get","clientWidth","set","clientHeight",6,"childContainers","stackedVertical","./SplitterDockContainer",7,"title","iconName","iconTemplate","_floatingDialog","isDialog","_canUndock","_undockEnabled","eventListeners","_initialize","canUndock","undockInitiator","enabled","forEach","listener","onDockEnabled","removeListener","loadFromState","elementName","getElementById","ret","id","elementPanel","elementTitle","elementTitleText","elementButtonClose","innerHTML","panelWidth","panelHeight","titleHeight","_setPanelDimensions","body","closeButtonClickedHandler","onCloseButtonClicked","bind","contentTitle","dataset","panelCaption","contentIcon","panelIcon","_updateTitle","performUndockToDialog","floatingDialog","hideCloseButton","display","onHideCloseButton","cancel","dragOffset","requestUndockToDialog","performUndock","requestUndock","prepareForDocking","_cachedWidth","_cachedHeight","resizeHandler","err","console","log","titleBarHeight","contentHeight","setTitle","onTitleChanged","setTitleIcon","setTitleIconTemplate","setCloseIconTemplate","closeIconTemplate","getRawTitle","close","hide","setPosition","defaultDialogPosition","x","y","notifyOnClosePanel","../utils/EventHandler","../utils/UndockInitiator",8,"splitterPanel","panelElement","setContainerRatio","ratio","../splitter/SplitterPanel",9,10,"dialog","delegate","topLevelElement","dragHandle","mouseDownHandler","onMouseDown","marginLeft","offsetLeft","marginTop","offsetTop","removeDecorator","event","_startDragging","previousMousePosition","pageX","pageY","mouseMoveHandler","mouseUpHandler","onMouseMove","onMouseUp","_stopDragging","eventListener","onDialogDragStarted","onDialogDragEnded","currentMousePosition","dx","checkXBounds","dy","checkYBounds","_performDrag","left","getPixels","top","../utils/Point",11,"_buildResizeHandles","readyToProcessNextResize","ResizeHandle","handleSize","cornerSize","east","west","north","south","corner","resizeHandles","_buildResizeHandle","handle","verticalClass","horizontalClass","cssClass","_adjustResizeHandles","adjustSize","onMouseMoved","suspendLayout","resumeLayout","bounds","_resizeEast","_resizeWest","_resizeNorth","_resizeSouth","_resizeContainer","leftDelta","topDelta","widthDelta","heightDelta","minWidth","minHeight","Math","max",12,"zIndexCounter","context","model","dialogs","position","notifyOnCreateDialog","notifyOnChangeDialogPosition","fromElement","elementDialog","draggable","resizable","isHidden","bringToFront","getPosition","zIndex","notifyOnHideDialog","show","notifyOnShowDialog","../containers/PanelContainer","../decorators/DraggableContainer","../decorators/ResizableContainer",13,"Rectangle","dockLeft","referenceNode","newNode","_performDock","dockRight","dockUp","dockDown","dockFill","undock","node","parentNode","parent","siblingIndex","detachFromParent","grandParent","otherChild","addChildAfter","setRootNode","nextActiveSibling","invalidate","notifyOnUnDock","reorderTabs","index","N","nodeIndexToDelete","apply","map","Number","indexValue","performTabsLayout","notifyOnTabsReorder","direction","insertBeforeReference","addChild","notifyOnDock","compositeContainer","compositeNode","referenceParent","rootNode","_createDockContainer","rebuildLayout","referenceNodeWidth","referenceNodeHeight","referenceNodeParentWidth","referenceNodeParentHeight","addChildBefore","containerWidth","containerHeight","_forceResizeCompositeContainer","getDockBounds","containerToDock","childCount","childPosition","targetElement","hierarchyModified","splitBarSize","targetPanelSize","targetPanelStart","compositeSize","_getVaringDimension","newPanelOriginalSize","scaleMultiplier","../containers/FillDockContainer","../containers/HorizontalDockContainer","../containers/VerticalDockContainer","../utils/Rectangle","./DockNode",14,"dockWheel","layoutEngine","layoutEventListeners","initialize","documentNode","documentManagerView","documentManagerNode","floor","leftBounds","offsetWidth","rightBounds","topBounds","bottomBounds","offsetHeight","setModel","loadResize","reverse","sender","activeNode","_findNodeOnPoint","activeDialog","showWheel","onDialogDropped","hideWheel","clientX","clientY","stack","bestMatch","topNode","pop","isPointInsideNode","dockDialogLeft","_requestDockDialog","dockDialogRight","dockDialogUp","dockDialogDown","dockDialogFill","_requestDockContainer","floatDialog","retdiag","_findNodeFromContainer","layoutDockFunction","splitter","dialogWidth","requestRemove","findNodeFromContainerElement","containerElm","addLayoutListener","removeLayoutListener","onSuspendLayout","onResumeLayout","dockNode","onDock","onTabsReorder","onUndock","onClosePanel","onCreateDialog","onHideDialog","onShowDialog","onChangeDialogPosition","notifyOnTabChange","tabpage","onTabChanged","serializer","serialize","json","deserializer","deserialize","getPanels","panels","_allPanels","undockEnabled","lockDockState","updatePanels","ids","getVisiblePanels","setCloseTabIconTemplate","template","closeTabIconTemplate","../dialog/Dialog","../serialization/DockGraphDeserializer","../serialization/DockGraphSerializer","./DockLayoutEngine","./DockManagerContext","./DockWheel",15,"../containers/DocumentManagerContainer","./DockModel",16,17,"removeChild","childNode","_addChildWithDirection","before","referenceIndex","preList","slice","postList","debugDumpTree","indent","message","parentType",18,"elementMainWheel","elementSideWheel","wheelItems","wheelTypes","wheelType","substr","elementPanelPreview","_activeNode","_visible","previousValue","baseX","baseY","sideMargin","dockManagerWidth","dockManagerHeight","_setWheelButtonPosition","wheelId","item","itemHalfWidth","itemHalfHeight","active","onMouseOver","wheelItem","round","onMouseOut","_getActiveWheelItem","_handleDockRequest","./DockWheelItem",19,"wheel","replace","hoverIconClass","mouseOverHandler","mouseOutHandler",20,"_json","info","JSON","parse","_buildGraph","graphInfo","_buildDialogs","dialogsInfo","nodeInfo","childrenInfo","childInfo","_createContainer","containerState","typeDocumentManager","dialogInfo","../dock/DockModel","../dock/DockNode",21,"_buildGraphInfo","_buildDialogsInfo","stringify","nodeState","panelState","panelContainer","panelInfo",22,"previousContainer","nextContainer","barElement","minPanelSize","readyToProcessNextDrag","previousMouseEvent","previousWidth","previousHeight","nextWidth","nextHeight","previousPanelSize","nextPanelSize","deltaMovement","newPreviousPanelSize","newNextPanelSize","continueProcessing","disableGlobalTextSelection","mouseMovedHandler","enableGlobalTextSelection",23,"spiltterBars","_buildSplitterDOM","splitterBar","_insertContainerIntoPanel","removeFromDOM","bar","splitPanelSize","newContainerSize","barSize","otherPanelSizeQuota","otherPanelScaleMultipler","size","childContainer","splitBar","totalChildPanelSize","targetTotalChildPanelSize","updatedTotalChildPanelSize","original","newSize","ceil","./SplitterBar",24,"undockHandler","_performUndock","elementBase","elementText","elementCloseButton","tabListElement","undockListener","_bringToFront","mouseClickHandler","onMouseClicked","closeButtonHandler","moveThreshold","setThresholdPixels","stargDragPosition","dragged","generateMoveTabEvent","pos","contain","rect","right","m","abs","bound","moveTabEvent","onMoveTab","prev","current","tabRect","getBoundingClientRect","updateTitle","onSelected","setSelected","selected","selectedClassName","setZIndex",25,"pages","tabHandleListener","separatorElement","contentElement","_createDefaultTabPage","DIRECTION_LEFT","DIRECTION_RIGHT","childNodes","change","items","itemsArr","nodeType","onTabPageSelected","currentPage","itm","tabHeight","timeoutPerform","clearTimeout","setTimeout","resizeTabListElement","separatorHeight","tabListWidth","page","tab","oldActiveTab","childPanels","filter","_setTabHandlesVisible","visible","tabPage","zIndexDelta","./TabPage",26,"flag","_initContent","./TabHandle",27,"source","eventName","target","addEventListener","removeEventListener",28,29,30,"thresholdPixels","_enabled","horizontalChange","dragStartPosition","distance","sqrt","_requestUndock","dragOffsetX","dragOffsetY","./EventHandler","./Point",31,"counter","pixels","parseInt","px","py","prefix"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAA,oBAAAC,QAAAD,EAAAC,OAAA,mBAAAC,QAAAF,EAAAE,OAAA,mBAAAC,QAAAH,EAAAG,MAAAH,EAAAI,UAAAT,MAAA,WAAA,MAAA,SAAAA,GAAAU,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAT,GAAA,GAAAc,OAAA,uBAAAL,EAAA,IAAA,MAAAT,GAAAe,KAAA,mBAAAf,EAAA,GAAAgB,GAAAV,EAAAG,IAAAb,WAAAS,GAAAI,GAAA,GAAAQ,KAAAD,EAAApB,QAAA,SAAAD,GAAA,GAAAW,GAAAD,EAAAI,GAAA,GAAAd,EAAA,OAAAa,GAAAF,EAAAA,EAAAX,IAAAqB,EAAAA,EAAApB,QAAAD,EAAAU,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAb,QAAA,IAAA,GAAAiB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAf,EAAAD,GCAAC,EAAAD,SACAwB,IAAAR,EAAA,mBAGAS,UAAAT,EAAA,mBACAU,QAAAV,EAAA,iBACAW,QAAAX,EAAA,iBAGAY,OAAAZ,EAAA,mBAGAa,mBAAAb,EAAA,mCACAc,mBAAAd,EAAA,mCAGAe,iBAAAf,EAAA,2BACAgB,YAAAhB,EAAA,sBACAiB,mBAAAjB,EAAA,6BACAkB,UAAAlB,EAAA,oBACAmB,SAAAnB,EAAA,mBACAoB,UAAApB,EAAA,oBACAqB,cAAArB,EAAA,wBAGAsB,yBAAAtB,EAAA,yCACAuB,kBAAAvB,EAAA,kCACAwB,wBAAAxB,EAAA,wCACAyB,eAAAzB,EAAA,+BACA0B,sBAAA1B,EAAA,sCACA2B,sBAAA3B,EAAA,sCAGA4B,YAAA5B,EAAA,0BACA6B,cAAA7B,EAAA,4BAGA8B,sBAAA9B,EAAA,yCACA+B,oBAAA/B,EAAA,uCAGAgC,MAAAhC,EAAA,iBACAiC,aAAAjC,EAAA,wBACAkC,gBAAAlC,EAAA,4BAGAf,EAAAD,QAAAmD,QAAAlD,EAAAD,QAAAwB,IAAA2B,QAEAC,MAAAC,UAAAC,SACAF,MAAAC,UAAAC,OAAA,SAAAC,GACA,GAAAC,GAAAC,KAAAC,QAAAH,EAEA,OAAA,KAAAC,EACAC,KAAAE,OAAAH,EAAA,IAGA,IAIAJ,MAAAC,UAAAO,WACAR,MAAAC,UAAAO,SAAA,SAAAC,GAGA,IAFA,GAAA5C,GAAAwC,KAAAnC,OAEAL,KACA,GAAAwC,KAAAxC,KAAA4C,EACA,OAAA,CAIA,QAAA,IAIAT,MAAAC,UAAAS,iBACAV,MAAAC,UAAAS,eAAA,SAAAC,GAGA,IAAA,GAFAC,MAEA/C,EAAA,EAAAA,EAAA8C,EAAAzC,OAAAL,IACA+C,EAAAC,KAAAR,KAAAM,EAAA9C,IAGA,OAAA+C,OCKGE,kBAAkB,EAAEC,wCAAwC,EAAEC,iCAAiC,EAAEC,uCAAuC,EAAEC,8BAA8B,EAAEC,qCAAqC,EAAEC,qCAAqC,EAAEC,kCAAkC,GAAGC,kCAAkC,GAAGC,kBAAkB,GAAGC,0BAA0B,GAAGC,qBAAqB,GAAGC,4BAA4B,GAAGC,mBAAmB,GAAGC,kBAAkB,GAAGC,mBAAmB,GAAGC,uBAAuB,GAAGC,wCAAwC,GAAGC,sCAAsC,GAAGC,yBAAyB,GAAGC,2BAA2B,GAAGC,kBAAkB,GAAGC,gBAAgB,GAAGC,gBAAgB,GAAGC,uBAAuB,GAAGC,gBAAgB,GAAGC,0BAA0B,KAAKC,GAAG,SAAS7E,EAAQf,EAAOD,GCvFzzBC,EAAAD,SACA8F,KAAA,aACA3C,QAAA,QACA4C,YAAA,0DACAC,OAAA,oCACAC,SAAA,yCACAC,KAAA,cACAC,SACAC,MAAA,cAEAC,YACAC,KAAA,MACAC,IAAA,8CAEAC,MACAD,IAAA,iDAEAE,gBACAC,iBACAC,WAAA,SACAC,KAAA,SACAC,cAAA,SACAC,cAAA,SACAC,kBAAA,SACAC,cAAA,SACAC,YAAA,SACAC,iBAAA,SACAC,OAAA,SACAC,iBAAA,SACAC,eAAA,SACAC,sBAAA,SACAC,SAAA,gBD4FMC,GAAG,SAASxG,EAAQf,EAAOD,GEjHjC,QAAAsC,GAAAmF,GAEAlF,EAAAlB,KAAAoC,KAAAgE,EAAA/F,EAAAgG,eACAjE,KAAAkE,yBAAA,EACAlE,KAAAmE,QAAAC,UAAAC,IAAA,oBACArE,KAAAsE,QAAAC,cAAAvE,KAAAwE,uBACAxE,KAAAsE,QAAAG,oBAAA,EAhBA,GAAA3F,GAAAvB,EAAA,uBACAmH,EAAAnH,EAAA,qBACAU,EAAAV,EAAA,iBAiBAsB,GAAAe,UAAA+E,OAAAC,OAAA9F,EAAAc,WACAf,EAAAe,UAAAiF,YAAAhG,EACArC,EAAAD,QAAAsC,EAEAA,EAAAe,UAAA4E,uBAAA,SAAAF,EAAAQ,GAEA,MAAA,IAAAJ,GAAAJ,EAAAQ,IAGAjG,EAAAe,UAAAmF,UAAA,SAAAC,GAEAlG,EAAAc,UAAAmF,UAAAnH,KAAAoC,KAAAgF,GACAA,EAAAC,iBAAA,GAIApG,EAAAe,UAAAsF,YAAA,WAEA,MAAAlF,MAAAsE,QAAAa,aF+HGC,iBAAiB,GAAGC,oBAAoB,EAAEC,sBAAsB,IAAIC,GAAG,SAAShI,EAAQf,EAAOD,GG9JlG,QAAAmI,GAAAc,EAAAV,GAEA5G,EAAAN,KAAAoC,KAAAwF,EAAAV,GAGA,UAAA9E,KAAA8E,UAAAW,gBAEAzF,KAAA0F,MAAAZ,EACA9E,KAAA2F,iBAAA3F,KAAA0F,MAAAE,eAMAC,EAAAC,WAAA9F,KAAA2F,mBApBA,GAAAzH,GAAAX,EAAA,kBACAsI,EAAAtI,EAAA,iBAuBAmH,GAAA9E,UAAA+E,OAAAC,OAAA1G,EAAA0B,WACA8E,EAAA9E,UAAAiF,YAAAH,EACAlI,EAAAD,QAAAmI,EAEAA,EAAA9E,UAAAmG,QAAA,WAEA7H,EAAA0B,UAAAmG,QAAAnI,KAAAoC,MAGA6F,EAAAC,WAAA9F,KAAA2F,kBACA3F,KAAA0F,MAAAM,mBAAAC,YAAAjG,KAAA2F,qBHwKGO,iBAAiB,GAAGC,iBAAiB,KAAKC,GAAG,SAAS7I,EAAQf,EAAOD,GIvMxE,QAAAuC,GAAAkF,EAAAqC,GAEA,GAAA,IAAAC,UAAAzI,OAAA,CAIA0I,SAAAF,IACAA,EAAApI,EAAAuI,kBAGAxG,KAAAgE,YAAAA,EACAhE,KAAAyG,eAAAJ,EACArG,KAAAqC,KAAAwD,EAAAa,UAAA,SACA1G,KAAAmE,QAAAwC,SAAAC,cAAA,OACA5G,KAAA2F,iBAAA3F,KAAAmE,QACAnE,KAAAyF,cAAA,OACAzF,KAAAkE,yBAAA,EACAlE,KAAAmE,QAAAC,UAAAC,IAAA,kBACArE,KAAAmE,QAAAC,UAAAC,IAAA,uBACArE,KAAAsE,QAAA,GAAArG,GAAA+B,KAAAyG,eACA,IAAAI,GAAA7G,IACAA,MAAA8G,iBACAC,SAAA,SAAAzK,GACAuK,EAAA7C,YAAAgD,mBAAAH,EAAAvK,KAGA0D,KAAAsE,QAAA2C,YAAAjH,KAAA8G,iBACA9G,KAAAmE,QAAA8B,YAAAjG,KAAAsE,QAAA4C,cA9BA,GAAAjJ,GAAAV,EAAA,kBACAsI,EAAAtI,EAAA,iBAgCAf,GAAAD,QAAAuC,EAEAA,EAAAc,UAAAuH,eAAA,SAAAC,GAEApH,KAAAsE,QAAA+C,aAAAD,IAGAtI,EAAAc,UAAA0H,OAAA,SAAAC,EAAAC,GAEAxH,KAAAmE,QAAAsD,MAAAF,MAAAA,EAAA,KACAvH,KAAAmE,QAAAsD,MAAAD,OAAAA,EAAA,KACAxH,KAAAsE,QAAAgD,OAAAC,EAAAC,IAGA1I,EAAAc,UAAA8H,cAAA,SAAAC,GAEA3H,KAAAsE,QAAAoD,cAAAC,IAGA7I,EAAAc,UAAAmG,QAAA,WAEAF,EAAAC,WAAA9F,KAAAmE,gBACAnE,MAAAmE,SAGArF,EAAAc,UAAAmF,UAAA,SAAAC,GAEAA,EAAAuC,MAAAvH,KAAAuH,MACAvC,EAAAwC,OAAAxH,KAAAwH,QAGA1I,EAAAc,UAAAgI,UAAA,SAAA5C,GAKAhF,KAAAgF,OAAAuC,MAAAvC,EAAAuC,MAAAC,OAAAxC,EAAAwC,SAGA7C,OAAAkD,eAAA/I,EAAAc,UAAA,SACAkI,IAAA,WAGA,MAAA9H,MAAAmE,QAAA4D,aAEAC,IAAA,SAAAlI,GACAE,KAAAmE,QAAAsD,MAAAF,MAAAzH,EAAA,QAIA6E,OAAAkD,eAAA/I,EAAAc,UAAA,UACAkI,IAAA,WAGA,MAAA9H,MAAAmE,QAAA8D,cAEAD,IAAA,SAAAlI,GACAE,KAAAmE,QAAAsD,MAAAD,OAAA1H,EAAA,UJ+MGsF,iBAAiB,GAAGe,iBAAiB,KAAK+B,GAAG,SAAS3K,EAAQf,EAAOD,GKtSxE,QAAAwC,GAAAiF,EAAAmE,GAEAnI,KAAAoI,iBAAA,EACAnJ,EAAArB,KAAAoC,KAAA6F,EAAAa,UAAA,wBAAA1C,EAAAmE,GACAnI,KAAAyF,cAAA,aAPA,GAAAxG,GAAA1B,EAAA,2BACAsI,EAAAtI,EAAA,iBASAwB,GAAAa,UAAA+E,OAAAC,OAAA3F,EAAAW,WACAb,EAAAa,UAAAiF,YAAA9F,EACAvC,EAAAD,QAAAwC,IL4SGoH,iBAAiB,GAAGkC,0BAA0B,IAAIC,GAAG,SAAS/K,EAAQf,EAAOD,GMjThF,QAAAyC,GAAA4G,EAAA5B,EAAAuE,GAEAA,IACAA,EAAA,SACAvI,KAAA4F,eAAAA,EACA5F,KAAAgE,YAAAA,EACAhE,KAAAuI,MAAAA,EACAvI,KAAAyF,cAAA,QACAzF,KAAAwI,SAAA,2BACAxI,KAAAyI,aAAA,KACAzI,KAAAkE,yBAAA,EACAlE,KAAA0I,gBAAAnC,OACAvG,KAAA2I,UAAA,EACA3I,KAAA4I,WAAA5E,EAAA6E,eACA7I,KAAA8I,kBACA9I,KAAA+I,cAtBA,GAAAvJ,GAAAjC,EAAA,yBACAkC,EAAAlC,EAAA,4BACAsI,EAAAtI,EAAA,iBAuBAf,GAAAD,QAAAyC,EAEAA,EAAAY,UAAAoJ,UAAA,SAAAhE,GACAhF,KAAA4I,WAAA5D,EACAhF,KAAAiJ,gBAAAC,QAAAlE,EACAhF,KAAA8I,eAAAK,QAAA,SAAAC,GACAA,EAAAC,eACAD,EAAAC,eAAAvM,KAAAkD,KAAAgF,MAAAA,OAMAhG,EAAAY,UAAAqH,YAAA,SAAAmC,GACApJ,KAAA8I,eAAAtI,KAAA4I,IAGApK,EAAAY,UAAA0J,eAAA,SAAAF,GAEApJ,KAAA8I,eAAA5I,OAAAF,KAAA8I,eAAA7I,QAAAmJ,GAAA,IAGAzE,OAAAkD,eAAA7I,EAAAY,UAAA,kBACAkI,IAAA,WAAA,MAAA9H,MAAA0I,iBACAV,IAAA,SAAAlI,GAEAE,KAAA0I,gBAAA5I,CACA,IAAAkJ,GAAAzC,SAAAvG,KAAA0I,eACA1I,MAAAiJ,gBAAAC,QAAAF,KAIAhK,EAAAuK,cAAA,SAAAvE,EAAAhB,GAEA,GAAAwF,GAAAxE,EAAAb,QACAyB,EAAAe,SAAA8C,eAAAD,EACA,IAAA,OAAA5D,EACA,MAAA,KAEA,IAAA8D,GAAA,GAAA1K,GAAA4G,EAAA5B,EAEA,OADA0F,GAAA9B,UAAA5C,GACA0E,GAGA1K,EAAAY,UAAAmF,UAAA,SAAAC,GAEAA,EAAAb,QAAAnE,KAAA4F,eAAA+D,GACA3E,EAAAuC,MAAAvH,KAAAuH,MACAvC,EAAAwC,OAAAxH,KAAAwH,QAGAxI,EAAAY,UAAAgI,UAAA,SAAA5C,GAEAhF,KAAAuH,MAAAvC,EAAAuC,MACAvH,KAAAwH,OAAAxC,EAAAwC,OACAxH,KAAAgF,OAAAuC,MAAAvC,EAAAuC,MAAAC,OAAAxC,EAAAwC,SAIAxI,EAAAY,UAAAuH,eAAA,aAIAxC,OAAAkD,eAAA7I,EAAAY,UAAA,oBACAkI,IAAA,WAAA,MAAA9H,MAAA4J,gBAGA5K,EAAAY,UAAAmJ,YAAA,WAEA/I,KAAAqC,KAAAwD,EAAAa,UAAA,UACA1G,KAAA4J,aAAAjD,SAAAC,cAAA,OACA5G,KAAA6J,aAAAlD,SAAAC,cAAA,OACA5G,KAAA8J,iBAAAnD,SAAAC,cAAA,OACA5G,KAAAgG,mBAAAW,SAAAC,cAAA,OACA5G,KAAA+J,mBAAApD,SAAAC,cAAA,OAEA5G,KAAA4J,aAAA3D,YAAAjG,KAAA6J,cACA7J,KAAA6J,aAAA5D,YAAAjG,KAAA8J,kBACA9J,KAAA6J,aAAA5D,YAAAjG,KAAA+J,oBACA/J,KAAA+J,mBAAAC,UAAA,8BACAhK,KAAA+J,mBAAA3F,UAAAC,IAAA,+BACArE,KAAA4J,aAAA3D,YAAAjG,KAAAgG,oBAEAhG,KAAA4J,aAAAxF,UAAAC,IAAA,cACArE,KAAA6J,aAAAzF,UAAAC,IAAA,kBACArE,KAAA6J,aAAAzF,UAAAC,IAAA,qBACArE,KAAA8J,iBAAA1F,UAAAC,IAAA,uBACArE,KAAAgG,mBAAA5B,UAAAC,IAAA,gBAGA,IAAA4F,GAAAjK,KAAA4F,eAAAmC,YACAmC,EAAAlK,KAAA4F,eAAAqC,aACAkC,EAAAnK,KAAA6J,aAAA5B,YACAjI,MAAAoK,oBAAAH,EAAAC,EAAAC,GAGAxD,SAAA0D,KAAApE,YAAAjG,KAAA4J,cAEA5J,KAAAsK,0BACA,GAAA9K,GAAAQ,KAAA+J,mBAAA,QAAA/J,KAAAuK,qBAAAC,KAAAxK,OAEA6F,EAAAC,WAAA9F,KAAA4F,gBACA5F,KAAAgG,mBAAAC,YAAAjG,KAAA4F,eAGA,IAAA6E,GAAAzK,KAAA4F,eAAA8E,QAAAC,aACAC,EAAA5K,KAAA4F,eAAA8E,QAAAG,SACAJ,KAAAzK,KAAAuI,MAAAkC,GACAG,IAAA5K,KAAAwI,SAAAoC,GACA5K,KAAA8K,eAEA9K,KAAAiJ,gBAAA,GAAAxJ,GAAAO,KAAA6J,aAAA7J,KAAA+K,sBAAAP,KAAAxK,aACAA,MAAAgL,gBAIAhM,EAAAY,UAAAqL,gBAAA,SAAAjG,GACAhF,KAAA+J,mBAAAtC,MAAAyD,QAAAlG,EAAA,OAAA,QACAhF,KAAA8I,eAAAK,QAAA,SAAAC,GACAA,EAAA+B,mBACA/B,EAAA+B,mBAAArO,KAAAkD,KAAAgF,MAAAA,OAMAhG,EAAAY,UAAAmG,QAAA,WAEAF,EAAAC,WAAA9F,KAAA4J,cACA5J,KAAAsK,4BAEAtK,KAAAsK,0BAAAc,eACApL,MAAAsK,4BAOAtL,EAAAY,UAAAmL,sBAAA,SAAAzO,EAAA+O,GAIA,MAFArL,MAAA2I,UAAA,EACA3I,KAAAiJ,gBAAAC,SAAA,EACAlJ,KAAAgE,YAAAsH,sBAAAtL,KAAA1D,EAAA+O,IAOArM,EAAAY,UAAA2L,cAAA,WAGAvL,KAAAiJ,gBAAAC,SAAA,EACAlJ,KAAAgE,YAAAwH,cAAAxL,OAGAhB,EAAAY,UAAA6L,kBAAA,WAEAzL,KAAA2I,UAAA,EACA3I,KAAAiJ,gBAAAC,QAAAlJ,KAAAgJ,WAGArE,OAAAkD,eAAA7I,EAAAY,UAAA,SACAkI,IAAA,WAAA,MAAA9H,MAAA0L,cACA1D,IAAA,SAAAlI,GAEAA,IAAAE,KAAA0L,eAEA1L,KAAA0L,aAAA5L,EACAE,KAAA4J,aAAAnC,MAAAF,MAAAzH,EAAA,SAKA6E,OAAAkD,eAAA7I,EAAAY,UAAA,UACAkI,IAAA,WAAA,MAAA9H,MAAA2L,eACA3D,IAAA,SAAAlI,GAEAA,IAAAE,KAAA2L,gBAEA3L,KAAA2L,cAAA7L,EACAE,KAAA4J,aAAAnC,MAAAD,OAAA1H,EAAA,SAKAd,EAAAY,UAAA0H,OAAA,SAAAC,EAAAC,GAOAxH,KAAAoK,oBAAA7C,EAAAC,GACAxH,KAAA0L,aAAAnE,EACAvH,KAAA2L,cAAAnE,CACA,KACAjB,QAAAvG,KAAA4F,gBAAA,kBAAA5F,MAAA4F,eAAAgG,eACA5L,KAAA4F,eAAAgG,cAAArE,EAAAC,EAAAxH,KAAA6J,aAAA5B,cACA,MAAA4D,GACAC,QAAAC,IAAA,+BAAAF,EAAA,QAAA7L,KAAA4F,kBAIA5G,EAAAY,UAAAwK,oBAAA,SAAA7C,EAAAC,GAEAxH,KAAA6J,aAAApC,MAAAF,MAAAA,EAAA,KACAvH,KAAAgG,mBAAAyB,MAAAF,MAAAA,EAAA,KACAvH,KAAA4F,eAAA6B,MAAAF,MAAAA,EAAA,KACAvH,KAAA4J,aAAAnC,MAAAF,MAAAA,EAAA,IAEA,IAAAyE,GAAAhM,KAAA6J,aAAA5B,aACAgE,EAAAzE,EAAAwE,CACAhM,MAAAgG,mBAAAyB,MAAAD,OAAAyE,EAAA,KACAjM,KAAA4F,eAAA6B,MAAAD,OAAAyE,EAAA,KACAjM,KAAA4J,aAAAnC,MAAAD,OAAAA,EAAA,MAGAxI,EAAAY,UAAAsM,SAAA,SAAA3D,GAEAvI,KAAAuI,MAAAA,EACAvI,KAAA8K,eACA9K,KAAAmM,gBACAnM,KAAAmM,eAAAnM,KAAAuI,IAGAvJ,EAAAY,UAAAwM,aAAA,SAAA5D,GAEAxI,KAAAwI,SAAAA,EACAxI,KAAA8K,eACA9K,KAAAmM,gBACAnM,KAAAmM,eAAAnM,KAAAA,KAAAuI,QAGAvJ,EAAAY,UAAAyM,qBAAA,SAAA5D,GAEAzI,KAAAyI,aAAAA,EACAzI,KAAA8K,eACA9K,KAAAmM,gBACAnM,KAAAmM,eAAAnM,KAAAA,KAAAuI,QAGAvJ,EAAAY,UAAA0M,qBAAA,SAAAC,GAEAvM,KAAA+J,mBAAAC,UAAAuC,KAGAvN,EAAAY,UAAAkL,aAAA,WAEA,MAAA,QAAA9K,KAAAyI,kBAEAzI,KAAA8J,iBAAAE,UAAAhK,KAAAyI,aAAAzI,KAAAwI,UAAAxI,KAAAuI,YAGAvI,KAAA8J,iBAAAE,UAAA,aAAAhK,KAAAwI,SAAA,UAAAxI,KAAAuI,QAGAvJ,EAAAY,UAAA4M,YAAA,WAEA,MAAAxM,MAAA8J,iBAAAE,WAGAhL,EAAAY,UAAA8H,cAAA,aAIA1I,EAAAY,UAAA2K,qBAAA,WAEAvK,KAAAyM,SAGAzN,EAAAY,UAAA6M,MAAA,WAEAzM,KAAA2I,UACA3I,KAAAgL,eAAA0B,OAEA1M,KAAAgL,eAAA2B,YAAA3M,KAAAgE,YAAA4I,sBAAAC,EAAA7M,KAAAgE,YAAA4I,sBAAAE,KAIA9M,KAAA+K,wBACA/K,KAAAgL,eAAA0B,OACA1M,KAAAgL,eAAA2B,YAAA3M,KAAAgE,YAAA4I,sBAAAC,EAAA7M,KAAAgE,YAAA4I,sBAAAE,IAEA9M,KAAAgE,YAAA+I,mBAAA/M,SN4TGgN,wBAAwB,GAAGC,2BAA2B,GAAG9G,iBAAiB,KAAK+G,GAAG,SAAS3P,EAAQf,EAAOD,GOhnB7G,QAAA0C,GAAAoD,EAAA2B,EAAAmE,GAGA,IAAA7B,UAAAzI,SAIAmC,KAAAqC,KAAAA,EACArC,KAAAgE,YAAAA,EACAhE,KAAAmN,cAAA,GAAA/N,GAAA+I,EAAAnI,KAAAoI,iBACApI,KAAA2F,iBAAA3F,KAAAmN,cAAAC,aACApN,KAAAkE,yBAAA,GAbA,GAAA9E,GAAA7B,EAAA,4BAgBAf,GAAAD,QAAA0C,EAEAA,EAAAW,UAAA0H,OAAA,SAAAC,EAAAC,GAMAxH,KAAAmN,cAAA7F,OAAAC,EAAAC,GACAxH,KAAA0L,aAAAnE,EACAvH,KAAA2L,cAAAnE,GAGAvI,EAAAW,UAAA8H,cAAA,SAAAS,GAEAnI,KAAAmN,cAAAzF,cAAAS,IAGAlJ,EAAAW,UAAAuH,eAAA,aAIAlI,EAAAW,UAAAmG,QAAA,WAEA/F,KAAAmN,cAAApH,WAOA9G,EAAAW,UAAAyN,kBAAA,SAAAvI,EAAAwI,GAEAtN,KAAAmN,cAAAE,kBAAAvI,EAAAwI,GACAtN,KAAAsH,OAAAtH,KAAAuH,MAAAvH,KAAAwH,SAGAvI,EAAAW,UAAAmF,UAAA,SAAAC,GAEAA,EAAAuC,MAAAvH,KAAAuH,MACAvC,EAAAwC,OAAAxH,KAAAwH,QAGAvI,EAAAW,UAAAgI,UAAA,SAAA5C,GAEAhF,KAAAgF,OAAAuC,MAAAvC,EAAAuC,MAAAC,OAAAxC,EAAAwC,SAIA7C,OAAAkD,eAAA5I,EAAAW,UAAA,SACAkI,IAAA,WAIA,MAFAvB,UAAAvG,KAAA0L,eACA1L,KAAA0L,aAAA1L,KAAAmN,cAAAC,aAAArF,aACA/H,KAAA0L,gBAIA/G,OAAAkD,eAAA5I,EAAAW,UAAA,UACAkI,IAAA,WAIA,MAFAvB,UAAAvG,KAAA2L,gBACA3L,KAAA2L,cAAA3L,KAAAmN,cAAAC,aAAAnF,cACAjI,KAAA2L,mBPunBG4B,4BAA4B,KAAKC,GAAG,SAASjQ,EAAQf,EAAOD,GQnsB/D,QAAA2C,GAAA8E,EAAAmE,GAEAnI,KAAAoI,iBAAA,EACAnJ,EAAArB,KAAAoC,KAAA6F,EAAAa,UAAA,sBAAA1C,EAAAmE,GACAnI,KAAAyF,cAAA,WAPA,GAAAxG,GAAA1B,EAAA,2BACAsI,EAAAtI,EAAA,iBASA2B,GAAAU,UAAA+E,OAAAC,OAAA3F,EAAAW,WACAV,EAAAU,UAAAiF,YAAA3F,EACA1C,EAAAD,QAAA2C,IRysBGiH,iBAAiB,GAAGkC,0BAA0B,IAAIoF,IAAI,SAASlQ,EAAQf,EAAOD,GSjtBjF,QAAA6B,GAAAsP,EAAAC,EAAAC,EAAAC,GAEA7N,KAAA0N,OAAAA,EACA1N,KAAA2N,SAAAA,EACA3N,KAAA2F,iBAAAgI,EAAAhI,iBACA3F,KAAAgE,YAAA2J,EAAA3J,YACAhE,KAAA4N,gBAAAA,EACA5N,KAAAyF,cAAAkI,EAAAlI,cACAzF,KAAA8N,iBAAA,GAAAtO,GAAAqO,EAAA,YAAA7N,KAAA+N,YAAAvD,KAAAxK,OACAA,KAAA4N,gBAAAnG,MAAAuG,WAAAJ,EAAAK,WAAA,KACAjO,KAAA4N,gBAAAnG,MAAAyG,UAAAN,EAAAO,UAAA,KACAnO,KAAAkE,yBAAAyJ,EAAAzJ,yBAfA,GAAA1E,GAAAjC,EAAA,yBACAgC,EAAAhC,EAAA,kBACAsI,EAAAtI,EAAA,iBAgBAf,GAAAD,QAAA6B,EAEAA,EAAAwB,UAAAmG,QAAA,WAEA/F,KAAAoO,kBACApO,KAAA2N,SAAA5H,WAGA3H,EAAAwB,UAAAmF,UAAA,SAAAC,GAEAhF,KAAA2N,SAAA5I,UAAAC,IAGA5G,EAAAwB,UAAAgI,UAAA,SAAA5C,GAEAhF,KAAA2N,SAAA/F,UAAA5C,IAGA5G,EAAAwB,UAAAuH,eAAA,aAIAxC,OAAAkD,eAAAzJ,EAAAwB,UAAA,SACAkI,IAAA,WAAA,MAAA9H,MAAA2N,SAAApG,SAGA5C,OAAAkD,eAAAzJ,EAAAwB,UAAA,UACAkI,IAAA,WAAA,MAAA9H,MAAA2N,SAAAnG,UAGApJ,EAAAwB,UAAAyC,KAAA,SAAAvC,GAIA,MAFAA,KACAE,KAAA2N,SAAAtL,KAAAvC,GACAE,KAAA2N,SAAAtL,MAGAjE,EAAAwB,UAAA0H,OAAA,SAAAC,EAAAC,GAEAxH,KAAA2N,SAAArG,OAAAC,EAAAC,IAGApJ,EAAAwB,UAAA8H,cAAA,SAAAC,GAEA3H,KAAA2N,SAAAjG,cAAAC,IAGAvJ,EAAAwB,UAAAwO,gBAAA,WAEApO,KAAA8N,mBAEA9N,KAAA8N,iBAAA1C,eACApL,MAAA8N,mBAIA1P,EAAAwB,UAAAmO,YAAA,SAAAM,GAEArO,KAAAsO,eAAAD,GACArO,KAAAuO,uBAAA1B,EAAAwB,EAAAG,MAAA1B,EAAAuB,EAAAI,OACAzO,KAAA0O,mBAEA1O,KAAA0O,iBAAAtD,eACApL,MAAA0O,kBAEA1O,KAAA2O,iBAEA3O,KAAA2O,eAAAvD,eACApL,MAAA2O,gBAGA3O,KAAA0O,iBAAA,GAAAlP,GAAA5C,OAAA,YAAAoD,KAAA4O,YAAApE,KAAAxK,OACAA,KAAA2O,eAAA,GAAAnP,GAAA5C,OAAA,UAAAoD,KAAA6O,UAAArE,KAAAxK,QAGA5B,EAAAwB,UAAAiP,UAAA,SAAAR,GAEArO,KAAA8O,cAAAT,GACArO,KAAA0O,iBAAAtD,eACApL,MAAA0O,iBACA1O,KAAA2O,eAAAvD,eACApL,MAAA2O,gBAGAvQ,EAAAwB,UAAA0O,eAAA,SAAAD,GAEArO,KAAA0N,OAAAqB,eACA/O,KAAA0N,OAAAqB,cAAAC,oBAAAhP,KAAA0N,OAAAW,GACA1H,SAAA0D,KAAAjG,UAAAC,IAAA,sBAGAjG,EAAAwB,UAAAkP,cAAA,SAAAT,GAEArO,KAAA0N,OAAAqB,eACA/O,KAAA0N,OAAAqB,cAAAE,kBAAAjP,KAAA0N,OAAAW,GACA1H,SAAA0D,KAAAjG,UAAAvE,OAAA,sBAGAzB,EAAAwB,UAAAgP,YAAA,SAAAP,GAEA,GAAAa,GAAA,GAAA3P,GAAA8O,EAAAG,MAAAH,EAAAI,OAEAU,EAAAnP,KAAAgE,YAAAoL,aAAApP,KAAA4N,gBAAAsB,EAAAlP,KAAAuO,uBACAc,EAAArP,KAAAgE,YAAAsL,aAAAtP,KAAA4N,gBAAAsB,EAAAlP,KAAAuO,sBACAvO,MAAAuP,aAAAJ,EAAAE,GACArP,KAAAuO,sBAAAW,GAGA9Q,EAAAwB,UAAA2P,aAAA,SAAAJ,EAAAE,GAEA,GAAAG,GAAAL,EAAAtJ,EAAA4J,UAAAzP,KAAA4N,gBAAAnG,MAAAuG,YACA0B,EAAAL,EAAAxJ,EAAA4J,UAAAzP,KAAA4N,gBAAAnG,MAAAyG,UACAlO,MAAA4N,gBAAAnG,MAAAuG,WAAAwB,EAAA,KACAxP,KAAA4N,gBAAAnG,MAAAyG,UAAAwB,EAAA,QTytBG1C,wBAAwB,GAAG2C,iBAAiB,GAAGxJ,iBAAiB,KAAKyJ,IAAI,SAASrS,EAAQf,EAAOD,GUp1BpG,QAAA8B,GAAAqP,EAAAC,EAAAC,GAEA5N,KAAA0N,OAAAA,EACA1N,KAAA2N,SAAAA,EACA3N,KAAA2F,iBAAAgI,EAAAhI,iBACA3F,KAAAgE,YAAA2J,EAAA3J,YACAhE,KAAA4N,gBAAAA,EACA5N,KAAAyF,cAAAkI,EAAAlI,cACAzF,KAAA4N,gBAAAnG,MAAAuG,WAAAhO,KAAA4N,gBAAAK,WAAA,KACAjO,KAAA4N,gBAAAnG,MAAAyG,UAAAlO,KAAA4N,gBAAAO,UAAA,KACAnO,KAAAkE,yBAAAyJ,EAAAzJ,yBACAlE,KAAA6P,sBACA7P,KAAA8P,0BAAA,EAmNA,QAAAC,KAEA/P,KAAAmE,QAAAoC,OACAvG,KAAAgQ,WAAA,EACAhQ,KAAAiQ,WAAA,GACAjQ,KAAAkQ,MAAA,EACAlQ,KAAAmQ,MAAA,EACAnQ,KAAAoQ,OAAA,EACApQ,KAAAqQ,OAAA,EACArQ,KAAAsQ,QAAA,EAhPA,GAAA9Q,GAAAjC,EAAA,yBACAgC,EAAAhC,EAAA,kBACAsI,EAAAtI,EAAA,iBAqBAf,GAAAD,QAAA8B,EAEAA,EAAAuB,UAAAuH,eAAA,aAIA9I,EAAAuB,UAAAiQ,oBAAA,WAEA7P,KAAAuQ,iBAEAvQ,KAAAwQ,oBAAA,GAAA,GAAA,GAAA,GACAxQ,KAAAwQ,oBAAA,GAAA,GAAA,GAAA,GACAxQ,KAAAwQ,oBAAA,GAAA,GAAA,GAAA,GAEAxQ,KAAAwQ,oBAAA,GAAA,GAAA,GAAA,GACAxQ,KAAAwQ,oBAAA,GAAA,GAAA,GAAA,GACAxQ,KAAAwQ,oBAAA,GAAA,GAAA,GAAA,GACAxQ,KAAAwQ,oBAAA,GAAA,GAAA,GAAA,IAGAnS,EAAAuB,UAAA4Q,mBAAA,SAAAN,EAAAC,EAAAC,EAAAC,GAEA,GAAAI,GAAA,GAAAV,EACAU,GAAAP,KAAAA,EACAO,EAAAN,KAAAA,EACAM,EAAAL,MAAAA,EACAK,EAAAJ,MAAAA,EAGAI,EAAAtM,QAAAwC,SAAAC,cAAA,OACA5G,KAAA4N,gBAAA3H,YAAAwK,EAAAtM,QAGA,IAAAuM,GAAA,GACAC,EAAA,EACAP,KAAAM,EAAA,KACAL,IAAAK,EAAA,KACAR,IAAAS,EAAA,KACAR,IAAAQ,EAAA,IACA,IAAAC,GAAA,iBAAAF,EAAAC,CACAD,GAAA7S,OAAA,GAAA8S,EAAA9S,OAAA,IACA4S,EAAAH,QAAA,GAEAG,EAAAtM,QAAAC,UAAAC,IAAAoM,EAAAH,OAAA,uBAAA,iBACAG,EAAAtM,QAAAC,UAAAC,IAAAuM,GACA5Q,KAAAuQ,cAAA/P,KAAAiQ,EAEA,IAAA3T,GAAAkD,IACAyQ,GAAA3C,iBAAA,GAAAtO,GAAAiR,EAAAtM,QAAA,YAAA,SAAA7H,GAAAQ,EAAAiR,YAAA0C,EAAAnU,MAGA+B,EAAAuB,UAAAmF,UAAA,SAAAC,GAEAhF,KAAA2N,SAAA5I,UAAAC,IAGA3G,EAAAuB,UAAAgI,UAAA,SAAA5C,GAEAhF,KAAA2N,SAAA/F,UAAA5C,IAGAL,OAAAkD,eAAAxJ,EAAAuB,UAAA,SACAkI,IAAA,WAAA,MAAA9H,MAAA2N,SAAApG,SAGA5C,OAAAkD,eAAAxJ,EAAAuB,UAAA,UACAkI,IAAA,WAAA,MAAA9H,MAAA2N,SAAAnG,UAGAnJ,EAAAuB,UAAAyC,KAAA,SAAAvC,GAIA,MAFAA,KACAE,KAAA2N,SAAAtL,KAAAvC,GACAE,KAAA2N,SAAAtL,MAGAhE,EAAAuB,UAAA0H,OAAA,SAAAC,EAAAC,GAEAxH,KAAA2N,SAAArG,OAAAC,EAAAC,GACAxH,KAAA6Q,qBAAAtJ,EAAAC,IAGAnJ,EAAAuB,UAAAiR,qBAAA,SAAAtJ,EAAAC,GAEA,GAAA1K,GAAAkD,IACAA,MAAAuQ,cAAApH,QAAA,SAAAsH,GACAA,EAAAK,WAAAhU,EAAA8Q,gBAAArG,EAAAC,MAIAnJ,EAAAuB,UAAA8H,cAAA,SAAAC,GAEA3H,KAAA2N,SAAAjG,cAAAC,IAGAtJ,EAAAuB,UAAAmG,QAAA,WAEA/F,KAAAoO,kBACApO,KAAA2N,SAAA5H,WAGA1H,EAAAuB,UAAAwO,gBAAA,aAIA/P,EAAAuB,UAAAmR,aAAA,SAAAN,EAAAnU,GAEA,GAAA0D,KAAA8P,yBAAA,CAEA9P,KAAA8P,0BAAA,EAGA9P,KAAAgE,YAAAgN,eACA,IAAA9B,GAAA,GAAA3P,GAAAjD,EAAAkS,MAAAlS,EAAAmS,OACAU,EAAAnP,KAAAgE,YAAAoL,aAAApP,KAAA4N,gBAAAsB,EAAAlP,KAAAuO,uBACAc,EAAArP,KAAAgE,YAAAsL,aAAAtP,KAAA4N,gBAAAsB,EAAAlP,KAAAuO,sBACAvO,MAAAuP,aAAAkB,EAAAtB,EAAAE,GACArP,KAAAuO,sBAAAW,EACAlP,KAAA8P,0BAAA,EACA9P,KAAA0N,OAAAhI,OACA1F,KAAAgE,YAAAiN,aAAAjR,KAAA0N,OAAAhI,SAGArH,EAAAuB,UAAAmO,YAAA,SAAA0C,EAAApC,GAEArO,KAAAuO,sBAAA,GAAAhP,GAAA8O,EAAAG,MAAAH,EAAAI,OACAgC,EAAA/B,mBAEA+B,EAAA/B,iBAAAtD,eACAqF,GAAA/B,kBAEA+B,EAAA9B,iBAEA8B,EAAA9B,eAAAvD,eACAqF,GAAA9B,eAIA,IAAA7R,GAAAkD,IACAyQ,GAAA/B,iBAAA,GAAAlP,GAAA5C,OAAA,YAAA,SAAAN,GAAAQ,EAAAiU,aAAAN,EAAAnU,KACAmU,EAAA9B,eAAA,GAAAnP,GAAA5C,OAAA,UAAA,SAAAN,GAAAQ,EAAA+R,UAAA4B,EAAAnU,KAEAqK,SAAA0D,KAAAjG,UAAAC,IAAA,sBAGAhG,EAAAuB,UAAAiP,UAAA,SAAA4B,GAEAA,EAAA/B,iBAAAtD,SACAqF,EAAA9B,eAAAvD,eACAqF,GAAA/B,uBACA+B,GAAA9B,eAEAhI,SAAA0D,KAAAjG,UAAAvE,OAAA,sBAGAxB,EAAAuB,UAAA2P,aAAA,SAAAkB,EAAAtB,EAAAE,GAEA,GAAA6B,KACAA,GAAA1B,KAAA3J,EAAA4J,UAAAzP,KAAA4N,gBAAAnG,MAAAuG,YACAkD,EAAAxB,IAAA7J,EAAA4J,UAAAzP,KAAA4N,gBAAAnG,MAAAyG,WACAgD,EAAA3J,MAAAvH,KAAA4N,gBAAA7F,YACAmJ,EAAA1J,OAAAxH,KAAA4N,gBAAA3F,aAEAwI,EAAAP,MAAAlQ,KAAAmR,YAAAhC,EAAA+B,GACAT,EAAAN,MAAAnQ,KAAAoR,YAAAjC,EAAA+B,GACAT,EAAAL,OAAApQ,KAAAqR,aAAAhC,EAAA6B,GACAT,EAAAJ,OAAArQ,KAAAsR,aAAAjC,EAAA6B,IAGA7S,EAAAuB,UAAAwR,YAAA,SAAAjC,EAAA+B,GAEAlR,KAAAuR,iBAAApC,EAAA,GAAAA,EAAA,EAAA+B,IAGA7S,EAAAuB,UAAAuR,YAAA,SAAAhC,EAAA+B,GAEAlR,KAAAuR,iBAAA,EAAA,EAAApC,EAAA,EAAA+B,IAGA7S,EAAAuB,UAAAyR,aAAA,SAAAhC,EAAA6B,GAEAlR,KAAAuR,iBAAA,EAAAlC,EAAA,GAAAA,EAAA6B,IAGA7S,EAAAuB,UAAA0R,aAAA,SAAAjC,EAAA6B,GAEAlR,KAAAuR,iBAAA,EAAA,EAAA,EAAAlC,EAAA6B,IAGA7S,EAAAuB,UAAA2R,iBAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAT,GAEAA,EAAA1B,MAAAgC,EACAN,EAAAxB,KAAA+B,EACAP,EAAA3J,OAAAmK,EACAR,EAAA1J,QAAAmK,CAEA,IAAAC,GAAA,GACAC,EAAA,EACAX,GAAA3J,MAAAuK,KAAAC,IAAAb,EAAA3J,MAAAqK,GACAV,EAAA1J,OAAAsK,KAAAC,IAAAb,EAAA1J,OAAAqK,GAEA7R,KAAA4N,gBAAAnG,MAAAuG,WAAAkD,EAAA1B,KAAA,KACAxP,KAAA4N,gBAAAnG,MAAAyG,UAAAgD,EAAAxB,IAAA,KAEA1P,KAAAsH,OAAA4J,EAAA3J,MAAA2J,EAAA1J,SAgBAuI,EAAAnQ,UAAAkR,WAAA,SAAAhM,EAAAiD,EAAAE,GAEAjI,KAAAsQ,QAEAtQ,KAAAmQ,OAAAnQ,KAAAmE,QAAAsD,MAAA+H,KAAA,OACAxP,KAAAkQ,OAAAlQ,KAAAmE,QAAAsD,MAAA+H,KAAAzH,EAAA/H,KAAAiQ,WAAA,MACAjQ,KAAAoQ,QAAApQ,KAAAmE,QAAAsD,MAAAiI,IAAA,OACA1P,KAAAqQ,QAAArQ,KAAAmE,QAAAsD,MAAAiI,IAAAzH,EAAAjI,KAAAiQ,WAAA,QAIAjQ,KAAAmQ,OAEAnQ,KAAAmE,QAAAsD,MAAA+H,KAAA,MACAxP,KAAAmE,QAAAsD,MAAAiI,IAAA1P,KAAAiQ,WAAA,MAEAjQ,KAAAkQ,OACAlQ,KAAAmE,QAAAsD,MAAA+H,KAAAzH,EAAA/H,KAAAgQ,WAAA,KACAhQ,KAAAmE,QAAAsD,MAAAiI,IAAA1P,KAAAiQ,WAAA,MAEAjQ,KAAAoQ,QACApQ,KAAAmE,QAAAsD,MAAA+H,KAAAxP,KAAAiQ,WAAA,KACAjQ,KAAAmE,QAAAsD,MAAAiI,IAAA,OAEA1P,KAAAqQ,QACArQ,KAAAmE,QAAAsD,MAAA+H,KAAAxP,KAAAiQ,WAAA,KACAjQ,KAAAmE,QAAAsD,MAAAiI,IAAAzH,EAAAjI,KAAAgQ,WAAA,MAGAhQ,KAAAmQ,MAAAnQ,KAAAkQ,KACAlQ,KAAAmE,QAAAsD,MAAAD,OAAAS,EAAA,EAAAjI,KAAAiQ,WAAA,KAEAjQ,KAAAmE,QAAAsD,MAAAF,MAAAQ,EAAA,EAAA/H,KAAAiQ,WAAA,SVk2BGjD,wBAAwB,GAAG2C,iBAAiB,GAAGxJ,iBAAiB,KAAK6L,IAAI,SAASzU,EAAQf,EAAOD,GW/mCpG,QAAA4B,GAAAuH,EAAA1B,GAEAhE,KAAA0F,MAAAA,EACA1F,KAAAiS,cAAA,IACAjS,KAAAgE,YAAAA,EACAhE,KAAA+O,cAAA/K,EACAhE,KAAA+I,cACA/I,KAAAgE,YAAAkO,QAAAC,MAAAC,QAAA5R,KAAAR,MACAA,KAAAqS,SAAArO,EAAA4I,sBAEA5M,KAAAgE,YAAAsO,qBAAAtS,MAhBA,GAAAhB,GAAAzB,EAAA,gCACAa,EAAAb,EAAA,oCACAc,EAAAd,EAAA,oCACAiC,EAAAjC,EAAA,yBACAsI,EAAAtI,EAAA,iBAeAf,GAAAD,QAAA4B,EAEAA,EAAAyB,UAAAmF,UAAA,SAAA8H,EAAAC,GACA9M,KAAAqS,UAAAxF,EAAAA,EAAAC,EAAAA,GACA9M,KAAAgE,YAAAuO,6BAAAvS,KAAA6M,EAAAC,IAGA3O,EAAAqU,YAAA,SAAA7I,EAAA3F,GAEA,MAAA,IAAA7F,GAAA,GAAAa,GAAA2H,SAAA8C,eAAAE,GAAA3F,GAAAA,IAGA7F,EAAAyB,UAAAmJ,YAAA,WAEA/I,KAAA0F,MAAAsF,eAAAhL,KACAA,KAAAyS,cAAA9L,SAAAC,cAAA,OACA5G,KAAAyS,cAAAxM,YAAAjG,KAAA0F,MAAAkE,cACA5J,KAAA0S,UAAA,GAAAtU,GAAA4B,KAAAA,KAAA0F,MAAA1F,KAAAyS,cAAAzS,KAAA0F,MAAAmE,cACA7J,KAAA2S,UAAA,GAAAtU,GAAA2B,KAAAA,KAAA0S,UAAA1S,KAAA0S,UAAA9E,iBAEAjH,SAAA0D,KAAApE,YAAAjG,KAAAyS,eACAzS,KAAAyS,cAAArO,UAAAC,IAAA,mBACArE,KAAAyS,cAAArO,UAAAC,IAAA,sBACArE,KAAA0F,MAAAmE,aAAAzF,UAAAC,IAAA,sBAEArE,KAAA8N,iBAAA,GAAAtO,GAAAQ,KAAAyS,cAAA,YAAAzS,KAAA+N,YAAAvD,KAAAxK,OACAA,KAAAsH,OAAAtH,KAAA0F,MAAAkE,aAAA7B,YAAA/H,KAAA0F,MAAAkE,aAAA3B,cACAjI,KAAA4S,UAAA,EACA5S,KAAA6S,gBAGA1U,EAAAyB,UAAA+M,YAAA,SAAAE,EAAAC,GAEA9M,KAAAqS,UAAAxF,EAAAA,EAAAC,EAAAA,GACA9M,KAAAyS,cAAAhL,MAAA+H,KAAA3C,EAAA,KACA7M,KAAAyS,cAAAhL,MAAAiI,IAAA5C,EAAA,KACA9M,KAAAgE,YAAAuO,6BAAAvS,KAAA6M,EAAAC,IAGA3O,EAAAyB,UAAAkT,YAAA,WAEA,OACAtD,KAAAxP,KAAAqS,SAAArS,KAAAqS,SAAAxF,EAAA,EACA6C,IAAA1P,KAAAqS,SAAArS,KAAAqS,SAAAvF,EAAA,IAIA3O,EAAAyB,UAAAmO,YAAA,WAEA/N,KAAA6S,gBAGA1U,EAAAyB,UAAAmG,QAAA,WAEA/F,KAAA8N,mBAEA9N,KAAA8N,iBAAA1C,eACApL,MAAA8N,kBAEA9N,KAAAyS,cAAArO,UAAAvE,OAAA,sBACAG,KAAA0F,MAAAmE,aAAAzF,UAAAvE,OAAA,sBACAgG,EAAAC,WAAA9F,KAAAyS,eACAzS,KAAA0S,UAAAtE,kBACAvI,EAAAC,WAAA9F,KAAA0F,MAAAkE,cACA5J,KAAAgE,YAAAkO,QAAAC,MAAAC,QAAAvS,OAAAG,YACAA,MAAA0F,MAAAsF,gBAGA7M,EAAAyB,UAAA0H,OAAA,SAAAC,EAAAC,GAEAxH,KAAA2S,UAAArL,OAAAC,EAAAC,IAGArJ,EAAAyB,UAAAsM,SAAA,SAAA3D,GAEAvI,KAAA0F,MAAAwG,SAAA3D,IAGApK,EAAAyB,UAAAwM,aAAA,SAAA5D,GAEAxI,KAAA0F,MAAA0G,aAAA5D,IAGArK,EAAAyB,UAAAiT,aAAA,WAEA7S,KAAAyS,cAAAhL,MAAAsL,OAAA/S,KAAAiS,iBAGA9T,EAAAyB,UAAA8M,KAAA,WAEA1M,KAAAyS,cAAAhL,MAAAsL,OAAA,EACA/S,KAAAyS,cAAAhL,MAAAyD,QAAA,OACAlL,KAAA4S,WAEA5S,KAAA4S,UAAA,EACA5S,KAAAgE,YAAAgP,mBAAAhT,QAIA7B,EAAAyB,UAAAqT,KAAA,WAEAjT,KAAAyS,cAAAhL,MAAAsL,OAAA,IACA/S,KAAAyS,cAAAhL,MAAAyD,QAAA,QACAlL,KAAA4S,WAEA5S,KAAA4S,UAAA,EACA5S,KAAAgE,YAAAkP,mBAAAlT,UX0nCGmT,+BAA+B,EAAEC,mCAAmC,GAAGC,mCAAmC,GAAGrG,wBAAwB,GAAG7G,iBAAiB,KAAKmN,IAAI,SAAS/V,EAAQf,EAAOD,GYhvC7L,QAAA+B,GAAA0F,GAEAhE,KAAAgE,YAAAA,EATA,GAAAtF,GAAAnB,EAAA,cACAwB,EAAAxB,EAAA,yCACA2B,EAAA3B,EAAA,uCACAuB,EAAAvB,EAAA,mCACAgW,EAAAhW,EAAA,sBACAsI,EAAAtI,EAAA,iBAOAf,GAAAD,QAAA+B,EAGAA,EAAAsB,UAAA4T,SAAA,SAAAC,EAAAC,GAEA1T,KAAA2T,aAAAF,EAAAC,EAAA,cAAA,IAIApV,EAAAsB,UAAAgU,UAAA,SAAAH,EAAAC,GACA1T,KAAA2T,aAAAF,EAAAC,EAAA,cAAA,IAIApV,EAAAsB,UAAAiU,OAAA,SAAAJ,EAAAC,GACA1T,KAAA2T,aAAAF,EAAAC,EAAA,YAAA,IAIApV,EAAAsB,UAAAkU,SAAA,SAAAL,EAAAC,GACA1T,KAAA2T,aAAAF,EAAAC,EAAA,YAAA,IAIApV,EAAAsB,UAAAmU,SAAA,SAAAN,EAAAC,GACA1T,KAAA2T,aAAAF,EAAAC,EAAA,QAAA,IAGApV,EAAAsB,UAAAoU,OAAA,SAAAC,GAEA,GAAAC,GAAAD,EAAAE,MACA,KAAAD,EACA,KAAA,IAAAzW,OAAA,2CAGA,IAAA2W,GAAAF,EAAAvM,SAAA1H,QAAAgU,EAMA,IAHAA,EAAAI,mBAGAH,EAAAvM,SAAA9J,OAAAqW,EAAApP,UAAAZ,yBAIA,IAAA,GADAoQ,GAAAJ,EAAAC,OACA3W,EAAA,EAAAA,EAAA0W,EAAAvM,SAAA9J,OAAAL,IACA,CACA,GAAA+W,GAAAL,EAAAvM,SAAAnK,EACA,IAAA8W,EACA,CAEAA,EAAAE,cAAAN,EAAAK,GACAL,EAAAG,kBACA,IAAA9M,GAAA2M,EAAApP,UAAAa,iBAAAoC,YACAP,EAAA0M,EAAApP,UAAAa,iBAAAsC,YACAiM,GAAApP,UAAAiB,UAEAwO,EAAAzP,UAAAwC,OAAAC,EAAAC,GACA8M,EAAA5M,oBAMAwM,GAAAG,mBACAH,EAAApP,UAAAiB,UACA/F,KAAAgE,YAAAyQ,YAAAF,OAWA,IAHAL,EAAAxM,gBAGAwM,EAAAvM,SAAA9J,OAAA,EACA,CACA,GAAA6W,GAAAR,EAAAvM,SAAAmK,KAAAC,IAAA,EAAAqC,EAAA,GACAF,GAAApP,UAAAqC,eAAAuN,EAAA5P,WAGA9E,KAAAgE,YAAA2Q,aAEA3U,KAAAgE,YAAA4Q,eAAAX,IAGA3V,EAAAsB,UAAAiV,YAAA,SAAAZ,EAAAxD,EAAAzL,EAAA8P,GACA,GAAAC,GAAAd,EAAAtM,SAAA9J,OACAmX,EAAA,SAAAhQ,EAAA8P,EAAAA,EAAA,CACA,MAAA,SAAA9P,GAAAgQ,GAAAf,EAAAtM,SAAA9J,QAEA,QAAAmH,GAAA,GAAAgQ,GAAA,CAGA,GAAA1U,GAAAX,MAAAsV,MAAA,MAAApX,OAAAkX,IAAAG,IAAAC,OAAAvX,KAAAuX,QACAC,EAAA9U,EAAAJ,OAAA8U,EAAA,GAAA,EACA1U,GAAAJ,OAAA,SAAA8E,EAAA8P,EAAA,EAAAA,EAAA,EAAAM,GAEAnB,EAAAtM,SAAAsM,EAAAtM,SAAAtH,eAAAC,GACA2T,EAAAnP,UAAAR,QAAA+Q,kBAAA/U,GACAN,KAAAgE,YAAAsR,oBAAArB,KAGA3V,EAAAsB,UAAA+T,aAAA,SAAAF,EAAAC,EAAA6B,EAAAC,GAKA,GAHA/B,EAAAU,QAAA,SAAAV,EAAAU,OAAArP,UAAAW,gBACAgO,EAAAA,EAAAU,QAEA,SAAAoB,GAAA,SAAA9B,EAAA3O,UAAAW,cAOA,MALAgO,GAAAgC,SAAA/B,GACAD,EAAA/L,gBACA+L,EAAA3O,UAAAqC,eAAAuM,EAAA5O,WACA9E,KAAAgE,YAAA2Q,iBACA3U,MAAAgE,YAAA0R,aAAAhC,EAKA,IACAiC,GACAC,EACAC,EAHA1D,EAAAnS,KAAAgE,YAAAkO,QAAAC,KAKA,IAAAsB,IAAAtB,EAAA2D,SAsBA,MApBAH,GAAA3V,KAAA+V,qBAAAR,EAAA7B,EAAAD,GACAmC,EAAA,GAAAlX,GAAAiX,GAEAH,GAEAI,EAAAH,SAAA/B,GACAkC,EAAAH,SAAAhC,KAIAmC,EAAAH,SAAAhC,GACAmC,EAAAH,SAAA/B,IAIA1T,KAAAgE,YAAAyQ,YAAAmB,GACA5V,KAAAgE,YAAAgS,cAAAhW,KAAAgE,YAAAkO,QAAAC,MAAA2D,UACAF,EAAA9Q,UAAAqC,eAAAuM,EAAA5O,WACA9E,KAAAgE,YAAA2Q,iBACA3U,MAAAgE,YAAA0R,aAAAhC,EAIA,IAAAD,EAAAU,OAAArP,UAAAW,gBAAA8P,EAAA,CACAM,EAAApC,EAAAU,MAGA,IAAA8B,GAAAxC,EAAA3O,UAAAa,iBAAAoC,YACAmO,EAAAzC,EAAA3O,UAAAa,iBAAAsC,aAGAkO,EAAAN,EAAA/Q,UAAAa,iBAAAoC,YACAqO,EAAAP,EAAA/Q,UAAAa,iBAAAsC,YAGA0N,GAAA3V,KAAA+V,qBAAAR,EAAA7B,EAAAD,GACAmC,EAAA,GAAAlX,GAAAiX,GAEAE,EAAArB,cAAAf,EAAAmC,GACAnC,EAAAY,mBACAxO,EAAAC,WAAA2N,EAAA3O,UAAAa,kBAEA6P,GAEAI,EAAAH,SAAA/B,GACAkC,EAAAH,SAAAhC,KAIAmC,EAAAH,SAAAhC,GACAmC,EAAAH,SAAA/B,IAGAmC,EAAAnO,gBACAkO,EAAAlO,gBAEAkO,EAAA9Q,UAAAqC,eAAAuM,EAAA5O,WACA8Q,EAAA9Q,UAAAwC,OAAA2O,EAAAC,GACAL,EAAA/Q,UAAAwC,OAAA6O,EAAAC,OAKAP,GAAApC,EAAAU,OACAqB,EACAK,EAAAQ,eAAA5C,EAAAC,GAEAmC,EAAArB,cAAAf,EAAAC,GACAmC,EAAAnO,gBACAmO,EAAA/Q,UAAAqC,eAAAuM,EAAA5O,UAIA,IAAAwR,GAAA5C,EAAA5O,UAAAa,iBAAAoC,YACAwO,EAAA7C,EAAA5O,UAAAa,iBAAAsC,YACAyL,GAAA5O,UAAAwC,OAAAgP,EAAAC,GAEAvW,KAAAgE,YAAA2Q,aACA3U,KAAAgE,YAAA0R,aAAAhC,IAGApV,EAAAsB,UAAA4W,+BAAA,SAAA1R,GAEA,GAAAyC,GAAAzC,EAAAa,iBAAAoC,YACAP,EAAA1C,EAAAa,iBAAAsC,YACAnD,GAAAwC,OAAAC,EAAAC,IAGAlJ,EAAAsB,UAAAmW,qBAAA,SAAAtQ,EAAAiO,EAAAD,GAEA,GAAA,eAAAhO,EACA,MAAA,IAAA1G,GAAAiB,KAAAgE,aAAA0P,EAAA5O,UAAA2O,EAAA3O,WACA,IAAA,aAAAW,EACA,MAAA,IAAAvG,GAAAc,KAAAgE,aAAA0P,EAAA5O,UAAA2O,EAAA3O,WACA,IAAA,SAAAW,EACA,MAAA,IAAA3G,GAAAkB,KAAAgE,YACA,MAAA,IAAAvG,OAAA,4CAAAgI,IASAnH,EAAAsB,UAAA6W,cAAA,SAAAhD,EAAAiD,EAAAnB,EAAAC,GAEA,GAAAI,GACAe,EACAC,EACA1F,CAEA,IAAA,SAAAqE,EACA,CAGA,GAAAsB,GAAApD,EAAA3O,UAAAa,gBAMA,OALAuL,GAAA,GAAAqC,GACArC,EAAArE,EAAAgK,EAAA5I,WACAiD,EAAApE,EAAA+J,EAAA1I,UACA+C,EAAA3J,MAAAsP,EAAA9O,YACAmJ,EAAA1J,OAAAqP,EAAA5O,aACAiJ,EAGAuC,EAAAU,QAAA,SAAAV,EAAAU,OAAArP,UAAAW,gBAEAgO,EAAAA,EAAAU,OAGA,IAAA2C,IAAA,CACArD,GAAAU,QAAAV,EAAAU,OAAArP,UAAAW,gBAAA8P,GAEAK,EAAAnC,EAAAU,OACAwC,EAAAf,EAAAjO,SAAA9J,OACA+Y,EAAAhB,EAAAjO,SAAA1H,QAAAwT,IAAA+B,EAAA,EAAA,KAGAI,EAAAnC,EACAkD,EAAA,EACAC,EAAApB,EAAA,EAAA,EACAsB,GAAA,EAGA,IAAAC,GAAA,EACAC,EAAA,EACAC,EAAA,CACA,IAAA,aAAA1B,GAAA,eAAAA,EACA,CAIA,GAAA2B,GAAAlX,KAAAmX,oBAAAvB,EAAA9Q,UAAAyQ,IAAAoB,EAAA,GAAAI,EAGAK,EAAApX,KAAAmX,oBAAAT,EAAAnB,GACA8B,EAAAH,GAAAA,EAAAE,EAIA,IADAJ,EAAAI,EAAAC,EACAP,EACAG,EAAAzB,EAAA,EAAA0B,EAAAG,MAEA,CACA,IAAA,GAAA7Z,GAAA,EAAAoZ,EAAApZ,EAAAA,IACAyZ,GAAAjX,KAAAmX,oBAAAvB,EAAAjO,SAAAnK,GAAAsH,UAAAyQ,EACA0B,IAAAI,GAkBA,MAdAnG,GAAA,GAAAqC,GACA,aAAAgC,GAEArE,EAAArE,EAAA+I,EAAA9Q,UAAAa,iBAAAsI,WACAiD,EAAApE,EAAA8I,EAAA9Q,UAAAa,iBAAAwI,UAAA8I,EACA/F,EAAA3J,MAAAqO,EAAA9Q,UAAAyC,MACA2J,EAAA1J,OAAAwP,GACA,eAAAzB,IACArE,EAAArE,EAAA+I,EAAA9Q,UAAAa,iBAAAsI,WAAAgJ,EACA/F,EAAApE,EAAA8I,EAAA9Q,UAAAa,iBAAAwI,UACA+C,EAAA3J,MAAAyP,EACA9F,EAAA1J,OAAAoO,EAAA9Q,UAAA0C,QAGA0J,GAGA5S,EAAAsB,UAAAuX,oBAAA,SAAArS,EAAAyQ,GAEA,MAAA,aAAAA,EACAzQ,EAAA0C,OACA,eAAA+N,EACAzQ,EAAAyC,MACA,KZ2vCG+P,kCAAkC,EAAEC,wCAAwC,EAAEC,sCAAsC,EAAEC,qBAAqB,GAAGtR,iBAAiB,GAAGuR,aAAa,KAAKC,IAAI,SAASpa,EAAQf,EAAOD,GavjDnN,QAAAgC,GAAA4F,GAEA,GAAAoC,SAAApC,EACA,KAAA,IAAA1G,OAAA,wCAEAuC,MAAAmE,QAAAA,EACAnE,KAAAkS,QAAAlS,KAAA4X,UAAA5X,KAAA6X,aAAA7X,KAAA0O,iBAAAnI,OACAvG,KAAA8X,wBAEA9X,KAAA4M,sBAAA,GAAArN,GAAA,EAAA,GA1BA,GAAAf,GAAAjB,EAAA,wBACAmB,EAAAnB,EAAA,cACAoB,EAAApB,EAAA,eACAe,EAAAf,EAAA,sBACAY,EAAAZ,EAAA,oBACA+B,EAAA/B,EAAA,wCACA8B,EAAA9B,EAAA,0CACAiC,EAAAjC,EAAA,yBACAgC,EAAAhC,EAAA,kBACAsI,EAAAtI,EAAA,iBAoBAf,GAAAD,QAAAgC,EAEAA,EAAAqB,UAAAmY,WAAA,WAEA/X,KAAAkS,QAAA,GAAA1T,GAAAwB,KACA,IAAAgY,GAAA,GAAAtZ,GAAAsB,KAAAkS,QAAA+F,oBACAjY,MAAAkS,QAAAC,MAAA2D,SAAAkC,EACAhY,KAAAkS,QAAAC,MAAA+F,oBAAAF,EACAhY,KAAAkS,QAAAC,MAAAC,WACApS,KAAAyU,YAAAzU,KAAAkS,QAAAC,MAAA2D,UAEA9V,KAAAsH,OAAAtH,KAAAmE,QAAA4D,YAAA/H,KAAAmE,QAAA8D,cACAjI,KAAA4X,UAAA,GAAAjZ,GAAAqB,MACAA,KAAA6X,aAAA,GAAAvZ,GAAA0B,MACAA,KAAA6I,gBAAA,EACA7I,KAAAgW,cAAAhW,KAAAkS,QAAAC,MAAA2D,WAGAvX,EAAAqB,UAAAwP,aAAA,SAAAtK,EAAAoK,EAAAX,GACA,GAAAY,GAAA2C,KAAAqG,MAAAjJ,EAAArC,EAAA0B,EAAA1B,GACAuL,EAAAlJ,EAAArC,EAAAsC,EAAA,GAAArK,EAAAmJ,WAAAnJ,EAAAuT,YAAAlJ,EAAA,GAAA,EACAmJ,EACApJ,EAAArC,EAAAsC,EAAAnP,KAAAmE,QAAAkU,aACAvT,EAAAmJ,WAAAkB,EAAA,GAAAnP,KAAAmE,QAAAkU;AAQA,OANAD,GAAAE,KAEA/J,EAAA1B,EAAAqC,EAAArC,EACAsC,EAAA,GAGAA,GAGA5Q,EAAAqB,UAAA0P,aAAA,SAAAxK,EAAAoK,EAAAX,GACA,GAAAc,GAAAyC,KAAAqG,MAAAjJ,EAAApC,EAAAyB,EAAAzB,GACAyL,EAAAzT,EAAAqJ,UAAAkB,EAAArP,KAAAmE,QAAAgK,UACAqK,EACAtJ,EAAApC,EAAAuC,EAAArP,KAAAmE,QAAAsU,cACA3T,EAAAqJ,UAAAkB,EAAArP,KAAAmE,QAAAsU,aAAAzY,KAAAmE,QAAAgK,UAAA,EAQA,QANAoK,GAAAC,KAEAjK,EAAAzB,EAAAoC,EAAApC,EACAuC,EAAA,GAGAA,GAGA9Q,EAAAqB,UAAAoW,cAAA,SAAA/B,GAEA,GAAAnX,GAAAkD,IACAiU,GAAAtM,SAAAwB,QAAA,SAAA/B,GACAtK,EAAAkZ,cAAA5O,KAEA6M,EAAAvM,iBAGAnJ,EAAAqB,UAAA+U,WAAA,WAEA3U,KAAAsH,OAAAtH,KAAAmE,QAAA4D,YAAA/H,KAAAmE,QAAA8D,eAGA1J,EAAAqB,UAAA0H,OAAA,SAAAC,EAAAC,GAEAxH,KAAAmE,QAAAsD,MAAAF,MAAAA,EAAA,KACAvH,KAAAmE,QAAAsD,MAAAD,OAAAA,EAAA,KACAxH,KAAAkS,QAAAC,MAAA2D,SAAAhR,UAAAwC,OAAAC,EAAAC,IAMAjJ,EAAAqB,UAAA8Y,SAAA,SAAAvG,GAEAtM,EAAAC,WAAA9F,KAAAkS,QAAA+F,oBAAAtS,kBACA3F,KAAAkS,QAAAC,MAAAA,EACAnS,KAAAyU,YAAAtC,EAAA2D,UAEA9V,KAAAgW,cAAA7D,EAAA2D,UACA9V,KAAA2Y,WAAAxG,EAAA2D,WAIAvX,EAAAqB,UAAA+Y,WAAA,SAAA1E,GAEA,GAAAnX,GAAAkD,IACAiU,GAAAtM,SAAAiR,UAAAzP,QAAA,SAAA/B,GACAtK,EAAA6b,WAAAvR,GACA6M,EAAAnP,UAAAqC,eAAAC,EAAAtC,aAEAmP,EAAAtM,SAAAiR,UACA3E,EAAAnP,UAAAwC,OAAA2M,EAAAnP,UAAAE,MAAAuC,MAAA0M,EAAAnP,UAAAE,MAAAwC,SAKAjJ,EAAAqB,UAAA6U,YAAA,SAAAR,GASAA,EAAAI,mBACArU,KAAAkS,QAAAC,MAAA2D,SAAA7B,EACAjU,KAAAmE,QAAA8B,YAAAgO,EAAAnP,UAAAa,mBAIApH,EAAAqB,UAAAoP,oBAAA,SAAA6J,EAAAvc,GAEA0D,KAAA4X,UAAAkB,WAAA9Y,KAAA+Y,iBAAAzc,EAAAkS,MAAAlS,EAAAmS,OACAzO,KAAA4X,UAAAoB,aAAAH,EACA7Y,KAAA4X,UAAAqB,YACAjZ,KAAA0O,mBAEA1O,KAAA0O,iBAAAtD,eACApL,MAAA0O,kBAEA1O,KAAA0O,iBAAA,GAAAlP,GAAA5C,OAAA,YAAAoD,KAAA+Q,aAAAvG,KAAAxK,QAGAzB,EAAAqB,UAAAqP,kBAAA,SAAA4J,GAEA7Y,KAAA0O,mBAEA1O,KAAA0O,iBAAAtD,eACApL,MAAA0O,kBAEA1O,KAAA4X,UAAAsB,gBAAAL,GACA7Y,KAAA4X,UAAAuB,kBACAnZ,MAAA4X,UAAAoB,aAEAH,EAAA9T,UAAA8T,EAAApG,cAAAxE,WAAA4K,EAAApG,cAAAtE,YAGA5P,EAAAqB,UAAAmR,aAAA,SAAAzU,GAEA0D,KAAA4X,UAAAkB,WAAA9Y,KAAA+Y,iBAAAzc,EAAA8c,QAAA9c,EAAA+c,UASA9a,EAAAqB,UAAAmZ,iBAAA,SAAAlM,EAAAC,GAEA,GAAAwM,KACAA,GAAA9Y,KAAAR,KAAAkS,QAAAC,MAAA2D,SAGA,KAFA,GAAAyD,GAEAD,EAAAzb,OAAA,GACA,CACA,GAAA2b,GAAAF,EAAAG,KAEA5T,GAAA6T,kBAAA7M,EAAAC,EAAA0M,KAGAD,EAAAC,KAGAhZ,KAAAyU,MAAAqE,EAAAE,EAAA7R,WAGA,MAAA4R,IAIAhb,EAAAqB,UAAA+Z,eAAA,SAAAlG,EAAA/F,GAEA,MAAA1N,MAAA4Z,mBAAAnG,EAAA/F,EAAA1N,KAAA6X,aAAArE,SAAAhJ,KAAAxK,KAAA6X,gBAIAtZ,EAAAqB,UAAAia,gBAAA,SAAApG,EAAA/F,GAEA,MAAA1N,MAAA4Z,mBAAAnG,EAAA/F,EAAA1N,KAAA6X,aAAAjE,UAAApJ,KAAAxK,KAAA6X,gBAIAtZ,EAAAqB,UAAAka,aAAA,SAAArG,EAAA/F,GAEA,MAAA1N,MAAA4Z,mBAAAnG,EAAA/F,EAAA1N,KAAA6X,aAAAhE,OAAArJ,KAAAxK,KAAA6X,gBAIAtZ,EAAAqB,UAAAma,eAAA,SAAAtG,EAAA/F,GAEA,MAAA1N,MAAA4Z,mBAAAnG,EAAA/F,EAAA1N,KAAA6X,aAAA/D,SAAAtJ,KAAAxK,KAAA6X,gBAIAtZ,EAAAqB,UAAAoa,eAAA,SAAAvG,EAAA/F,GAEA,MAAA1N,MAAA4Z,mBAAAnG,EAAA/F,EAAA1N,KAAA6X,aAAA9D,SAAAvJ,KAAAxK,KAAA6X,gBAIAtZ,EAAAqB,UAAA4T,SAAA,SAAAC,EAAA3O,EAAAwI,GAEA,MAAAtN,MAAAia,sBAAAxG,EAAA3O,EAAA9E,KAAA6X,aAAArE,SAAAhJ,KAAAxK,KAAA6X,cAAAvK,IAIA/O,EAAAqB,UAAAgU,UAAA,SAAAH,EAAA3O,EAAAwI,GAEA,MAAAtN,MAAAia,sBAAAxG,EAAA3O,EAAA9E,KAAA6X,aAAAjE,UAAApJ,KAAAxK,KAAA6X,cAAAvK,IAIA/O,EAAAqB,UAAAiU,OAAA,SAAAJ,EAAA3O,EAAAwI,GAEA,MAAAtN,MAAAia,sBAAAxG,EAAA3O,EAAA9E,KAAA6X,aAAAhE,OAAArJ,KAAAxK,KAAA6X,cAAAvK,IAIA/O,EAAAqB,UAAAkU,SAAA,SAAAL,EAAA3O,EAAAwI,GAEA,MAAAtN,MAAAia,sBAAAxG,EAAA3O,EAAA9E,KAAA6X,aAAA/D,SAAAtJ,KAAAxK,KAAA6X,cAAAvK,IAIA/O,EAAAqB,UAAAmU,SAAA,SAAAN,EAAA3O,GAEA,MAAA9E,MAAAia,sBAAAxG,EAAA3O,EAAA9E,KAAA6X,aAAA9D,SAAAvJ,KAAAxK,KAAA6X,gBAEAtZ,EAAAqB,UAAAsa,YAAA,SAAApV,EAAA+H,EAAAC,GAEA,GAAAqN,GAAA5T,MAUA,IAPAvG,KAAAkS,QAAAC,MAAAC,QAAAjJ,QAAA,SAAAuE,GACA5I,GAAA4I,EAAAhI,QACAgI,EAAAuF,KAAApG,EAAAC,GACAqN,EAAAzM,KAIAyM,EACA,MAAAA,EAEA,KACA,GAAAlG,GAAAjU,KAAAoa,uBAAAtV,EACA9E,MAAA6X,aAAA7D,OAAAC,GACA,MAAApI,IAEA,GAAAnG,GAAAZ,CACAe,GAAAC,WAAAJ,EAAAkE,cACAlE,EAAAiD,UAAA,CACA,IAAA+E,GAAA,GAAAvP,GAAAuH,EAAA1F,KAEA,OADA0N,GAAAf,YAAAE,EAAAC,GACAY,GAGAnP,EAAAqB,UAAAga,mBAAA,SAAAnG,EAAA/F,EAAA2M,GAGA,GAAA3U,GAAAgI,EAAAhI,MACAgO,EAAA,GAAAhV,GAAAgH,EAKA,OAJAA,GAAA+F,oBACAiC,EAAA3H,UACAsU,EAAA5G,EAAAC,GAEAA,GAGAnV,EAAAqB,UAAAqa,sBAAA,SAAAxG,EAAA3O,EAAAuV,EAAA/M,GAGA,GAAAoG,GAAA,GAAAhV,GAAAoG,EACA,IAAA,UAAAA,EAAAW,cACA,CACA,GAAAC,GAAAZ,CACAY,GAAA+F,oBACA5F,EAAAC,WAAAJ,EAAAkE,cAIA,GAFAyQ,EAAA5G,EAAAC,GAEApG,GAAAoG,EAAAS,SACA,aAAAT,EAAAS,OAAArP,UAAAW,eAAA,eAAAiO,EAAAS,OAAArP,UAAAW,eACA,CACA,GAAA6U,GAAA5G,EAAAS,OAAArP,SACAwV,GAAAjN,kBAAAvI,EAAAwI,GAKA,MAFAtN,MAAAgW,cAAAhW,KAAAkS,QAAAC,MAAA2D,UACA9V,KAAA2U,aACAjB,GAGAnV,EAAAqB,UAAAoH,mBAAA,SAAAlC,EAAAxI,GACA,GAAA2X,GAAAjU,KAAAoa,uBAAAtV,EACA9E,MAAA6X,aAAAhD,YAAAZ,EAAA3X,EAAAmU,OAAAnU,EAAA0I,MAAA1I,EAAAwY,QAOAvW,EAAAqB,UAAA0L,sBAAA,SAAAxG,EAAAuJ,EAAAhD,GAEA,GAAA4I,GAAAjU,KAAAoa,uBAAAtV,EACA9E,MAAA6X,aAAA7D,OAAAC,EAGA,IAAAvG,GAAA,GAAAvP,GAAA8V,EAAAnP,UAAA9E,KAEA,IAAAuG,SAAA8H,EAAA,CAEA,GAAAkM,GAAA7M,EAAA+E,cAAA1K,WACAsD,GAAAwB,EAAA0N,IACAlP,EAAAwB,EAAA,IAAA0N,GACA7M,EAAAf,YACA0B,EAAA+K,QAAA/N,EAAAwB,EACAwB,EAAAgL,QAAAhO,EAAAyB,GACAY,EAAAgF,UAAA3E,YAAAM,GAEA,MAAAX,IAMAnP,EAAAqB,UAAA4L,cAAA,SAAA1G,GAEA,GAAAmP,GAAAjU,KAAAoa,uBAAAtV,EACA9E,MAAA6X,aAAA7D,OAAAC,IAOA1V,EAAAqB,UAAA4a,cAAA,SAAA1V,GAEA,GAAAmP,GAAAjU,KAAAoa,uBAAAtV,GACAqP,EAAAF,EAAAE,MAIA,OAHAF,GAAAI,mBACAF,GACAnU,KAAAgW,cAAA7B,GACAF,GAIA1V,EAAAqB,UAAAwa,uBAAA,SAAAtV,GAIA,GAAAwU,KAGA,KAFAA,EAAA9Y,KAAAR,KAAAkS,QAAAC,MAAA2D,UAEAwD,EAAAzb,OAAA,GACA,CACA,GAAA2b,GAAAF,EAAAG,KAEA,IAAAD,EAAA1U,YAAAA,EACA,MAAA0U,MACAhZ,KAAAyU,MAAAqE,EAAAE,EAAA7R,UAGA,KAAA,IAAAlK,OAAA,mDAGAc,EAAAqB,UAAA6a,6BAAA,SAAAC,GAGA,GAAApB,KAGA,KAFAA,EAAA9Y,KAAAR,KAAAkS,QAAAC,MAAA2D,UAEAwD,EAAAzb,OAAA,GACA,CACA,GAAA2b,GAAAF,EAAAG,KAEA,IAAAD,EAAA1U,UAAAa,mBAAA+U,EACA,MAAAlB,MACAhZ,KAAAyU,MAAAqE,EAAAE,EAAA7R,UAGA,KAAA,IAAAlK,OAAA,mDAGAc,EAAAqB,UAAA+a,kBAAA,SAAAvR,GAEApJ,KAAA8X,qBAAAtX,KAAA4I,IAGA7K,EAAAqB,UAAAgb,qBAAA,SAAAxR,GAEApJ,KAAA8X,qBAAA5X,OAAAF,KAAA8X,qBAAA7X,QAAAmJ,GAAA,IAGA7K,EAAAqB,UAAAoR,cAAA,WAEA,GAAAlU,GAAAkD,IACAA,MAAA8X,qBAAA3O,QAAA,SAAAC,GACAA,EAAAyR,iBAAAzR,EAAAyR,gBAAA/d,MAIAyB,EAAAqB,UAAAqR,aAAA,SAAAvL,GAEA,GAAA5I,GAAAkD,IACAA,MAAA8X,qBAAA3O,QAAA,SAAAC,GACAA,EAAA0R,gBAAA1R,EAAA0R,eAAAhe,EAAA4I,MAIAnH,EAAAqB,UAAA8V,aAAA,SAAAqF,GAEA,GAAAje,GAAAkD,IACAA,MAAA8X,qBAAA3O,QAAA,SAAAC,GACAA,EAAA4R,QACA5R,EAAA4R,OAAAle,EAAAie,MAKAxc,EAAAqB,UAAA0V,oBAAA,SAAAyF,GAEA,GAAAje,GAAAkD,IACAA,MAAA8X,qBAAA3O,QAAA,SAAAC,GACAA,EAAA6R,eACA7R,EAAA6R,cAAAne,EAAAie,MAMAxc,EAAAqB,UAAAgV,eAAA,SAAAmG,GAEA,GAAAje,GAAAkD,IACAA,MAAA8X,qBAAA3O,QAAA,SAAAC,GACAA,EAAA8R,UACA9R,EAAA8R,SAAApe,EAAAie,MAKAxc,EAAAqB,UAAAmN,mBAAA,SAAArH,GAEA,GAAA5I,GAAAkD,IACAA,MAAA8X,qBAAA3O,QAAA,SAAAC,GACAA,EAAA+R,cACA/R,EAAA+R,aAAAre,EAAA4I,MAMAnH,EAAAqB,UAAA0S,qBAAA,SAAA5E,GAEA,GAAA5Q,GAAAkD,IACAA,MAAA8X,qBAAA3O,QAAA,SAAAC,GACAA,EAAAgS,gBACAhS,EAAAgS,eAAAte,EAAA4Q,MAKAnP,EAAAqB,UAAAoT,mBAAA,SAAAtF,GAEA,GAAA5Q,GAAAkD,IACAA,MAAA8X,qBAAA3O,QAAA,SAAAC,GACAA,EAAAiS,cACAjS,EAAAiS,aAAAve,EAAA4Q,MAMAnP,EAAAqB,UAAAsT,mBAAA,SAAAxF,GAEA,GAAA5Q,GAAAkD,IACAA,MAAA8X,qBAAA3O,QAAA,SAAAC,GACAA,EAAAkS,cACAlS,EAAAkS,aAAAxe,EAAA4Q,MAMAnP,EAAAqB,UAAA2S,6BAAA,SAAA7E,EAAAb,EAAAC,GAEA,GAAAhQ,GAAAkD,IACAA,MAAA8X,qBAAA3O,QAAA,SAAAC,GACAA,EAAAmS,wBACAnS,EAAAmS,uBAAAze,EAAA4Q,EAAAb,EAAAC,MAKAvO,EAAAqB,UAAA4b,kBAAA,SAAAC,GAEA,GAAA3e,GAAAkD,IACAA,MAAA8X,qBAAA3O,QAAA,SAAAC,GACAA,EAAAsS,cACAtS,EAAAsS,aAAA5e,EAAA2e,MAKAld,EAAAqB,UAAAmF,UAAA,WAEA,GAAA4W,GAAA,GAAArc,EACA,OAAAqc,GAAAC,UAAA5b,KAAAkS,QAAAC,QAGA5T,EAAAqB,UAAAgI,UAAA,SAAAiU,GAEA,GAAAC,GAAA,GAAAzc,GAAAW,KACAA,MAAAkS,QAAAC,MAAA2J,EAAAC,YAAAF,GACA7b,KAAA0Y,SAAA1Y,KAAAkS,QAAAC,QAGA5T,EAAAqB,UAAAoc,UAAA,WAEA,GAAAC,KAUA,OARAjc,MAAAkc,WAAAlc,KAAAkS,QAAAC,MAAA2D,SAAAmG,GAGAjc,KAAAkS,QAAAC,MAAAC,QAAAjJ,QAAA,SAAAuE,GAEAuO,EAAAzb,KAAAkN,EAAAhI,SAGAuW,GAGA1d,EAAAqB,UAAAuc,cAAA,SAAAnX,GAEAhF,KAAA6I,eAAA7D,EACAhF,KAAAgc,YAAA7S,QAAA,SAAAzD,GACAA,EAAAsD,UAAAhE,MAIAzG,EAAAqB,UAAAwc,cAAA,SAAApX,GAEAhF,KAAAmc,eAAAnX,GACAhF,KAAAiL,gBAAAjG,IAGAzG,EAAAqB,UAAAqL,gBAAA,SAAAjG,GAEAhF,KAAAgc,YAAA7S,QAAA,SAAAzD,GACAA,EAAAuF,gBAAAjG,MAIAzG,EAAAqB,UAAAyc,aAAA,SAAAC,GAEA,GAAAL,KAkBA,OAhBAjc,MAAAkc,WAAAlc,KAAAkS,QAAAC,MAAA2D,SAAAmG,GAEAA,EAAA9S,QAAA,SAAAzD,GACA4W,EAAAnc,SAAAuF,EAAAE,eAAA+D,KACAjE,EAAA+G,UAIAzM,KAAAkS,QAAAC,MAAAC,QAAAjJ,QAAA,SAAAuE,GACA4O,EAAAnc,SAAAuN,EAAAhI,MAAAE,eAAA+D,IACA+D,EAAAuF,OAGAvF,EAAAhB,SAGAuP,GAGA1d,EAAAqB,UAAA2c,iBAAA,WAEA,GAAAN,KAWA,OATAjc,MAAAkc,WAAAlc,KAAAkS,QAAAC,MAAA2D,SAAAmG,GAGAjc,KAAAkS,QAAAC,MAAAC,QAAAjJ,QAAA,SAAAuE,GACAA,EAAAkF,UACAqJ,EAAAzb,KAAAkN,EAAAhI,SAIAuW,GAGA1d,EAAAqB,UAAAsc,WAAA,SAAAjI,EAAAgI,GAEA,GAAAnf,GAAAkD,IACAiU,GAAAtM,SAAAwB,QAAA,SAAA/B,GACAtK,EAAAof,WAAA9U,EAAA6U,KAEA,UAAAhI,EAAAnP,UAAAW,eACAwW,EAAAzb,KAAAyT,EAAAnP,YAIAvG,EAAAqB,UAAA4c,wBAAA,SAAAC,GACAzc,KAAA0c,qBAAAD,KbulDGE,mBAAmB,GAAGC,yCAAyC,GAAGC,uCAAuC,GAAG7P,wBAAwB,GAAG2C,iBAAiB,GAAGxJ,iBAAiB,GAAG2W,qBAAqB,GAAGC,uBAAuB,GAAGrF,aAAa,GAAGsF,cAAc,KAAKC,IAAI,SAAS1f,EAAQf,EAAOD,GchtEnS,QAAAiC,GAAAwF,GAEAhE,KAAAgE,YAAAA,EACAhE,KAAAmS,MAAA,GAAA1T,GACAuB,KAAAiY,oBAAA,GAAApZ,GAAAmB,KAAAgE,aAPA,GAAAvF,GAAAlB,EAAA,eACAsB,EAAAtB,EAAA,yCASAf,GAAAD,QAAAiC,IdstEG0e,yCAAyC,EAAEC,cAAc,KAAKC,IAAI,SAAS7f,EAAQf,EAAOD,Ge5tE7F,QAAAkC,KAEAuB,KAAA8V,SAAA9V,KAAAkY,oBAAA3R,OAGA/J,EAAAD,QAAAkC,OfmuEM4e,IAAI,SAAS9f,EAAQf,EAAOD,GgB5uElC,QAAAmC,GAAAoG,GAGA9E,KAAA8E,UAAAA,EACA9E,KAAA2H,YAGAnL,EAAAD,QAAAmC,EAEAA,EAAAkB,UAAAyU,iBAAA,WAEArU,KAAAmU,SAEAnU,KAAAmU,OAAAmJ,YAAAtd,YACAA,MAAAmU,SAIAzV,EAAAkB,UAAA0d,YAAA,SAAAC,GAEA,GAAAzI,GAAA9U,KAAA2H,SAAA1H,QAAAsd,EACAzI,IAAA,GACA9U,KAAA2H,SAAAzH,OAAA4U,EAAA,IAGApW,EAAAkB,UAAA6V,SAAA,SAAA8H,GAEAA,EAAAlJ,mBACAkJ,EAAApJ,OAAAnU,KACAA,KAAA2H,SAAAnH,KAAA+c,IAGA7e,EAAAkB,UAAAyW,eAAA,SAAA5C,EAAA8J,GAEAvd,KAAAwd,uBAAA/J,EAAA8J,GAAA,IAGA7e,EAAAkB,UAAA4U,cAAA,SAAAf,EAAA8J,GAEAvd,KAAAwd,uBAAA/J,EAAA8J,GAAA,IAGA7e,EAAAkB,UAAA4d,uBAAA,SAAA/J,EAAA8J,EAAAE,GAGAF,EAAAlJ,mBACAkJ,EAAApJ,OAAAnU,IAEA,IAAA0d,GAAA1d,KAAA2H,SAAA1H,QAAAwT,GACAkK,EAAA3d,KAAA2H,SAAAiW,MAAA,EAAAF,GACAG,EAAA7d,KAAA2H,SAAAiW,MAAAF,EAAA,EAAA1d,KAAA2H,SAAA9J,OAEAmC,MAAA2H,SAAAgW,EAAAC,MAAA,GACAH,GAEAzd,KAAA2H,SAAAnH,KAAA+c,GACAvd,KAAA2H,SAAAnH,KAAAiT,KAIAzT,KAAA2H,SAAAnH,KAAAiT,GACAzT,KAAA2H,SAAAnH,KAAA+c,IAEA5d,MAAAC,UAAAY,KAAAyU,MAAAjV,KAAA2H,SAAAkW,IAGAnf,EAAAkB,UAAA8H,cAAA,WAEA,GAAAS,GAAAnI,KAAA2H,SAAAuN,IAAA,SAAAqI,GAAA,MAAAA,GAAAzY,WACA9E,MAAA8E,UAAA4C,cAAAS,IAGAzJ,EAAAkB,UAAAke,cAAA,SAAAC,GAEAxX,SAAAwX,IACAA,EAAA,EAGA,KAAA,GADAC,GAAAhe,KAAA8E,UAAAzC,KACA7E,EAAA,EAAAugB,EAAAvgB,EAAAA,IACAwgB,EAAA,IAAAA,CAEA,IAAAC,GAAA1X,SAAAvG,KAAAmU,OAAA,OAAAnU,KAAAmU,OAAArP,UAAAW,aACAqG,SAAAC,IAAA,KAAAiS,EAAA,KAAAC,EAAA,KAEAje,KAAA2H,SAAAwB,QAAA,SAAAoU,GAAAA,EAAAO,cAAAC,EAAA,WhBgvEMG,IAAI,SAAS3gB,EAAQf,EAAOD,GiB9zElC,QAAAoC,GAAAqF,GAEAhE,KAAAgE,YAAAA,EACAhE,KAAAme,iBAAAxX,SAAAC,cAAA,OACA5G,KAAAoe,iBAAAzX,SAAAC,cAAA,OACA5G,KAAAqe,aACA,IAAAC,IACA,OAAA,QAAA,MAAA,OAAA,OACA,SAAA,UAAA,QAAA,UAEAxhB,EAAAkD,IACAse,GAAAnV,QAAA,SAAAoV,GAEAzhB,EAAAuhB,WAAAE,GAAA,GAAA3f,GAAA9B,EAAAyhB,GACA,OAAAA,EAAAC,OAAA,GAAA,GAEA1hB,EAAAshB,iBAAAnY,YAAAnJ,EAAAuhB,WAAAE,GAAApa,SAGArH,EAAAqhB,iBAAAlY,YAAAnJ,EAAAuhB,WAAAE,GAAApa,UAGA,IAAA4O,GAAA,GACA/S,MAAAme,iBAAA/Z,UAAAC,IAAA,mBACArE,KAAAoe,iBAAAha,UAAAC,IAAA,mBACArE,KAAAme,iBAAA1W,MAAAsL,OAAAA,EAAA,EACA/S,KAAAoe,iBAAA3W,MAAAsL,OAAAA,EACA/S,KAAAye,oBAAA9X,SAAAC,cAAA,OACA5G,KAAAye,oBAAAra,UAAAC,IAAA,4BACArE,KAAAye,oBAAAhX,MAAAsL,OAAAA,EAAA,EACA/S,KAAAgZ,aAAAzS,OACAvG,KAAA0e,YAAAnY,OACAvG,KAAA2e,UAAA,EAtCA,GAAA/f,GAAArB,EAAA,mBACAsI,EAAAtI,EAAA,iBAwCAf,GAAAD,QAAAoC,EAGAgG,OAAAkD,eAAAlJ,EAAAiB,UAAA,cACAkI,IAAA,WAAA,MAAA9H,MAAA0e,aACA1W,IAAA,SAAAlI,GAEA,GAAA8e,GAAA5e,KAAA0e,WACA1e,MAAA0e,YAAA5e,EAEA8e,IAAA5e,KAAA0e,aAIA1e,KAAA2e,UACA3e,KAAAiZ,eAKAta,EAAAiB,UAAAqZ,UAAA,WAGA,GADAjZ,KAAA2e,UAAA,GACA3e,KAAA8Y,WAKA,MAFAjT,GAAAC,WAAA9F,KAAAme,sBACAtY,GAAAC,WAAA9F,KAAAoe,iBAGA,IAAAja,GAAAnE,KAAA8Y,WAAAhU,UAAAa,iBACA2Q,EAAAnS,EAAA4D,YACAwO,EAAApS,EAAA8D,aACA4W,EAAA/M,KAAAqG,MAAA7B,EAAA,GAAAnS,EAAA8J,WACA6Q,EAAAhN,KAAAqG,MAAA5B,EAAA,GAAApS,EAAAgK,SACAnO,MAAAme,iBAAA1W,MAAA+H,KAAAqP,EAAA,KACA7e,KAAAme,iBAAA1W,MAAAiI,IAAAoP,EAAA,IAIA,IAAAC,GAAA,GACAC,EAAAhf,KAAAgE,YAAAG,QAAA4D,YACAkX,EAAAjf,KAAAgE,YAAAG,QAAA8D,YAIApC,GAAAC,WAAA9F,KAAAme,kBACAtY,EAAAC,WAAA9F,KAAAoe,kBACAja,EAAA8B,YAAAjG,KAAAme,kBACAne,KAAAgE,YAAAG,QAAA8B,YAAAjG,KAAAoe,kBAEApe,KAAAkf,wBAAA,SAAAH,GAAAE,EAAA,GACAjf,KAAAkf,wBAAA,UAAAF,EAAA,EAAAD,GAAAE,EAAA,GACAjf,KAAAkf,wBAAA,QAAAF,EAAA,GAAAC,EAAAF,GACA/e,KAAAkf,wBAAA,SAAAF,EAAA,GAAAD,IAGApgB,EAAAiB,UAAAsf,wBAAA,SAAAC,EAAA3P,EAAAE,GAEA,GAAA0P,GAAApf,KAAAqe,WAAAc,GACAE,EAAAD,EAAAjb,QAAA4D,YAAA,EACAuX,EAAAF,EAAAjb,QAAA8D,aAAA,EAEA4E,EAAAiF,KAAAqG,MAAA3I,EAAA6P,GACAvS,EAAAgF,KAAAqG,MAAAzI,EAAA4P,EAGAF,GAAAjb,QAAAsD,MAAAuG,WAAAnB,EAAA,KACAuS,EAAAjb,QAAAsD,MAAAyG,UAAApB,EAAA,MAGAnO,EAAAiB,UAAAuZ,UAAA,WAEAnZ,KAAA2e,UAAA,EACA3e,KAAA8Y,WAAAvS,OACAV,EAAAC,WAAA9F,KAAAme,kBACAtY,EAAAC,WAAA9F,KAAAoe,kBACAvY,EAAAC,WAAA9F,KAAAye,oBAGA,KAAA,GAAAF,KAAAve,MAAAqe,WACAre,KAAAqe,WAAAE,GAAAgB,QAAA,GAGA5gB,EAAAiB,UAAA4f,YAAA,SAAAC,GAEA,GAAAzf,KAAAgZ,aAAA,CAIA,GACA9H,GADA4E,EAAA9V,KAAAgE,YAAAkO,QAAAC,MAAA2D,QAEA,SAAA2J,EAAA9V,GACAuH,EAAAlR,KAAAgE,YAAA6T,aAAApB,cAAAzW,KAAA8Y,WAAA9Y,KAAAgZ,aAAAtT,MAAA,YAAA,GACA,SAAA+Z,EAAA9V,GACAuH,EAAAlR,KAAAgE,YAAA6T,aAAApB,cAAAzW,KAAA8Y,WAAA9Y,KAAAgZ,aAAAtT,MAAA,YAAA,GACA,SAAA+Z,EAAA9V,GACAuH,EAAAlR,KAAAgE,YAAA6T,aAAApB,cAAAzW,KAAA8Y,WAAA9Y,KAAAgZ,aAAAtT,MAAA,cAAA,GACA,UAAA+Z,EAAA9V,GACAuH,EAAAlR,KAAAgE,YAAA6T,aAAApB,cAAAzW,KAAA8Y,WAAA9Y,KAAAgZ,aAAAtT,MAAA,cAAA,GACA,SAAA+Z,EAAA9V,GACAuH,EAAAlR,KAAAgE,YAAA6T,aAAApB,cAAAzW,KAAA8Y,WAAA9Y,KAAAgZ,aAAAtT,MAAA,QAAA,GACA,UAAA+Z,EAAA9V,GACAuH,EAAAlR,KAAAgE,YAAA6T,aAAApB,cAAAX,EAAA9V,KAAAgZ,aAAAtT,MAAA,YAAA,GACA,WAAA+Z,EAAA9V,GACAuH,EAAAlR,KAAAgE,YAAA6T,aAAApB,cAAAX,EAAA9V,KAAAgZ,aAAAtT,MAAA,YAAA,GACA,WAAA+Z,EAAA9V,GACAuH,EAAAlR,KAAAgE,YAAA6T,aAAApB,cAAAX,EAAA9V,KAAAgZ,aAAAtT,MAAA,cAAA,GACA,YAAA+Z,EAAA9V,KACAuH,EAAAlR,KAAAgE,YAAA6T,aAAApB,cAAAX,EAAA9V,KAAAgZ,aAAAtT,MAAA,cAAA,IAGAwL,IAEAlR,KAAAgE,YAAAG,QAAA8B,YAAAjG,KAAAye,qBACAze,KAAAye,oBAAAhX,MAAA+H,KAAAsC,KAAA4N,MAAAxO,EAAArE,GAAA,KACA7M,KAAAye,oBAAAhX,MAAAiI,IAAAoC,KAAA4N,MAAAxO,EAAApE,GAAA,KACA9M,KAAAye,oBAAAhX,MAAAF,MAAAuK,KAAA4N,MAAAxO,EAAA3J,OAAA,KACAvH,KAAAye,oBAAAhX,MAAAD,OAAAsK,KAAA4N,MAAAxO,EAAA1J,QAAA,QAIA7I,EAAAiB,UAAA+f,WAAA,WAEA9Z,EAAAC,WAAA9F,KAAAye,sBAQA9f,EAAAiB,UAAAsZ,gBAAA,SAAAxL,GAGA,GAAA+R,GAAAzf,KAAA4f,qBACAH,IACAzf,KAAA6f,mBAAAJ,EAAA/R,IAMA/O,EAAAiB,UAAAggB,oBAAA,WAEA,IAAA,GAAArB,KAAAve,MAAAqe,WACA,CACA,GAAAoB,GAAAzf,KAAAqe,WAAAE,EACA,IAAAkB,EAAAF,OACA,MAAAE,KAKA9gB,EAAAiB,UAAAigB,mBAAA,SAAAJ,EAAA/R,GAEA1N,KAAA8Y,aAEA,SAAA2G,EAAA9V,GACA3J,KAAAgE,YAAA2V,eAAA3Z,KAAA8Y,WAAApL,GACA,UAAA+R,EAAA9V,GACA3J,KAAAgE,YAAA6V,gBAAA7Z,KAAA8Y,WAAApL,GACA,QAAA+R,EAAA9V,GACA3J,KAAAgE,YAAA8V,aAAA9Z,KAAA8Y,WAAApL,GACA,SAAA+R,EAAA9V,GACA3J,KAAAgE,YAAA+V,eAAA/Z,KAAA8Y,WAAApL,GACA,SAAA+R,EAAA9V,GACA3J,KAAAgE,YAAAgW,eAAAha,KAAA8Y,WAAApL,GACA,WAAA+R,EAAA9V,GACA3J,KAAAgE,YAAA2V,eAAA3Z,KAAAgE,YAAAkO,QAAAC,MAAA2D,SAAApI,GACA,YAAA+R,EAAA9V,GACA3J,KAAAgE,YAAA6V,gBAAA7Z,KAAAgE,YAAAkO,QAAAC,MAAA2D,SAAApI,GACA,UAAA+R,EAAA9V,GACA3J,KAAAgE,YAAA8V,aAAA9Z,KAAAgE,YAAAkO,QAAAC,MAAA2D,SAAApI,GACA,WAAA+R,EAAA9V,IACA3J,KAAAgE,YAAA+V,eAAA/Z,KAAAgE,YAAAkO,QAAAC,MAAA2D,SAAApI,OjB00EGvH,iBAAiB,GAAG2Z,kBAAkB,KAAKC,IAAI,SAASxiB,EAAQf,EAAOD,GkBhiF1E,QAAAqC,GAAAohB,EAAArW,GAEA3J,KAAAggB,MAAAA,EACAhgB,KAAA2J,GAAAA,CACA,IAAA4U,GAAA5U,EAAAsW,QAAA,KAAA,GACAjgB,MAAAmE,QAAAwC,SAAAC,cAAA,OACA5G,KAAAmE,QAAAC,UAAAC,IAAA,mBACArE,KAAAmE,QAAAC,UAAAC,IAAA,qBACArE,KAAAmE,QAAAC,UAAAC,IAAA,cAAAka,GACAve,KAAAmE,QAAAC,UAAAC,IAAA,cAAAka,EAAA,SACAve,KAAAkgB,eAAA,cAAA3B,EAAA,cACAve,KAAAmgB,iBAAA,GAAA3gB,GAAAQ,KAAAmE,QAAA,YAAAnE,KAAA+Q,aAAAvG,KAAAxK,OACAA,KAAAogB,gBAAA,GAAA5gB,GAAAQ,KAAAmE,QAAA,WAAAnE,KAAA2f,WAAAnV,KAAAxK,OACAA,KAAAuf,QAAA,EAfA,GAAA/f,GAAAjC,EAAA,wBAkBAf,GAAAD,QAAAqC,EAEAA,EAAAgB,UAAAmR,aAAA,SAAAzU,GAEA0D,KAAAuf,QAAA,EACAvf,KAAAmE,QAAAC,UAAAC,IAAArE,KAAAkgB,gBACAlgB,KAAAggB,MAAAR,YAAAxf,KAAA1D,IAGAsC,EAAAgB,UAAA+f,WAAA,SAAArjB,GAEA0D,KAAAuf,QAAA,EACAvf,KAAAmE,QAAAC,UAAAvE,OAAAG,KAAAkgB,gBACAlgB,KAAAggB,MAAAL,WAAA3f,KAAA1D,MlBsiFG0Q,wBAAwB,KAAKqT,IAAI,SAAS9iB,EAAQf,EAAOD,GmBxjF5D,QAAA8C,GAAA2E,GAEAhE,KAAAgE,YAAAA,EAfA,GAAAvF,GAAAlB,EAAA,qBACAmB,EAAAnB,EAAA,oBACAyB,EAAAzB,EAAA,gCACAwB,EAAAxB,EAAA,yCACA2B,EAAA3B,EAAA,uCACAsB,EAAAtB,EAAA,0CACAuB,EAAAvB,EAAA,mCACAY,EAAAZ,EAAA,oBACAsI,EAAAtI,EAAA,iBAUAf,GAAAD,QAAA8C,EAEAA,EAAAO,UAAAmc,YAAA,SAAAuE,GAEA,GAAAC,GAAAC,KAAAC,MAAAH,GACAnO,EAAA,GAAA1T,EAGA,OAFA0T,GAAA2D,SAAA9V,KAAA0gB,YAAAH,EAAAI,WACAxO,EAAAC,QAAApS,KAAA4gB,cAAAL,EAAAM,aACA1O,GAGA9S,EAAAO,UAAA8gB,YAAA,SAAAI,GAEA,GAAAC,GAAAD,EAAAnZ,SACAA,KACA7K,EAAAkD,IACA+gB,GAAA5X,QAAA,SAAA6X,GAEA,GAAAzD,GAAAzgB,EAAA4jB,YAAAM,EACA,QAAAzD,GACA5V,EAAAnH,KAAA+c,IAKA,IAAAzY,GAAA9E,KAAAihB,iBAAAH,EAAAnZ,EACA,IAAA,OAAA7C,EACA,MAAA,KAGA,IAAAmP,GAAA,GAAAvV,GAAAoG,EAOA,OANAmP,GAAAtM,SAAAA,EACAsM,EAAAtM,SAAAiR,UAAAzP,QAAA,SAAAoU,GACAA,EAAApJ,OAAAF,IAEAA,EAAAtM,SAAAiR,UAEA3E,GAGA5U,EAAAO,UAAAqhB,iBAAA,SAAAH,EAAAnZ,GAEA,GAEA7C,GAFAW,EAAAqb,EAAArb,cACAyb,EAAAJ,EAAA9b,MAGAmD,IAIA,IAHAR,EAAAwB,QAAA,SAAAoU,GAAApV,EAAA3H,KAAA+c,EAAAzY,aAGA,UAAAW,EAAA,CAEA,GADAX,EAAA,GAAA9F,GAAAuK,cAAA2X,EAAAlhB,KAAAgE,cACAc,EAAA2G,kBACA,MAAA,KACA3G,GAAA2G,oBACA5F,EAAAC,WAAAhB,EAAA8E,kBAEA,IAAA,eAAAnE,EACAX,EAAA,GAAA/F,GAAAiB,KAAAgE,YAAAmE,OACA,IAAA,aAAA1C,EACAX,EAAA,GAAA5F,GAAAc,KAAAgE,YAAAmE,OACA,CAAA,GAAA,SAAA1C,EAaA,KAAA,IAAAhI,OAAA,iDAAAgI,EAPA,IAAA0b,GAAAD,EAAAjc,eAEAH,GADAqc,EACA,GAAAtiB,GAAAmB,KAAAgE,aAEA,GAAAlF,GAAAkB,KAAAgE,aAUA,MAHAc,GAAA8C,UAAAsZ,GAGApc,GAGAzF,EAAAO,UAAAghB,cAAA,SAAAC,GAEA,GAAAzO,MACAtV,EAAAkD,IAyBA,OAxBA6gB,GAAA1X,QAAA,SAAAiY,GACA,GAEAtc,GAFAW,EAAA2b,EAAA3b,cACAyb,EAAAE,EAAApc,KAEA,IAAA,UAAAS,IACAX,EAAA,GAAA9F,GAAAuK,cAAA2X,EAAApkB,EAAAkH,aACAc,EAAA2G,mBAAA,CACA5F,EAAAC,WAAAhB,EAAA8E,cACA9E,EAAA6D,UAAA,CACA,IAAA+E,GAAA,GAAAvP,GAAA2G,EAAAhI,EAAAkH,cACAod,EAAA/O,SAAA7C,KAAA7I,SAAA0D,KAAAtC,aACAqZ,EAAA/O,SAAA3C,IAAA/I,SAAA0D,KAAApC,aAAA,MACAmZ,EAAA/O,SAAA7C,KAAA,GACA4R,EAAA/O,SAAA3C,IAAA,IAEAhC,EAAAf,YAAAyU,EAAA/O,SAAA7C,KAAA4R,EAAA/O,SAAA3C,KACAhC,EAAAkF,SAAAwO,EAAAxO,SACAlF,EAAAkF,UACAlF,EAAAhB,OACA0F,EAAA5R,KAAAkN,MAKA0E,KnBykFG8K,yCAAyC,EAAE5F,kCAAkC,EAAEC,wCAAwC,EAAEpE,+BAA+B,EAAEqE,sCAAsC,EAAEmF,mBAAmB,GAAG0E,oBAAoB,GAAGC,mBAAmB,GAAGnb,iBAAiB,KAAKob,IAAI,SAAShkB,EAAQf,EAAOD,GoBxsF1T,QAAA+C,MAEA9C,EAAAD,QAAA+C,EAEAA,EAAAM,UAAAgc,UAAA,SAAAzJ,GAEA,GAAAwO,GAAA3gB,KAAAwhB,gBAAArP,EAAA2D,UACA1D,EAAApS,KAAAyhB,kBAAAtP,EAAAC,QACA,OAAAoO,MAAAkB,WAAAf,UAAAA,EAAAE,YAAAzO,KAGA9S,EAAAM,UAAA4hB,gBAAA,SAAAvN,GAEA,GAAA0N,KACA1N,GAAAnP,UAAAC,UAAA4c,EAEA,IAAAZ,MACAjkB,EAAAkD,IACAiU,GAAAtM,SAAAwB,QAAA,SAAAoU,GACAwD,EAAAvgB,KAAA1D,EAAA0kB,gBAAAjE,KAGA,IAAAuD,KAIA,OAHAA,GAAArb,cAAAwO,EAAAnP,UAAAW,cACAqb,EAAA9b,MAAA2c,EACAb,EAAAnZ,SAAAoZ,EACAD,GAGAxhB,EAAAM,UAAA6hB,kBAAA,SAAArP,GAEA,GAAAyO,KAeA,OAdAzO,GAAAjJ,QAAA,SAAAuE,GACA,GAAAkU,MACAC,EAAAnU,EAAAhI,KACAmc,GAAA9c,UAAA6c,EAEA,IAAAE,KACAA,GAAArc,cAAAoc,EAAApc,cACAqc,EAAA9c,MAAA4c,EACAE,EAAAna,YACAma,EAAAzP,SAAA3E,EAAAoF,cACAgP,EAAAlP,SAAAlF,EAAAkF,SACAiO,EAAArgB,KAAAshB,KAGAjB,QpB+sFMkB,IAAI,SAASxkB,EAAQf,EAAOD,GqB7vFlC,QAAA4C,GAAA6iB,EAAAC,EAAA7Z,GAGApI,KAAAgiB,kBAAAA,EAEAhiB,KAAAiiB,cAAAA,EACAjiB,KAAAoI,gBAAAA,EACApI,KAAAkiB,WAAAvb,SAAAC,cAAA,OACA5G,KAAAkiB,WAAA9d,UAAAC,IAAA+D,EAAA,sBAAA,qBACApI,KAAA8N,iBAAA,GAAAtO,GAAAQ,KAAAkiB,WAAA,YAAAliB,KAAA+N,YAAAvD,KAAAxK,OACAA,KAAAmiB,aAAA,GACAniB,KAAAoiB,wBAAA,EAdA,GAAA5iB,GAAAjC,EAAA,yBACAsI,EAAAtI,EAAA,iBAgBAf,GAAAD,QAAA4C,EAEAA,EAAAS,UAAAmO,YAAA,SAAAzR,GAEA0D,KAAAsO,eAAAhS,IAGA6C,EAAAS,UAAAiP,UAAA,SAAAvS,GAEA0D,KAAA8O,cAAAxS,IAGA6C,EAAAS,UAAAmR,aAAA,SAAAzU,GAEA,GAAA0D,KAAAoiB,uBAAA,CAEApiB,KAAAoiB,wBAAA,CAEA,IAAApe,GAAAhE,KAAAgiB,kBAAAhe,WACAA,GAAAgN,eACA,IAAA7B,GAAA7S,EAAAkS,MAAAxO,KAAAqiB,mBAAA7T,MACAa,EAAA/S,EAAAmS,MAAAzO,KAAAqiB,mBAAA5T,KACAzO,MAAAuP,aAAAJ,EAAAE,GACArP,KAAAqiB,mBAAA/lB,EACA0D,KAAAoiB,wBAAA,EACApe,EAAAiN,iBAGA9R,EAAAS,UAAA2P,aAAA,SAAAJ,EAAAE,GAEA,GAAAiT,GAAAtiB,KAAAgiB,kBAAArc,iBAAAoC,YACAwa,EAAAviB,KAAAgiB,kBAAArc,iBAAAsC,aACAua,EAAAxiB,KAAAiiB,cAAAtc,iBAAAoC,YACA0a,EAAAziB,KAAAiiB,cAAAtc,iBAAAsC,aAEAya,EAAA1iB,KAAAoI,gBAAAma,EAAAD,EACAK,EAAA3iB,KAAAoI,gBAAAqa,EAAAD,EACAI,EAAA5iB,KAAAoI,gBAAAiH,EAAAF,EACA0T,EAAAH,EAAAE,EACAE,EAAAH,EAAAC,CAEA,IAAAC,EAAA7iB,KAAAmiB,cAAAW,EAAA9iB,KAAAmiB,aACA,CAGA,GAAAY,GAAAF,EAAA7iB,KAAAmiB,cAAAU,EAAAH,GACAI,EAAA9iB,KAAAmiB,cAAAW,EAAAH,CAEA,KAAAI,EACA,OAGA/iB,KAAAoI,iBAEApI,KAAAgiB,kBAAA1a,OAAAgb,EAAAO,GACA7iB,KAAAiiB,cAAA3a,OAAAkb,EAAAM,KAIA9iB,KAAAgiB,kBAAA1a,OAAAub,EAAAN,GACAviB,KAAAiiB,cAAA3a,OAAAwb,EAAAL,KAIAtjB,EAAAS,UAAA0O,eAAA,SAAAhS,GAEAuJ,EAAAmd,6BACAhjB,KAAAijB,oBAEAjjB,KAAAijB,kBAAA7X,eACApL,MAAAijB,mBAEAjjB,KAAA2O,iBAEA3O,KAAA2O,eAAAvD,eACApL,MAAA2O,gBAEA3O,KAAAijB,kBAAA,GAAAzjB,GAAA5C,OAAA,YAAAoD,KAAA+Q,aAAAvG,KAAAxK,OACAA,KAAA2O,eAAA,GAAAnP,GAAA5C,OAAA,UAAAoD,KAAA6O,UAAArE,KAAAxK,OACAA,KAAAqiB,mBAAA/lB,GAGA6C,EAAAS,UAAAkP,cAAA,WAEAjJ,EAAAqd,4BACAvc,SAAA0D,KAAAjG,UAAAvE,OAAA,qBACAG,KAAAijB,oBAEAjjB,KAAAijB,kBAAA7X,eACApL,MAAAijB,mBAEAjjB,KAAA2O,iBAEA3O,KAAA2O,eAAAvD,eACApL,MAAA2O,mBrBqwFG3B,wBAAwB,GAAG7G,iBAAiB,KAAKgd,IAAI,SAAS5lB,EAAQf,EAAOD,GsB72FhF,QAAA6C,GAAA+I,EAAAC,GAEApI,KAAAmI,gBAAAA,EACAnI,KAAAoI,gBAAAA,EACApI,KAAAoN,aAAAzG,SAAAC,cAAA,OACA5G,KAAAojB,gBACApjB,KAAAqjB,oBAbA,GAAAlkB,GAAA5B,EAAA,iBACAsI,EAAAtI,EAAA,iBAeAf,GAAAD,QAAA6C,EAEAA,EAAAQ,UAAAyjB,kBAAA,WAEA,GAAArjB,KAAAmI,gBAAAtK,QAAA,EACA,KAAA,IAAAJ,OAAA,iDAEAuC,MAAAojB,eACA,KAAA,GAAA5lB,GAAA,EAAAA,EAAAwC,KAAAmI,gBAAAtK,OAAA,EAAAL,IACA,CACA,GAAAwkB,GAAAhiB,KAAAmI,gBAAA3K,GACAykB,EAAAjiB,KAAAmI,gBAAA3K,EAAA,GACA8lB,EAAA,GAAAnkB,GAAA6iB,EAAAC,EAAAjiB,KAAAoI,gBACApI,MAAAojB,aAAA5iB,KAAA8iB,GAGAtjB,KAAAujB,0BAAAvB,GACAhiB,KAAAoN,aAAAnH,YAAAqd,EAAApB,YAEAliB,KAAAujB,0BAAAvjB,KAAAmI,gBAAAyV,MAAA,IAAA,KAGAxe,EAAAQ,UAAA8H,cAAA,SAAAC,GAEA3H,KAAAwjB,gBAGAxjB,KAAAmI,gBAAAR,EACA3H,KAAAqjB,qBAGAjkB,EAAAQ,UAAA4jB,cAAA,WAEAxjB,KAAAmI,gBAAAgB,QAAA,SAAArE,GAEAA,EAAAa,mBAEAb,EAAAa,iBAAAvB,UAAAvE,OAAA,+BACAiF,EAAAa,iBAAAvB,UAAAvE,OAAA,iCACAgG,EAAAC,WAAAhB,EAAAa,qBAGA3F,KAAAojB,aAAAja,QAAA,SAAAsa,GAAA5d,EAAAC,WAAA2d,EAAAvB,eAGA9iB,EAAAQ,UAAAmG,QAAA,WAEA/F,KAAAwjB,gBACAxjB,KAAAoN,aAAA8G,WAAAoJ,YAAAtd,KAAAoN,eAGAhO,EAAAQ,UAAA2jB,0BAAA,SAAAze,GAEAA,GAEAgH,QAAAC,IAAA,aAGAlG,EAAAC,WAAAhB,EAAAa,kBACA3F,KAAAoN,aAAAnH,YAAAnB,EAAAa,kBACAb,EAAAa,iBAAAvB,UAAAC,IACArE,KAAAoI,gBAAA,8BAAA,kCAQAhJ,EAAAQ,UAAAyN,kBAAA,SAAAvI,EAAAwI,GAUA,IAAA,GARAoW,GAAA1jB,KAAAoI,gBAAApI,KAAAoN,aAAAnF,aAAAjI,KAAAoN,aAAArF,YACA4b,EAAAD,EAAApW,EACAsW,EAAA5jB,KAAAoI,gBACApI,KAAAojB,aAAA,GAAAlB,WAAAja,aAAAjI,KAAAojB,aAAA,GAAAlB,WAAAna,YAEA8b,EAAAH,EAAAC,EAAAC,EAAA5jB,KAAAojB,aAAAvlB,OACAimB,EAAAD,EAAAH,EAEAlmB,EAAA,EAAAA,EAAAwC,KAAAmI,gBAAAtK,OAAAL,IACA,CACA,GACAumB,GADA3c,EAAApH,KAAAmI,gBAAA3K,EAEA4J,KAAAtC,GAEAif,EAAA/jB,KAAAoI,gBAAAhB,EAAAzB,iBAAAsC,aAAAb,EAAAzB,iBAAAoC,YACAgc,GAAAD,GAGAC,EAAAJ,EAEA3jB,KAAAoI,gBACAhB,EAAAE,OAAAF,EAAAG,MAAAuK,KAAAqG,MAAA4L,IAEA3c,EAAAE,OAAAwK,KAAAqG,MAAA4L,GAAA3c,EAAAI,UAIApI,EAAAQ,UAAA0H,OAAA,SAAAC,EAAAC,GAEA,KAAAxH,KAAAmI,gBAAAtK,QAAA,GAAA,CAGA,GAAAL,EAGA,KAAAA,EAAA,EAAAA,EAAAwC,KAAAmI,gBAAAtK,OAAAL,IACA,CACA,GAAAwmB,GAAAhkB,KAAAmI,gBAAA3K,EAMA,IALAwC,KAAAoI,gBACA4b,EAAA1c,OAAAC,EAAAyc,EAAAxc,QAEAwc,EAAA1c,OAAA0c,EAAAzc,MAAAC,GAEAhK,EAAAwC,KAAAojB,aAAAvlB,OAAA,CACA,GAAAomB,GAAAjkB,KAAAojB,aAAA5lB,EACAwC,MAAAoI,gBACA6b,EAAA/B,WAAAza,MAAAF,MAAAA,EAAA,KAEA0c,EAAA/B,WAAAza,MAAAD,OAAAA,EAAA,MAKA,GAAA0c,GAAA,EAEApnB,EAAAkD,IACAA,MAAAmI,gBAAAgB,QAAA,SAAArE,GAEA,GAAAif,GAAAjnB,EAAAsL,gBACAtD,EAAA0C,OACA1C,EAAAyC,KACA2c,IAAAH,GAIA,IAAAH,GAAA5jB,KAAAoI,gBACApI,KAAAojB,aAAA,GAAAlB,WAAAja,aAAAjI,KAAAojB,aAAA,GAAAlB,WAAAna,YAGAoc,EAAAnkB,KAAAoI,gBAAAZ,EAAAD,CACA4c,IAAAP,EAAA5jB,KAAAojB,aAAAvlB,OAGAqmB,EAAApS,KAAAC,IAAAmS,EAAA,EACA,IAAA7M,GAAA8M,EAAAD,EAIAE,EAAA,CACA,KAAA5mB,EAAA,EAAAA,EAAAwC,KAAAmI,gBAAAtK,OAAAL,IACA,CACA,GAAA4J,GAAApH,KAAAmI,gBAAA3K,GACA6mB,EAAArkB,KAAAoI,gBACAhB,EAAAzB,iBAAAsC,aACAb,EAAAzB,iBAAAoC,YAEAuc,EAAAjN,EAAA,EAAAvF,KAAAqG,MAAAkM,EAAAhN,GACAvF,KAAAyS,KAAAF,EAAAhN,EACA+M,IAAAE,EAGA9mB,IAAAwC,KAAAmI,gBAAAtK,OAAA,IACAymB,GAAAH,EAAAC,GAGApkB,KAAAoI,gBACAhB,EAAAE,OAAAF,EAAAG,MAAA+c,GAEAld,EAAAE,OAAAgd,EAAAld,EAAAI,QAGAxH,KAAAoN,aAAA3F,MAAAF,MAAAA,EAAA,KACAvH,KAAAoN,aAAA3F,MAAAD,OAAAA,EAAA,StBw3FGrB,iBAAiB,GAAGqe,gBAAgB,KAAKC,IAAI,SAASlnB,EAAQf,EAAOD,GuB7iGxE,QAAAyB,GAAAmW,GAEAnU,KAAAmU,OAAAA,CACA,IAAAuQ,GAAA1mB,EAAA4B,UAAA+kB,eAAAna,KAAAxK,KACAA,MAAA4kB,YAAAje,SAAAC,cAAA,OACA5G,KAAA6kB,YAAAle,SAAAC,cAAA,OACA5G,KAAA8kB,mBAAAne,SAAAC,cAAA,OACA5G,KAAA4kB,YAAAxgB,UAAAC,IAAA,cACArE,KAAA4kB,YAAAxgB,UAAAC,IAAA,qBACArE,KAAA6kB,YAAAzgB,UAAAC,IAAA,mBACArE,KAAA8kB,mBAAA1gB,UAAAC,IAAA,2BACArE,KAAA4kB,YAAA3e,YAAAjG,KAAA6kB,aACA7kB,KAAAmU,OAAA3O,KAAAf,oBACAzE,KAAA4kB,YAAA3e,YAAAjG,KAAA8kB,oBAEA9kB,KAAAmU,OAAA3O,KAAAuf,eAAA9e,YAAAjG,KAAA4kB,YAEA,IAAAlf,GAAAyO,EAAArP,UACAyD,EAAA7C,EAAA8G,cACA3F,EAAA7G,IACAA,MAAAglB,gBACA3b,cAAA,SAAA/M,GAAAuK,EAAAsV,cAAA7f,EAAA0I,QACAmG,kBAAA,SAAA7O,GAAAuK,EAAAoE,gBAAA3O,EAAA0I,SAEAhF,KAAA8I,kBACApD,EAAAuB,YAAAjH,KAAAglB,gBAEAhlB,KAAA6kB,YAAA7a,UAAAzB,EAGAvI,KAAAmU,OAAArP,oBAAA9F,IAAAgB,KAAAmU,OAAArP,UAAAd,YAAA0Y,qBACA1c,KAAA8kB,mBAAA9a,UAAAhK,KAAAmU,OAAArP,UAAAd,YAAA0Y,uBAGA1c,KAAA8kB,mBAAA9a,UAAA,8BAGAhK,KAAAilB,cAAAjlB,KAAA4kB,aAEA5kB,KAAAiJ,gBAAA,GAAAxJ,GAAAO,KAAA4kB,YAAAF,GACA1kB,KAAAiJ,gBAAAC,SAAA,EACAlJ,KAAAklB,kBAAA,GAAA1lB,GAAAQ,KAAA4kB,YAAA,QAAA5kB,KAAAmlB,eAAA3a,KAAAxK,OACAA,KAAA8N,iBAAA,GAAAtO,GAAAQ,KAAA4kB,YAAA,YAAA5kB,KAAA+N,YAAAvD,KAAAxK,OACAA,KAAAolB,mBAAA,GAAA5lB,GAAAQ,KAAA8kB,mBAAA,YAAA9kB,KAAAuK,qBAAAC,KAAAxK,OAEAA,KAAAqlB,cAAA,GACArlB,KAAAiS,cAAA,IAtDA,GAAAjT,GAAAzB,EAAA,gCACAkC,EAAAlC,EAAA,4BACAiC,EAAAjC,EAAA,yBACAsI,EAAAtI,EAAA,iBAsDAf,GAAAD,QAAAyB,EAEAA,EAAA4B,UAAAqH,YAAA,SAAAmC,GACApJ,KAAA8I,eAAAtI,KAAA4I,IAGApL,EAAA4B,UAAA0J,eAAA,SAAAF,GAEApJ,KAAA8I,eAAA5I,OAAAF,KAAA8I,eAAA7I,QAAAmJ,GAAA,IAGApL,EAAA4B,UAAAuc,cAAA,SAAAnX,GAEAhF,KAAAiJ,gBAAAC,QAAAlE,GAGAhH,EAAA4B,UAAAmO,YAAA,SAAAzR,GAEA0D,KAAAiJ,gBAAAC,SACAlJ,KAAAiJ,gBAAAqc,mBAAA,IAAA,GACAtlB,KAAA0O,mBAEA1O,KAAA0O,iBAAAtD,eACApL,MAAA0O,kBAEA1O,KAAA2O,iBAEA3O,KAAA2O,eAAAvD,eACApL,MAAA2O,gBAEA3O,KAAAulB,kBAAAjpB,EAAA8c,QACApZ,KAAA0O,iBAAA,GAAAlP,GAAAQ,KAAA4kB,YAAA,YAAA5kB,KAAA4O,YAAApE,KAAAxK,OACAA,KAAA2O,eAAA,GAAAnP,GAAA5C,OAAA,UAAAoD,KAAA6O,UAAArE,KAAAxK,QAGAhC,EAAA4B,UAAAiP,UAAA,WAEA7O,KAAAiJ,gBAAAC,SACAlJ,KAAAiJ,gBAAAqc,mBAAA,IAAA,GACAtlB,KAAA4kB,aACA5kB,KAAA4kB,YAAAxgB,UAAAvE,OAAA,sBAEAG,KAAAwlB,SAAA,EACAxlB,KAAA0O,iBAAAtD,SACApL,KAAA2O,eAAAvD,eACApL,MAAA0O,uBACA1O,MAAA2O,gBAIA3Q,EAAA4B,UAAA6lB,qBAAA,SAAApX,EAAAqX,GACA,GAAAC,GAAAD,EAAArX,EAAAuX,KAAApW,MAAAkW,EAAArX,EAAAuX,KAAAC,MACAC,EAAAhU,KAAAiU,IAAA1X,EAAA2X,MAAAN,EACAI,GAAA9lB,KAAAqlB,eAAAM,GACA3lB,KAAAimB,aAAAjmB,KAAAqO,EAAArJ,QAGAhH,EAAA4B,UAAAqmB,aAAA,SAAApf,EAAA7B,GACA6B,EAAAiC,eAAAK,QAAA,SAAAC,GACAA,EAAA8c,WACA9c,EAAA8c,WAAAppB,KAAA+J,EAAA7B,MAAAA,OAMAhH,EAAA4B,UAAAgP,YAAA,SAAAtS,GAEA,KAAAwV,KAAAiU,IAAA/lB,KAAAulB,kBAAAjpB,EAAA8c,SAAA,IAAA,CAEApZ,KAAA4kB,YAAAxgB,UAAAC,IAAA,sBACArE,KAAAwlB,SAAA,EACAxlB,KAAAmmB,KAAAnmB,KAAAomB,QACApmB,KAAAomB,QAAA9pB,EAAA8c,QACApZ,KAAAuV,UAAAvV,KAAAomB,QAAApmB,KAAAmmB,IACA,IAAAE,GAAArmB,KAAA4kB,YAAA0B,wBACAjY,EAAArO,KAAAuV,UAAA,GAAAvQ,MAAA,OAAAghB,MAAAK,EAAA7W,KAAAoW,KAAAS,IACArhB,MAAA,QAAAghB,MAAAK,EAAAR,MAAAD,KAAAS,EACA,KAAArmB,KAAAuV,WAAAvV,KAAAylB,qBAAApX,EAAArO,KAAAomB,WAGApoB,EAAA4B,UAAAqL,gBAAA,SAAAjG,GAEAhF,KAAA8kB,mBAAArd,MAAAyD,QAAAlG,EAAA,OAAA,SAGAhH,EAAA4B,UAAA2mB,YAAA,WAEA,GAAAvmB,KAAAmU,OAAArP,oBAAA9F,GACA,CACA,GAAA0G,GAAA1F,KAAAmU,OAAArP,UACAyD,EAAA7C,EAAA8G,aACAxM,MAAA6kB,YAAA7a,UAAAzB,IAIAvK,EAAA4B,UAAAmG,QAAA,WAEA,GAAAL,GAAA1F,KAAAmU,OAAArP,SACAY,GAAA4D,eAAAtJ,KAAAglB,gBAEAhlB,KAAAklB,kBAAA9Z,SACApL,KAAA8N,iBAAA1C,SACApL,KAAAolB,mBAAAha,SAEApL,KAAA2O,gBACA3O,KAAA2O,eAAAvD,SAGAvF,EAAAC,WAAA9F,KAAA4kB,aACA/e,EAAAC,WAAA9F,KAAA8kB,0BACA9kB,MAAA4kB,kBACA5kB,MAAA8kB,oBAGA9mB,EAAA4B,UAAA+kB,eAAA,SAAAroB,EAAA+O,GAEA,GAAA,UAAArL,KAAAmU,OAAArP,UAAAW,cACA,CACAzF,KAAAiJ,gBAAAC,SAAA,CACA,IAAAxD,GAAA1F,KAAAmU,OAAArP,SACA,OAAAY,GAAAqF,sBAAAzO,EAAA+O,GAGA,MAAA,OAGArN,EAAA4B,UAAAulB,eAAA,WAEAnlB,KAAAmU,OAAAqS,cAGAxoB,EAAA4B,UAAA2K,qBAAA,WAGA,UAAAvK,KAAAmU,OAAArP,UAAAW,eAEAzF,KAAAmU,OAAArP,UAAA2H,SAOAzO,EAAA4B,UAAA6mB,YAAA,SAAAC,GAEA,GAAAC,GAAA,qBACAD,GACA1mB,KAAA4kB,YAAAxgB,UAAAC,IAAAsiB,GAEA3mB,KAAA4kB,YAAAxgB,UAAAvE,OAAA8mB,IAGA3oB,EAAA4B,UAAAgnB,UAAA,SAAA7T,GAEA/S,KAAA4kB,YAAAnd,MAAAsL,OAAAA,GAGA/U,EAAA4B,UAAAqlB,cAAA,SAAA9gB,GAEAA,EAAAsD,MAAAsL,OAAA/S,KAAAiS,cACAjS,KAAAiS,mBvByjGGkB,+BAA+B,EAAEnG,wBAAwB,GAAGC,2BAA2B,GAAG9G,iBAAiB,KAAK0gB,IAAI,SAAStpB,EAAQf,EAAOD,GwB7wG/I,QAAA0B,GAAAoI,EAAA5B,GAMA8B,SAAAF,IACAA,EAAApI,EAAAuI,kBAGAD,SAAA9B,IACAA,GAAA,GAGAzE,KAAAqG,kBAAAA,EACArG,KAAAyE,mBAAAA,EACAzE,KAAA8mB,QACA,IAAAjgB,GAAA7G,IAWA,IAVA6G,EAAAiC,kBACA9I,KAAA+mB,mBACAb,UAAA,SAAA5pB,GAAAuK,EAAAqf,UAAA5pB,KAEA0D,KAAAkH,YAAAP,SAAAC,cAAA,OACA5G,KAAA+kB,eAAApe,SAAAC,cAAA,OACA5G,KAAAgnB,iBAAArgB,SAAAC,cAAA,OACA5G,KAAAinB,eAAAtgB,SAAAC,cAAA,OACA5G,KAAAuE,cAAAvE,KAAAknB,sBAEAlnB,KAAAqG,oBAAApI,EAAAuI,iBAEAxG,KAAAkH,YAAAjB,YAAAjG,KAAAinB,gBACAjnB,KAAAkH,YAAAjB,YAAAjG,KAAAgnB,kBACAhnB,KAAAkH,YAAAjB,YAAAjG,KAAA+kB,oBAEA,CAAA,GAAA/kB,KAAAqG,oBAAApI,EAAAgG,cAOA,KAAA,IAAAxG,OAAA,2DALAuC,MAAAkH,YAAAjB,YAAAjG,KAAA+kB,gBACA/kB,KAAAkH,YAAAjB,YAAAjG,KAAAgnB,kBACAhnB,KAAAkH,YAAAjB,YAAAjG,KAAAinB,gBAMAjnB,KAAAkH,YAAA9C,UAAAC,IAAA,YACArE,KAAA+kB,eAAA3gB,UAAAC,IAAA,6BACArE,KAAAgnB,iBAAA5iB,UAAAC,IAAA,gCACArE,KAAAinB,eAAA7iB,UAAAC,IAAA,eArDA,GAAAnG,GAAAX,EAAA,YAwDAf,GAAAD,QAAA0B,EAGAA,EAAAgG,cAAA,EACAhG,EAAAuI,iBAAA,EACAvI,EAAAkpB,eAAA,EACAlpB,EAAAmpB,gBAAA,EAEAnpB,EAAA2B,UAAAsmB,UAAA,SAAA5pB,GAEA,GAAAwY,GAAAnV,MAAAC,UAAAge,MAAAhgB,KAAAoC,KAAA+kB,eAAAsC,YAAApnB,QAAA3D,EAAAQ,KAAA8nB,YAEA5kB,MAAAsnB,OAAAtnB,KAAA1D,EAAAQ,KAAAR,EAAA0I,MAAA8P,IAGA7W,EAAA2B,UAAAyV,kBAAA,SAAA/U,GACAN,KAAA8mB,MAAA9mB,KAAA8mB,MAAAzmB,eAAAC,EAEA,IAAAinB,GAAAvnB,KAAA+kB,eAAAsC,WACAG,IACA,KAAA,GAAAhqB,KAAA+pB,GACA,IAAAA,EAAA/pB,GAAAiqB,UACAD,EAAAhnB,KAAA+mB,EAAA/pB,GAIA,KADAgqB,EAAAA,EAAAnnB,eAAAC,GACA9C,EAAA,EAAAA,EAAAgqB,EAAA3pB,SAAAL,EACAwC,KAAA+kB,eAAA9e,YAAAuhB,EAAAhqB,GAGAwC,MAAAmF,WACAnF,KAAA0nB,kBAAA1nB,KAAAmF,YAGAlH,EAAA2B,UAAAqH,YAAA,SAAAmC,GACApJ,KAAA8I,eAAAtI,KAAA4I,IAGAnL,EAAA2B,UAAA0J,eAAA,SAAAF,GAEApJ,KAAA8I,eAAA5I,OAAAF,KAAA8I,eAAA7I,QAAAmJ,GAAA,IAGAnL,EAAA2B,UAAA0nB,OAAA,SAAA9hB,EAAAiL,EAAAzL,EAAA8P,GACA9U,KAAA8I,eAAAK,QAAA,SAAAC,GACAA,EAAArC,UACAqC,EAAArC,UAAAvB,KAAAA,EAAAiL,OAAAA,EAAAzL,MAAAA,EAAA8P,MAAAA,OAKA7W,EAAA2B,UAAAsnB,sBAAA,SAAA5iB,EAAAQ,GAEA,MAAA,IAAA5G,GAAAoG,EAAAQ,IAGA7G,EAAA2B,UAAAyH,aAAA,SAAAvC,GACA,GAAA6iB,EACA3nB,MAAA8mB,MAAA3d,QAAA,SAAAye,GACAA,EAAA9iB,YAAAA,IACA6iB,EAAAC,KAGA5nB,KAAA8mB,MAAAjpB,OAAA,GAAA8pB,GACA3nB,KAAA0nB,kBAAAC,IAIA1pB,EAAA2B,UAAA0H,OAAA,SAAAC,EAAAC,GAEAxH,KAAAkH,YAAAO,MAAAF,MAAAA,EAAA,KACAvH,KAAAkH,YAAAO,MAAAD,OAAAA,EAAA,IAEA,IAAAqgB,GAAA7nB,KAAA+kB,eAAA9c,YACAjI,MAAA8nB,gBACAC,aAAA/nB,KAAA8nB;AACA,GAAAhrB,GAAAkD,IACAA,MAAA8nB,eAAAE,WAAA,WACAlrB,EAAAmrB,qBAAA1gB,EAAAC,IACA,IACA,IAAA0gB,GAAAloB,KAAAgnB,iBAAA/e,aACAgE,EAAAzE,EAAAqgB,EAAAK,CACAloB,MAAAinB,eAAAxf,MAAAD,OAAAyE,EAAA,KAEAjM,KAAAmF,WACAnF,KAAAmF,UAAAmC,OAAAC,EAAA0E,IAGAhO,EAAA2B,UAAAqoB,qBAAA,SAAA1gB,GACA,GAAA,IAAAvH,KAAA8mB,MAAAjpB,OAAA,CACA,GAAAsqB,GAAA,CACAnoB,MAAA8mB,MAAA3d,QAAA,SAAAif,GACA,GAAA3X,GAAA2X,EAAA3X,MACAA,GAAAmU,YAAAnd,MAAAF,MAAA,GACAkJ,EAAAoU,YAAApd,MAAAF,MAAA,GACA4gB,GAAA1X,EAAAmU,YAAA7c,aAEA,IAAAsP,GAAA9P,EAAA4gB,CACA,MAAA9Q,EAAA,KAAA,CACA,GAAAva,GAAAkD,IACAA,MAAA8mB,MAAA3d,QAAA,SAAAif,EAAAtT,GACA,GAAArE,GAAA2X,EAAA3X,OACA6T,EAAAjN,EAAA5G,EAAAmU,YAAA7c,WACA+M,KAAAhY,EAAAgqB,MAAAjpB,OAAA,IACAymB,GAAA,GACA7T,EAAAmU,YAAAnd,MAAAF,MAAA+c,EAAA,KACAxnB,EAAAuJ,oBAAApI,EAAAgG,gBACAwM,EAAAoU,YAAApd,MAAAF,MAAA+c,EAAA7T,EAAAqU,mBAAA/c,YAAA,GAAA,WAKA9J,EAAA2B,UAAA8H,cAAA,SAAAC,GAGA3H,KAAA8mB,MAAA3d,QAAA,SAAAkf,GAEAA,EAAA5X,OAAAnH,eAAAtJ,KAAA+mB,mBACAsB,EAAAtiB,YAEA/F,KAAA8mB,MAAAjpB,OAAA,CAEA,IAAAyqB,GAAAtoB,KAAAmF,gBACAnF,MAAAmF,SAEA,IAAAojB,GAAA5gB,EAAA6gB,OAAA,SAAAphB,GAEA,MAAA,UAAAA,EAAA3B,eAGA,IAAA8iB,EAAA1qB,OAAA,EACA,CAEA,GAAAf,GAAAkD,IACAuoB,GAAApf,QAAA,SAAA/B,GAEA,GAAAghB,GAAAtrB,EAAAyH,cAAAzH,EAAAsK,EACAghB,GAAA3X,OAAAxJ,YAAAnK,EAAAiqB,mBACAjqB,EAAAgqB,MAAAtmB,KAAA4nB,GAGAE,GAAAF,EAAAtjB,YAAAwjB,EAAAxjB,YACAhI,EAAAqI,UAAAijB,KAEApoB,KAAAyoB,uBAAA,OAIAzoB,MAAAyoB,uBAAA,EAEAzoB,MAAAmF,WACAnF,KAAA0nB,kBAAA1nB,KAAAmF,YAGAlH,EAAA2B,UAAA6oB,sBAAA,SAAAC,GAEA1oB,KAAA+kB,eAAAtd,MAAAyD,QAAAwd,EAAA,QAAA,OACA1oB,KAAAgnB,iBAAAvf,MAAAyD,QAAAwd,EAAA,QAAA,QAGAzqB,EAAA2B,UAAA8nB,kBAAA,SAAAU,GAEApoB,KAAAmF,UAAAijB,EACApoB,KAAA8mB,MAAA3d,QAAA,SAAAwf,GAEA,GAAAjC,GAAAiC,IAAAP,CACAO,GAAAlC,YAAAC,IAIA,IAAAkC,GAAA,EACA7V,EAAA,GACA/S,MAAA8mB,MAAA3d,QAAA,SAAAwf,GAEAA,EAAAlY,OAAAmW,UAAA7T,EACA,IAAA2T,GAAAiC,IAAAP,CACA1B,KACAkC,EAAA,IACA7V,GAAA6V,OxByxGGC,YAAY,KAAKC,IAAI,SAASvrB,EAAQf,EAAOD,GyB//GhD,QAAA2B,GAAAsH,EAAAV,GAEA,GAAA,IAAAwB,UAAAzI,SAIAmC,KAAA0mB,UAAA,EACA1mB,KAAAwF,KAAAA,EACAxF,KAAA8E,UAAAA,EAEA9E,KAAAyQ,OAAA,GAAAzS,GAAAgC,MACAA,KAAA2F,iBAAAb,EAAAa,iBAEAb,YAAA9F,IACA,CACA,GAAA0G,GAAAZ,CACAY,GAAAyG,eAAAnM,KAAAmM,eAAA3B,KAAAxK,OApBA,GAAAhC,GAAAT,EAAA,eACAyB,EAAAzB,EAAA,+BACAA,GAAA,iBAsBAf,GAAAD,QAAA2B,EAEAA,EAAA0B,UAAAuM,eAAA,WAEAnM,KAAAyQ,OAAA8V,eAGAroB,EAAA0B,UAAAmG,QAAA,WAIA,GAFA/F,KAAAyQ,OAAA1K,UAEA/F,KAAA8E,oBAAA9F,GACA,CACA,GAAA0G,GAAA1F,KAAA8E,gBACAY,GAAAyG,iBAIAjO,EAAA0B,UAAA4mB,WAAA,WAGA,GADAxmB,KAAAwF,KAAAkiB,kBAAA1nB,MACAA,KAAA8E,oBAAA9F,GACA,CACA,GAAA0G,GAAA1F,KAAA8E,SACAY,GAAA1B,YAAAwX,kBAAAxb,QAKA9B,EAAA0B,UAAA6mB,YAAA,SAAAsC,GAQA,GANA/oB,KAAA0mB,SAAAqC,EACA/oB,KAAAyQ,OAAAgW,YAAAsC,GAEA/oB,KAAAgpB,cACAhpB,KAAAwF,KAAAyhB,eAAAhhB,YAAAjG,KAAA2F,kBACA3F,KAAAgpB,cAAA,EACAhpB,KAAA0mB,SACA,CACA1mB,KAAA2F,iBAAA8B,MAAAyD,QAAA,OAEA,IAAA3D,GAAAvH,KAAAwF,KAAAyhB,eAAAlf,YACAP,EAAAxH,KAAAwF,KAAAyhB,eAAAhf,YACAjI,MAAA8E,UAAAwC,OAAAC,EAAAC,OAGAxH,MAAA2F,iBAAA8B,MAAAyD,QAAA,QAIAhN,EAAA0B,UAAA0H,OAAA,SAAAC,EAAAC,GAEAxH,KAAA8E,UAAAwC,OAAAC,EAAAC,MzBugHG2L,+BAA+B,EAAEhN,iBAAiB,GAAG8iB,cAAc,KAAKC,IAAI,SAAS3rB,EAAQf,EAAOD,G0BnlHvG,QAAAiD,GAAA2pB,EAAAC,EAAAC,GAEArpB,KAAAqpB,OAAAA,EACArpB,KAAAopB,UAAAA,EACAppB,KAAAmpB,OAAAA,EAEAnpB,KAAAmpB,OAAAG,iBAAAF,EAAAppB,KAAAqpB,QAGA7sB,EAAAD,QAAAiD,EAEAA,EAAAI,UAAAwL,OAAA,WACApL,KAAAmpB,OAAAI,oBAAAvpB,KAAAopB,UAAAppB,KAAAqpB,c1BulHMG,IAAI,SAASjsB,EAAQf,EAAOD,G2BnmHlC,QAAAgD,GAAAsN,EAAAC,GACA9M,KAAA6M,EAAAA,EACA7M,KAAA8M,EAAAA,EAGAtQ,EAAAD,QAAAgD,O3BsmHMkqB,IAAI,SAASlsB,EAAQf,EAAOD,G4B3mHlC,QAAAgX,GAAA1G,EAAAC,EAAAvF,EAAAC,GACAxH,KAAA6M,EAAAA,GAAA,EACA7M,KAAA8M,EAAAA,GAAA,EACA9M,KAAAuH,MAAAA,GAAA,EACAvH,KAAAwH,OAAAA,GAAA,EAGAhL,EAAAD,QAAAgX,O5B8mHMmW,IAAI,SAASnsB,EAAQf,EAAOD,G6B5mHlC,QAAAkD,GAAA0E,EAAAiF,EAAAugB,GACAA,IACAA,EAAA,IAGA3pB,KAAAmE,QAAAA,EACAnE,KAAAoJ,SAAAA,EACApJ,KAAA2pB,gBAAAA,EACA3pB,KAAA4pB,UAAA,EACA5pB,KAAA6pB,kBAAA,EAlBA,GAAArqB,GAAAjC,EAAA,kBACAgC,EAAAhC,EAAA,UAoBAf,GAAAD,QAAAkD,EAEAkF,OAAAkD,eAAApI,EAAAG,UAAA,WACAkI,IAAA,WACA,MAAA9H,MAAA4pB,UAEA5hB,IAAA,SAAAlI,GACAE,KAAA4pB,SAAA9pB,EACAE,KAAA4pB,UACA5pB,KAAA8N,mBACA9N,KAAA8N,iBAAA1C,eACApL,MAAA8N,kBAGA9N,KAAA8N,iBAAA,GAAAtO,GAAAQ,KAAAmE,QAAA,YAAAnE,KAAA+N,YAAAvD,KAAAxK,SAGAA,KAAA8N,mBACA9N,KAAA8N,iBAAA1C,eACApL,MAAA8N,kBAGA9N,KAAA2O,iBACA3O,KAAA2O,eAAAvD,eACApL,MAAA2O,gBAGA3O,KAAA0O,mBACA1O,KAAA0O,iBAAAtD,eACApL,MAAA0O,sBAMAjP,EAAAG,UAAA0lB,mBAAA,SAAAqE,EAAAE,GACA7pB,KAAA6pB,iBAAAA,EACA7pB,KAAA2pB,gBAAAA,GAGAlqB,EAAAG,UAAAmO,YAAA,SAAAzR,GAEA0D,KAAAkJ,UACAlJ,KAAA2O,iBACA3O,KAAA2O,eAAAvD,eACApL,MAAA2O,gBAGA3O,KAAA0O,mBACA1O,KAAA0O,iBAAAtD,eACApL,MAAA0O,kBAGA1O,KAAA2O,eAAA,GAAAnP,GAAA5C,OAAA,UAAAoD,KAAA6O,UAAArE,KAAAxK,OACAA,KAAA0O,iBAAA,GAAAlP,GAAA5C,OAAA,YAAAoD,KAAA4O,YAAApE,KAAAxK,OACAA,KAAA8pB,kBAAA,GAAAvqB,GAAAjD,EAAAkS,MAAAlS,EAAAmS,SAIAhP,EAAAG,UAAAiP,UAAA,WACA7O,KAAA2O,iBACA3O,KAAA2O,eAAAvD,eACApL,MAAA2O,gBAGA3O,KAAA0O,mBACA1O,KAAA0O,iBAAAtD,eACApL,MAAA0O,mBAIAjP,EAAAG,UAAAgP,YAAA,SAAAtS,GACA,GAAA+V,GAAA,GAAA9S,GAAAjD,EAAAkS,MAAAlS,EAAAmS,OACAU,EAAAnP,KAAA6pB,iBAAAxX,EAAAxF,EAAA7M,KAAA8pB,kBAAAjd,EAAA,GACAwC,EAAAgD,EAAAvF,EAAA9M,KAAA8pB,kBAAAhd,EACAid,EAAAjY,KAAAkY,KAAA7a,EAAAA,EAAAE,EAAAA,EAEA0a,GAAA/pB,KAAA2pB,kBACA3pB,KAAAkJ,SAAA,EACAlJ,KAAAiqB,eAAA3tB,KAIAmD,EAAAG,UAAAqqB,eAAA,SAAA3tB,GACA,GAAA4tB,GAAAlqB,KAAA8pB,kBAAAjd,EAAA7M,KAAAmE,QAAA8J,WACAkc,EAAAnqB,KAAA8pB,kBAAAhd,EAAA9M,KAAAmE,QAAAgK,UACA9C,EAAA,GAAA9L,GAAA2qB,EAAAC,EACAnqB,MAAAoJ,SAAA9M,EAAA+O,M7BynHG+e,iBAAiB,GAAGC,UAAU,KAAKC,IAAI,SAAS/sB,EAAQf,EAAOD,G8BruHlE,GAAAguB,GAAA,CAEA/tB,GAAAD,SACAkT,UAAA,SAAA+a,GACA,MAAA,QAAAA,EACA,EAGAC,SAAAD,EAAAvK,QAAA,KAAA,MAGA+C,2BAAA,WACArc,SAAA0D,KAAAjG,UAAAC,IAAA,sBAGA6e,0BAAA,WACAvc,SAAA0D,KAAAjG,UAAAvE,OAAA,sBAGA6Z,kBAAA,SAAAgR,EAAAC,EAAA1W,GACA,GAAA9P,GAAA8P,EAAAnP,UAAAa,gBAEA,OACA+kB,IAAAvmB,EAAA8J,YACAyc,GAAAvmB,EAAA8J,WAAA9J,EAAA4D,aACA4iB,GAAAxmB,EAAAgK,WACAwc,GAAAxmB,EAAAgK,UAAAhK,EAAA8D,cAIAvB,UAAA,SAAAkkB,GACA,MAAAA,GAAAL,KAGAzkB,WAAA,SAAAmO,GACA,MAAA,QAAAA,EAAAC,YACA,GAGAD,EAAAC,WAAAoJ,YAAArJ,IAEA,e9B0uHW,IAAI","file":"dockspawn.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = {\n    pkg: require('../package.json'),\n\n    // tab\n    TabHandle:                  require('./tab/TabHandle'),\n    TabHost:                    require('./tab/TabHost'),\n    TabPage:                    require('./tab/TabPage'),\n\n    // dialog\n    Dialog:                     require('./dialog/Dialog'),\n\n    // decorators\n    DraggableContainer:         require('./decorators/DraggableContainer'),\n    ResizableContainer:         require('./decorators/ResizableContainer'),\n\n    // dock\n    DockLayoutEngine:           require('./dock/DockLayoutEngine'),\n    DockManager:                require('./dock/DockManager'),\n    DockManagerContext:         require('./dock/DockManagerContext'),\n    DockModel:                  require('./dock/DockModel'),\n    DockNode:                   require('./dock/DockNode'),\n    DockWheel:                  require('./dock/DockWheel'),\n    DockWheelItem:              require('./dock/DockWheelItem'),\n\n    // containers\n    DocumentManagerContainer:   require('./containers/DocumentManagerContainer'),\n    FillDockContainer:          require('./containers/FillDockContainer'),\n    HorizontalDockContainer:    require('./containers/HorizontalDockContainer'),\n    PanelContainer:             require('./containers/PanelContainer'),\n    SplitterDockContainer:      require('./containers/SplitterDockContainer'),\n    VerticalDockContainer:      require('./containers/VerticalDockContainer'),\n\n    // splitter\n    SplitterBar:                require('./splitter/SplitterBar'),\n    SplitterPanel:              require('./splitter/SplitterPanel'),\n\n    // serialization\n    DockGraphDeserializer:      require('./serialization/DockGraphDeserializer'),\n    DockGraphSerializer:        require('./serialization/DockGraphSerializer'),\n\n    // utils\n    Point:                      require('./utils/Point'),\n    EventHandler:               require('./utils/EventHandler'),\n    UndockInitiator:            require('./utils/UndockInitiator')\n};\n\nmodule.exports.version = module.exports.pkg.version;\n\nif (!Array.prototype.remove) {\n    Array.prototype.remove = function (value) {\n        var idx = this.indexOf(value);\n\n        if (idx !== -1) {\n            return this.splice(idx, 1);\n        }\n\n        return false;\n    };\n}\n\nif (!Array.prototype.contains) {\n    Array.prototype.contains = function (obj) {\n        var i = this.length;\n\n        while (i--) {\n            if (this[i] === obj) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nif (!Array.prototype.orderByIndexes) {\n    Array.prototype.orderByIndexes = function (indexes){\n        var sortedArray = [];\n\n        for (var i = 0; i < indexes.length; i++) {\n            sortedArray.push(this[indexes[i]]);\n        }\n\n        return sortedArray;\n    };\n}\n","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.dockspawn=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = {\n    pkg: require('../package.json'),\n\n    // tab\n    TabHandle:                  require('./tab/TabHandle'),\n    TabHost:                    require('./tab/TabHost'),\n    TabPage:                    require('./tab/TabPage'),\n\n    // dialog\n    Dialog:                     require('./dialog/Dialog'),\n\n    // decorators\n    DraggableContainer:         require('./decorators/DraggableContainer'),\n    ResizableContainer:         require('./decorators/ResizableContainer'),\n\n    // dock\n    DockLayoutEngine:           require('./dock/DockLayoutEngine'),\n    DockManager:                require('./dock/DockManager'),\n    DockManagerContext:         require('./dock/DockManagerContext'),\n    DockModel:                  require('./dock/DockModel'),\n    DockNode:                   require('./dock/DockNode'),\n    DockWheel:                  require('./dock/DockWheel'),\n    DockWheelItem:              require('./dock/DockWheelItem'),\n\n    // containers\n    DocumentManagerContainer:   require('./containers/DocumentManagerContainer'),\n    FillDockContainer:          require('./containers/FillDockContainer'),\n    HorizontalDockContainer:    require('./containers/HorizontalDockContainer'),\n    PanelContainer:             require('./containers/PanelContainer'),\n    SplitterDockContainer:      require('./containers/SplitterDockContainer'),\n    VerticalDockContainer:      require('./containers/VerticalDockContainer'),\n\n    // splitter\n    SplitterBar:                require('./splitter/SplitterBar'),\n    SplitterPanel:              require('./splitter/SplitterPanel'),\n\n    // serialization\n    DockGraphDeserializer:      require('./serialization/DockGraphDeserializer'),\n    DockGraphSerializer:        require('./serialization/DockGraphSerializer'),\n\n    // utils\n    Point:                      require('./utils/Point'),\n    EventHandler:               require('./utils/EventHandler'),\n    UndockInitiator:            require('./utils/UndockInitiator')\n};\n\nmodule.exports.version = module.exports.pkg.version;\n\nif (!Array.prototype.remove) {\n    Array.prototype.remove = function (value) {\n        var idx = this.indexOf(value);\n\n        if (idx !== -1) {\n            return this.splice(idx, 1);\n        }\n\n        return false;\n    };\n}\n\nif (!Array.prototype.contains) {\n    Array.prototype.contains = function (obj) {\n        var i = this.length;\n\n        while (i--) {\n            if (this[i] === obj) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nif (!Array.prototype.orderByIndexes) {\n    Array.prototype.orderByIndexes = function (indexes){\n        var sortedArray = [];\n\n        for (var i = 0; i < indexes.length; i++) {\n            sortedArray.push(this[indexes[i]]);\n        }\n\n        return sortedArray;\n    };\n}\n\n},{\"../package.json\":2,\"./containers/DocumentManagerContainer\":3,\"./containers/FillDockContainer\":5,\"./containers/HorizontalDockContainer\":6,\"./containers/PanelContainer\":7,\"./containers/SplitterDockContainer\":8,\"./containers/VerticalDockContainer\":9,\"./decorators/DraggableContainer\":10,\"./decorators/ResizableContainer\":11,\"./dialog/Dialog\":12,\"./dock/DockLayoutEngine\":13,\"./dock/DockManager\":14,\"./dock/DockManagerContext\":15,\"./dock/DockModel\":16,\"./dock/DockNode\":17,\"./dock/DockWheel\":18,\"./dock/DockWheelItem\":19,\"./serialization/DockGraphDeserializer\":20,\"./serialization/DockGraphSerializer\":21,\"./splitter/SplitterBar\":22,\"./splitter/SplitterPanel\":23,\"./tab/TabHandle\":24,\"./tab/TabHost\":25,\"./tab/TabPage\":26,\"./utils/EventHandler\":27,\"./utils/Point\":28,\"./utils/UndockInitiator\":30}],2:[function(require,module,exports){\nmodule.exports={\n  \"name\": \"dock-spawn\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Panel docking library similar to Visual Studio docking.\",\n  \"author\": \"Chad Engler <chad@pantherdev.com>\",\n  \"homepage\": \"https://github.com/englercj/dock-spawn\",\n  \"main\": \"./src/index\",\n  \"scripts\": {\n    \"build\": \"gulp build\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/englercj/dock-spawn.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/englercj/dock-spawn/issues\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"browserify\": \"^6.0.3\",\n    \"gulp\": \"^3.8.8\",\n    \"gulp-jshint\": \"^2.0.0\",\n    \"gulp-rename\": \"^1.2.0\",\n    \"gulp-sourcemaps\": \"^1.3.0\",\n    \"gulp-uglify\": \"^1.1.0\",\n    \"gulp-util\": \"^3.0.7\",\n    \"gulp-webserver\": \"^0.9.0\",\n    \"jshint\": \"^2.8.0\",\n    \"jshint-summary\": \"^0.4.0\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.0.0\",\n    \"watchify\": \"^2.0.0\"\n  }\n}\n\n},{}],3:[function(require,module,exports){\nvar FillDockContainer = require('./FillDockContainer'),\n    DocumentTabPage = require('./DocumentTabPage'),\n    TabHost = require('../tab/TabHost');\n\n/**\n * The document manager is then central area of the dock layout hierarchy.\n * This is where more important panels are placed (e.g. the text editor in an IDE,\n * 3D view in a modelling package etc\n */\n\nfunction DocumentManagerContainer(dockManager)\n{\n    FillDockContainer.call(this, dockManager, TabHost.DIRECTION_TOP);\n    this.minimumAllowedChildNodes = 0;\n    this.element.classList.add('document-manager');\n    this.tabHost.createTabPage = this._createDocumentTabPage;\n    this.tabHost.displayCloseButton = true;\n}\n\nDocumentManagerContainer.prototype = Object.create(FillDockContainer.prototype);\nDocumentManagerContainer.prototype.constructor = DocumentManagerContainer;\nmodule.exports = DocumentManagerContainer;\n\nDocumentManagerContainer.prototype._createDocumentTabPage = function(tabHost, container)\n{\n    return new DocumentTabPage(tabHost, container);\n};\n\nDocumentManagerContainer.prototype.saveState = function(state)\n{\n    FillDockContainer.prototype.saveState.call(this, state);\n    state.documentManager = true;\n};\n\n/** Returns the selected document tab */\nDocumentManagerContainer.prototype.selectedTab = function()\n{\n    return this.tabHost.activeTab;\n};\n\n},{\"../tab/TabHost\":25,\"./DocumentTabPage\":4,\"./FillDockContainer\":5}],4:[function(require,module,exports){\nvar TabPage = require('../tab/TabPage'),\n    utils = require('../utils/utils');\n\n/**\n * Specialized tab page that doesn't display the panel's frame when docked in a tab page\n */\nfunction DocumentTabPage(host, container)\n{\n    TabPage.call(this, host, container);\n\n    // If the container is a panel, extract the content element and set it as the tab's content\n    if (this.container.containerType === 'panel')\n    {\n        this.panel = container;\n        this.containerElement = this.panel.elementContent;\n\n        // detach the container element from the panel's frame.\n        // It will be reattached when this tab page is destroyed\n        // This enables the panel's frame (title bar etc) to be hidden\n        // inside the tab page\n        utils.removeNode(this.containerElement);\n    }\n}\n\nDocumentTabPage.prototype = Object.create(TabPage.prototype);\nDocumentTabPage.prototype.constructor = DocumentTabPage;\nmodule.exports = DocumentTabPage;\n\nDocumentTabPage.prototype.destroy = function()\n{\n    TabPage.prototype.destroy.call(this);\n\n    // Restore the panel content element back into the panel frame\n    utils.removeNode(this.containerElement);\n    this.panel.elementContentHost.appendChild(this.containerElement);\n};\n\n},{\"../tab/TabPage\":26,\"../utils/utils\":31}],5:[function(require,module,exports){\nvar TabHost = require('../tab/TabHost'),\n    utils = require('../utils/utils');\n\nfunction FillDockContainer(dockManager, tabStripDirection)\n{\n    if (arguments.length === 0) {\n        return;\n    }\n\n    if (tabStripDirection === undefined) {\n        tabStripDirection = TabHost.DIRECTION_BOTTOM;\n    }\n\n    this.dockManager = dockManager;\n    this.tabOrientation = tabStripDirection;\n    this.name = utils.getNextId('fill_');\n    this.element = document.createElement('div');\n    this.containerElement = this.element;\n    this.containerType = 'fill';\n    this.minimumAllowedChildNodes = 2;\n    this.element.classList.add('dock-container');\n    this.element.classList.add('dock-container-fill');\n    this.tabHost = new TabHost(this.tabOrientation);\n    var that = this;\n    this.tabHostListener = {\n        onChange: function (e) {\n            that.dockManager._requestTabReorder(that, e);\n        }\n    };\n    this.tabHost.addListener(this.tabHostListener);\n    this.element.appendChild(this.tabHost.hostElement);\n}\n\nmodule.exports = FillDockContainer;\n\nFillDockContainer.prototype.setActiveChild = function(child)\n{\n    this.tabHost.setActiveTab(child);\n};\n\nFillDockContainer.prototype.resize = function(width, height)\n{\n    this.element.style.width = width + 'px';\n    this.element.style.height = height + 'px';\n    this.tabHost.resize(width, height);\n};\n\nFillDockContainer.prototype.performLayout = function(children)\n{\n    this.tabHost.performLayout(children);\n};\n\nFillDockContainer.prototype.destroy = function()\n{\n    if (utils.removeNode(this.element))\n        delete this.element;\n};\n\nFillDockContainer.prototype.saveState = function(state)\n{\n    state.width = this.width;\n    state.height = this.height;\n};\n\nFillDockContainer.prototype.loadState = function(state)\n{\n    // this.resize(state.width, state.height);\n    // this.width = state.width;\n    // this.height = state.height;\n    this.state = {width: state.width, height: state.height};\n};\n\nObject.defineProperty(FillDockContainer.prototype, 'width', {\n    get: function() {\n        // if(this.element.clientWidth === 0 && this.stateWidth !== 0)\n        //     return this.stateWidth;\n        return this.element.clientWidth;\n    },\n    set: function(value) {\n        this.element.style.width = value + 'px';\n    }\n});\n\nObject.defineProperty(FillDockContainer.prototype, 'height', {\n    get: function() {\n        // if(this.element.clientHeight === 0 && this.stateHeight !== 0)\n        //     return this.stateHeight;\n        return this.element.clientHeight;\n    },\n    set: function(value) {\n        this.element.style.height = value + 'px';\n    }\n});\n\n},{\"../tab/TabHost\":25,\"../utils/utils\":31}],6:[function(require,module,exports){\nvar SplitterDockContainer = require('./SplitterDockContainer'),\n    utils = require('../utils/utils');\n\nfunction HorizontalDockContainer(dockManager, childContainers)\n{\n    this.stackedVertical = false;\n    SplitterDockContainer.call(this, utils.getNextId('horizontal_splitter_'), dockManager, childContainers);\n    this.containerType = 'horizontal';\n}\n\nHorizontalDockContainer.prototype = Object.create(SplitterDockContainer.prototype);\nHorizontalDockContainer.prototype.constructor = HorizontalDockContainer;\nmodule.exports = HorizontalDockContainer;\n\n},{\"../utils/utils\":31,\"./SplitterDockContainer\":8}],7:[function(require,module,exports){\nvar EventHandler = require('../utils/EventHandler'),\n    UndockInitiator = require('../utils/UndockInitiator'),\n    utils = require('../utils/utils');\n\n/**\n * This dock container wraps the specified element on a panel frame with a title bar and close button\n */\nfunction PanelContainer(elementContent, dockManager, title)\n{\n    if (!title)\n        title = 'Panel';\n    this.elementContent = elementContent;\n    this.dockManager = dockManager;\n    this.title = title;\n    this.containerType = 'panel';\n    this.iconName = 'fa fa-arrow-circle-right';\n    this.iconTemplate = null;\n    this.minimumAllowedChildNodes = 0;\n    this._floatingDialog = undefined;\n    this.isDialog = false;\n    this._canUndock = dockManager._undockEnabled;\n    this.eventListeners = [];\n    this._initialize();\n}\n\nmodule.exports = PanelContainer;\n\nPanelContainer.prototype.canUndock = function(state){\n    this._canUndock = state;\n    this.undockInitiator.enabled = state;\n    this.eventListeners.forEach(function(listener) {\n        if (listener.onDockEnabled) {\n            listener.onDockEnabled({self: this, state: state});\n        }\n    });\n\n};\n\nPanelContainer.prototype.addListener = function(listener){\n    this.eventListeners.push(listener);\n};\n\nPanelContainer.prototype.removeListener = function(listener)\n{\n    this.eventListeners.splice(this.eventListeners.indexOf(listener), 1);\n};\n\nObject.defineProperty(PanelContainer.prototype, 'floatingDialog', {\n    get: function() { return this._floatingDialog; },\n    set: function(value)\n    {\n        this._floatingDialog = value;\n        var canUndock = (this._floatingDialog === undefined);\n        this.undockInitiator.enabled = canUndock;\n    }\n});\n\nPanelContainer.loadFromState = function(state, dockManager)\n{\n    var elementName = state.element;\n    var elementContent = document.getElementById(elementName);\n    if(elementContent === null) {\n        return null;\n    }\n    var ret = new PanelContainer(elementContent, dockManager);\n    ret.loadState(state);\n    return ret;\n};\n\nPanelContainer.prototype.saveState = function(state)\n{\n    state.element = this.elementContent.id;\n    state.width = this.width;\n    state.height = this.height;\n};\n\nPanelContainer.prototype.loadState = function(state)\n{\n    this.width = state.width;\n    this.height = state.height;\n    this.state = {width: state.width, height: state.height};\n    // this.resize(this.width, this.height);\n};\n\nPanelContainer.prototype.setActiveChild = function(/*child*/)\n{\n};\n\nObject.defineProperty(PanelContainer.prototype, 'containerElement', {\n    get: function() { return this.elementPanel; }\n});\n\nPanelContainer.prototype._initialize = function()\n{\n    this.name = utils.getNextId('panel_');\n    this.elementPanel = document.createElement('div');\n    this.elementTitle = document.createElement('div');\n    this.elementTitleText = document.createElement('div');\n    this.elementContentHost = document.createElement('div');\n    this.elementButtonClose = document.createElement('div');\n\n    this.elementPanel.appendChild(this.elementTitle);\n    this.elementTitle.appendChild(this.elementTitleText);\n    this.elementTitle.appendChild(this.elementButtonClose);\n    this.elementButtonClose.innerHTML = '<i class=\"fa fa-times\"></i>';\n    this.elementButtonClose.classList.add('panel-titlebar-button-close');\n    this.elementPanel.appendChild(this.elementContentHost);\n\n    this.elementPanel.classList.add('panel-base');\n    this.elementTitle.classList.add('panel-titlebar');\n    this.elementTitle.classList.add('disable-selection');\n    this.elementTitleText.classList.add('panel-titlebar-text');\n    this.elementContentHost.classList.add('panel-content');\n\n    // set the size of the dialog elements based on the panel's size\n    var panelWidth = this.elementContent.clientWidth;\n    var panelHeight = this.elementContent.clientHeight;\n    var titleHeight = this.elementTitle.clientHeight;\n    this._setPanelDimensions(panelWidth, panelHeight + titleHeight);\n\n    // Add the panel to the body\n    document.body.appendChild(this.elementPanel);\n\n    this.closeButtonClickedHandler =\n        new EventHandler(this.elementButtonClose, 'click', this.onCloseButtonClicked.bind(this));\n\n    utils.removeNode(this.elementContent);\n    this.elementContentHost.appendChild(this.elementContent);\n\n    // Extract the title from the content element's attribute\n    var contentTitle = this.elementContent.dataset.panelCaption;\n    var contentIcon = this.elementContent.dataset.panelIcon;\n    if (contentTitle) this.title = contentTitle;\n    if (contentIcon) this.iconName = contentIcon;\n    this._updateTitle();\n\n    this.undockInitiator = new UndockInitiator(this.elementTitle, this.performUndockToDialog.bind(this));\n    delete this.floatingDialog;\n};\n\n\nPanelContainer.prototype.hideCloseButton = function(state){\n     this.elementButtonClose.style.display = state ? 'none' : 'block';\n     this.eventListeners.forEach(function(listener) {\n        if (listener.onHideCloseButton) {\n            listener.onHideCloseButton({self: this, state: state});\n        }\n    });\n};\n\n\nPanelContainer.prototype.destroy = function()\n{\n    utils.removeNode(this.elementPanel);\n    if (this.closeButtonClickedHandler)\n    {\n        this.closeButtonClickedHandler.cancel();\n        delete this.closeButtonClickedHandler;\n    }\n};\n\n/**\n * Undocks the panel and and converts it to a dialog box\n */\nPanelContainer.prototype.performUndockToDialog = function(e, dragOffset)\n{\n     this.isDialog = true;\n    this.undockInitiator.enabled = false;\n    return this.dockManager.requestUndockToDialog(this, e, dragOffset);\n};\n\n/**\n * Undocks the container and from the layout hierarchy\n * The container would be removed from the DOM\n */\nPanelContainer.prototype.performUndock = function()\n{\n\n    this.undockInitiator.enabled = false;\n    this.dockManager.requestUndock(this);\n};\n\nPanelContainer.prototype.prepareForDocking = function()\n{\n    this.isDialog = false;\n    this.undockInitiator.enabled = this.canUndock;\n};\n\nObject.defineProperty(PanelContainer.prototype, 'width', {\n    get: function() { return this._cachedWidth; },\n    set: function(value)\n    {\n        if (value !== this._cachedWidth)\n        {\n            this._cachedWidth = value;\n            this.elementPanel.style.width = value + 'px';\n        }\n    }\n});\n\nObject.defineProperty(PanelContainer.prototype, 'height', {\n    get: function() { return this._cachedHeight; },\n    set: function(value)\n    {\n        if (value !== this._cachedHeight)\n        {\n            this._cachedHeight = value;\n            this.elementPanel.style.height = value + 'px';\n        }\n    }\n});\n\nPanelContainer.prototype.resize = function(width,  height)\n{\n    // if (this._cachedWidth === width && this._cachedHeight === height)\n    // {\n    //     // Already in the desired size\n    //     return;\n    // }\n    this._setPanelDimensions(width, height);\n    this._cachedWidth = width;\n    this._cachedHeight = height;\n    try {\n        if (this.elementContent != undefined && (typeof this.elementContent.resizeHandler == 'function'))\n            this.elementContent.resizeHandler(width, height - this.elementTitle.clientHeight);\n    } catch (err) {\n        console.log(\"error calling resizeHandler:\", err, \" elt:\", this.elementContent);\n    }\n};\n\nPanelContainer.prototype._setPanelDimensions = function(width, height)\n{\n    this.elementTitle.style.width = width + 'px';\n    this.elementContentHost.style.width = width + 'px';\n    this.elementContent.style.width = width + 'px';\n    this.elementPanel.style.width = width + 'px';\n\n    var titleBarHeight = this.elementTitle.clientHeight;\n    var contentHeight = height - titleBarHeight;\n    this.elementContentHost.style.height = contentHeight + 'px';\n    this.elementContent.style.height = contentHeight + 'px';\n    this.elementPanel.style.height = height + 'px';\n};\n\nPanelContainer.prototype.setTitle = function(title)\n{\n    this.title = title;\n    this._updateTitle();\n    if (this.onTitleChanged)\n        this.onTitleChanged(this, title);\n};\n\nPanelContainer.prototype.setTitleIcon = function(iconName)\n{\n    this.iconName = iconName;\n    this._updateTitle();\n    if (this.onTitleChanged)\n        this.onTitleChanged(this, this.title);\n};\n\nPanelContainer.prototype.setTitleIconTemplate = function(iconTemplate)\n{\n    this.iconTemplate = iconTemplate;\n    this._updateTitle();\n    if (this.onTitleChanged)\n        this.onTitleChanged(this, this.title);\n};\n\nPanelContainer.prototype.setCloseIconTemplate = function(closeIconTemplate)\n{\n    this.elementButtonClose.innerHTML = closeIconTemplate();\n};\n\nPanelContainer.prototype._updateTitle = function()\n{\n    if(this.iconTemplate !== null)\n    {\n        this.elementTitleText.innerHTML = this.iconTemplate(this.iconName) + this.title;\n        return;\n    }\n    this.elementTitleText.innerHTML = '<i class=\"' + this.iconName + '\"></i> ' + this.title;\n};\n\nPanelContainer.prototype.getRawTitle = function()\n{\n    return this.elementTitleText.innerHTML;\n};\n\nPanelContainer.prototype.performLayout = function(/*children*/)\n{\n};\n\nPanelContainer.prototype.onCloseButtonClicked = function()\n{\n   this.close();\n};\n\nPanelContainer.prototype.close = function() {\n     //TODO: hide\n    if (this.isDialog) {\n        this.floatingDialog.hide();\n\n        this.floatingDialog.setPosition(this.dockManager.defaultDialogPosition.x, this.dockManager.defaultDialogPosition.y);\n    }\n    else\n    {\n        this.performUndockToDialog();\n        this.floatingDialog.hide();\n        this.floatingDialog.setPosition(this.dockManager.defaultDialogPosition.x, this.dockManager.defaultDialogPosition.y);\n    }\n     this.dockManager.notifyOnClosePanel(this);\n};\n\n},{\"../utils/EventHandler\":27,\"../utils/UndockInitiator\":30,\"../utils/utils\":31}],8:[function(require,module,exports){\nvar SplitterPanel = require('../splitter/SplitterPanel');\n\nfunction SplitterDockContainer(name, dockManager, childContainers)\n{\n    // for prototype inheritance purposes only\n    if (arguments.length === 0) {\n        return;\n    }\n\n    this.name = name;\n    this.dockManager = dockManager;\n    this.splitterPanel = new SplitterPanel(childContainers, this.stackedVertical);\n    this.containerElement = this.splitterPanel.panelElement;\n    this.minimumAllowedChildNodes = 2;\n}\n\nmodule.exports = SplitterDockContainer;\n\nSplitterDockContainer.prototype.resize = function(width, height)\n{\n//    if (_cachedWidth === _cachedWidth && _cachedHeight === _height) {\n//      // No need to resize\n//      return;\n//    }\n    this.splitterPanel.resize(width, height);\n    this._cachedWidth = width;\n    this._cachedHeight = height;\n};\n\nSplitterDockContainer.prototype.performLayout = function(childContainers)\n{\n    this.splitterPanel.performLayout(childContainers);\n};\n\nSplitterDockContainer.prototype.setActiveChild = function(/*child*/)\n{\n};\n\nSplitterDockContainer.prototype.destroy = function()\n{\n    this.splitterPanel.destroy();\n};\n\n/**\n * Sets the percentage of space the specified [container] takes in the split panel\n * The percentage is specified in [ratio] and is between 0..1\n */\nSplitterDockContainer.prototype.setContainerRatio = function(container, ratio)\n{\n    this.splitterPanel.setContainerRatio(container, ratio);\n    this.resize(this.width, this.height);\n};\n\nSplitterDockContainer.prototype.saveState = function(state)\n{\n    state.width = this.width;\n    state.height = this.height;\n};\n\nSplitterDockContainer.prototype.loadState = function(state)\n{\n    this.state = {width: state.width, height: state.height};\n    // this.resize(state.width, state.height);\n};\n\nObject.defineProperty(SplitterDockContainer.prototype, 'width', {\n    get: function()\n    {\n        if (this._cachedWidth === undefined)\n            this._cachedWidth = this.splitterPanel.panelElement.clientWidth;\n        return this._cachedWidth;\n    }\n});\n\nObject.defineProperty(SplitterDockContainer.prototype, 'height', {\n    get: function()\n    {\n        if (this._cachedHeight === undefined)\n            this._cachedHeight = this.splitterPanel.panelElement.clientHeight;\n        return this._cachedHeight;\n    }\n});\n\n},{\"../splitter/SplitterPanel\":23}],9:[function(require,module,exports){\nvar SplitterDockContainer = require('./SplitterDockContainer'),\n    utils = require('../utils/utils');\n\nfunction VerticalDockContainer(dockManager, childContainers)\n{\n    this.stackedVertical = true;\n    SplitterDockContainer.call(this, utils.getNextId('vertical_splitter_'), dockManager, childContainers);\n    this.containerType = 'vertical';\n}\n\nVerticalDockContainer.prototype = Object.create(SplitterDockContainer.prototype);\nVerticalDockContainer.prototype.constructor = VerticalDockContainer;\nmodule.exports = VerticalDockContainer;\n\n},{\"../utils/utils\":31,\"./SplitterDockContainer\":8}],10:[function(require,module,exports){\nvar EventHandler = require('../utils/EventHandler'),\n    Point = require('../utils/Point'),\n    utils = require('../utils/utils');\n\nfunction DraggableContainer(dialog, delegate, topLevelElement, dragHandle)\n{\n    this.dialog = dialog;\n    this.delegate = delegate;\n    this.containerElement = delegate.containerElement;\n    this.dockManager = delegate.dockManager;\n    this.topLevelElement = topLevelElement;\n    this.containerType = delegate.containerType;\n    this.mouseDownHandler = new EventHandler(dragHandle, 'mousedown', this.onMouseDown.bind(this));\n    this.topLevelElement.style.marginLeft = topLevelElement.offsetLeft + 'px';\n    this.topLevelElement.style.marginTop = topLevelElement.offsetTop + 'px';\n    this.minimumAllowedChildNodes = delegate.minimumAllowedChildNodes;\n}\n\nmodule.exports = DraggableContainer;\n\nDraggableContainer.prototype.destroy = function()\n{\n    this.removeDecorator();\n    this.delegate.destroy();\n};\n\nDraggableContainer.prototype.saveState = function(state)\n{\n    this.delegate.saveState(state);\n};\n\nDraggableContainer.prototype.loadState = function(state)\n{\n    this.delegate.loadState(state);\n};\n\nDraggableContainer.prototype.setActiveChild = function(/*child*/)\n{\n};\n\nObject.defineProperty(DraggableContainer.prototype, 'width', {\n    get: function() { return this.delegate.width; }\n});\n\nObject.defineProperty(DraggableContainer.prototype, 'height', {\n    get: function() { return this.delegate.height; }\n});\n\nDraggableContainer.prototype.name = function(value)\n{\n    if (value)\n        this.delegate.name = value;\n    return this.delegate.name;\n};\n\nDraggableContainer.prototype.resize = function(width, height)\n{\n    this.delegate.resize(width, height);\n};\n\nDraggableContainer.prototype.performLayout = function(children)\n{\n    this.delegate.performLayout(children);\n};\n\nDraggableContainer.prototype.removeDecorator = function()\n{\n    if (this.mouseDownHandler)\n    {\n        this.mouseDownHandler.cancel();\n        delete this.mouseDownHandler;\n    }\n};\n\nDraggableContainer.prototype.onMouseDown = function(event)\n{\n    this._startDragging(event);\n    this.previousMousePosition = { x: event.pageX, y: event.pageY };\n    if (this.mouseMoveHandler)\n    {\n        this.mouseMoveHandler.cancel();\n        delete this.mouseMoveHandler;\n    }\n    if (this.mouseUpHandler)\n    {\n        this.mouseUpHandler.cancel();\n        delete this.mouseUpHandler;\n    }\n\n    this.mouseMoveHandler = new EventHandler(window, 'mousemove', this.onMouseMove.bind(this));\n    this.mouseUpHandler = new EventHandler(window, 'mouseup', this.onMouseUp.bind(this));\n};\n\nDraggableContainer.prototype.onMouseUp = function(event)\n{\n    this._stopDragging(event);\n    this.mouseMoveHandler.cancel();\n    delete this.mouseMoveHandler;\n    this.mouseUpHandler.cancel();\n    delete this.mouseUpHandler;\n};\n\nDraggableContainer.prototype._startDragging = function(event)\n{\n    if (this.dialog.eventListener)\n        this.dialog.eventListener.onDialogDragStarted(this.dialog, event);\n    document.body.classList.add('disable-selection');\n};\n\nDraggableContainer.prototype._stopDragging = function(event)\n{\n    if (this.dialog.eventListener)\n        this.dialog.eventListener.onDialogDragEnded(this.dialog, event);\n    document.body.classList.remove('disable-selection');\n};\n\nDraggableContainer.prototype.onMouseMove = function(event)\n{\n    var currentMousePosition = new Point(event.pageX, event.pageY);\n\n    var dx = this.dockManager.checkXBounds(this.topLevelElement, currentMousePosition, this.previousMousePosition);\n    var dy = this.dockManager.checkYBounds(this.topLevelElement, currentMousePosition, this.previousMousePosition);\n    this._performDrag(dx, dy);\n    this.previousMousePosition = currentMousePosition;\n};\n\nDraggableContainer.prototype._performDrag = function(dx, dy)\n{\n    var left = dx + utils.getPixels(this.topLevelElement.style.marginLeft);\n    var top = dy + utils.getPixels(this.topLevelElement.style.marginTop);\n    this.topLevelElement.style.marginLeft = left + 'px';\n    this.topLevelElement.style.marginTop = top + 'px';\n};\n\n},{\"../utils/EventHandler\":27,\"../utils/Point\":28,\"../utils/utils\":31}],11:[function(require,module,exports){\nvar EventHandler = require('../utils/EventHandler'),\n    Point = require('../utils/Point'),\n    utils = require('../utils/utils');\n\n/**\n * Decorates a dock container with resizer handles around its base element\n * This enables the container to be resized from all directions\n */\nfunction ResizableContainer(dialog, delegate, topLevelElement)\n{\n    this.dialog = dialog;\n    this.delegate = delegate;\n    this.containerElement = delegate.containerElement;\n    this.dockManager = delegate.dockManager;\n    this.topLevelElement = topLevelElement;\n    this.containerType = delegate.containerType;\n    this.topLevelElement.style.marginLeft = this.topLevelElement.offsetLeft + 'px';\n    this.topLevelElement.style.marginTop = this.topLevelElement.offsetTop + 'px';\n    this.minimumAllowedChildNodes = delegate.minimumAllowedChildNodes;\n    this._buildResizeHandles();\n    this.readyToProcessNextResize = true;\n}\n\nmodule.exports = ResizableContainer;\n\nResizableContainer.prototype.setActiveChild = function(/*child*/)\n{\n};\n\nResizableContainer.prototype._buildResizeHandles = function()\n{\n    this.resizeHandles = [];\n//    this._buildResizeHandle(true, false, true, false); // Dont need the corner resizer near the close button\n    this._buildResizeHandle(false, true, true, false);\n    this._buildResizeHandle(true, false, false, true);\n    this._buildResizeHandle(false, true, false, true);\n\n    this._buildResizeHandle(true, false, false, false);\n    this._buildResizeHandle(false, true, false, false);\n    this._buildResizeHandle(false, false, true, false);\n    this._buildResizeHandle(false, false, false, true);\n};\n\nResizableContainer.prototype._buildResizeHandle = function(east, west, north, south)\n{\n    var handle = new ResizeHandle();\n    handle.east = east;\n    handle.west = west;\n    handle.north = north;\n    handle.south = south;\n\n    // Create an invisible div for the handle\n    handle.element = document.createElement('div');\n    this.topLevelElement.appendChild(handle.element);\n\n    // Build the class name for the handle\n    var verticalClass = '';\n    var horizontalClass = '';\n    if (north) verticalClass = 'n';\n    if (south) verticalClass = 's';\n    if (east) horizontalClass = 'e';\n    if (west) horizontalClass = 'w';\n    var cssClass = 'resize-handle-' + verticalClass + horizontalClass;\n    if (verticalClass.length > 0 && horizontalClass.length > 0)\n        handle.corner = true;\n\n    handle.element.classList.add(handle.corner ? 'resize-handle-corner' : 'resize-handle');\n    handle.element.classList.add(cssClass);\n    this.resizeHandles.push(handle);\n\n    var self = this;\n    handle.mouseDownHandler = new EventHandler(handle.element, 'mousedown', function(e) { self.onMouseDown(handle, e); });\n};\n\nResizableContainer.prototype.saveState = function(state)\n{\n    this.delegate.saveState(state);\n};\n\nResizableContainer.prototype.loadState = function(state)\n{\n    this.delegate.loadState(state);\n};\n\nObject.defineProperty(ResizableContainer.prototype, 'width', {\n    get: function() { return this.delegate.width; }\n});\n\nObject.defineProperty(ResizableContainer.prototype, 'height', {\n    get: function() { return this.delegate.height; }\n});\n\nResizableContainer.prototype.name = function(value)\n{\n    if (value)\n        this.delegate.name = value;\n    return this.delegate.name;\n};\n\nResizableContainer.prototype.resize = function(width, height)\n{\n    this.delegate.resize(width, height);\n    this._adjustResizeHandles(width, height);\n};\n\nResizableContainer.prototype._adjustResizeHandles = function(width, height)\n{\n    var self = this;\n    this.resizeHandles.forEach(function(handle) {\n        handle.adjustSize(self.topLevelElement, width, height);\n    });\n};\n\nResizableContainer.prototype.performLayout = function(children)\n{\n    this.delegate.performLayout(children);\n};\n\nResizableContainer.prototype.destroy = function()\n{\n    this.removeDecorator();\n    this.delegate.destroy();\n};\n\nResizableContainer.prototype.removeDecorator = function()\n{\n};\n\nResizableContainer.prototype.onMouseMoved = function(handle, e)\n{\n    if (!this.readyToProcessNextResize)\n        return;\n    this.readyToProcessNextResize = false;\n\n//    window.requestLayoutFrame(() {\n    this.dockManager.suspendLayout();\n    var currentMousePosition = new Point(e.pageX, e.pageY);\n    var dx = this.dockManager.checkXBounds(this.topLevelElement, currentMousePosition, this.previousMousePosition);\n    var dy = this.dockManager.checkYBounds(this.topLevelElement, currentMousePosition, this.previousMousePosition);\n    this._performDrag(handle, dx, dy);\n    this.previousMousePosition = currentMousePosition;\n    this.readyToProcessNextResize = true;\n    if(this.dialog.panel)\n        this.dockManager.resumeLayout(this.dialog.panel);\n};\n\nResizableContainer.prototype.onMouseDown = function(handle, event)\n{\n    this.previousMousePosition = new Point(event.pageX, event.pageY);\n    if (handle.mouseMoveHandler)\n    {\n        handle.mouseMoveHandler.cancel();\n        delete handle.mouseMoveHandler;\n    }\n    if (handle.mouseUpHandler)\n    {\n        handle.mouseUpHandler.cancel();\n        delete handle.mouseUpHandler;\n    }\n\n    // Create the mouse event handlers\n    var self = this;\n    handle.mouseMoveHandler = new EventHandler(window, 'mousemove', function(e) { self.onMouseMoved(handle, e); });\n    handle.mouseUpHandler = new EventHandler(window, 'mouseup', function(e) { self.onMouseUp(handle, e); });\n\n    document.body.classList.add('disable-selection');\n};\n\nResizableContainer.prototype.onMouseUp = function(handle)\n{\n    handle.mouseMoveHandler.cancel();\n    handle.mouseUpHandler.cancel();\n    delete handle.mouseMoveHandler;\n    delete handle.mouseUpHandler;\n\n    document.body.classList.remove('disable-selection');\n};\n\nResizableContainer.prototype._performDrag = function(handle, dx, dy)\n{\n    var bounds = {};\n    bounds.left = utils.getPixels(this.topLevelElement.style.marginLeft);\n    bounds.top = utils.getPixels(this.topLevelElement.style.marginTop);\n    bounds.width = this.topLevelElement.clientWidth;\n    bounds.height = this.topLevelElement.clientHeight;\n\n    if (handle.east) this._resizeEast(dx, bounds);\n    if (handle.west) this._resizeWest(dx, bounds);\n    if (handle.north) this._resizeNorth(dy, bounds);\n    if (handle.south) this._resizeSouth(dy, bounds);\n};\n\nResizableContainer.prototype._resizeWest = function(dx, bounds)\n{\n    this._resizeContainer(dx, 0, -dx, 0, bounds);\n};\n\nResizableContainer.prototype._resizeEast = function(dx, bounds)\n{\n    this._resizeContainer(0, 0, dx, 0, bounds);\n};\n\nResizableContainer.prototype._resizeNorth = function(dy, bounds)\n{\n    this._resizeContainer(0, dy, 0, -dy, bounds);\n};\n\nResizableContainer.prototype._resizeSouth = function(dy, bounds)\n{\n    this._resizeContainer(0, 0, 0, dy, bounds);\n};\n\nResizableContainer.prototype._resizeContainer = function(leftDelta, topDelta, widthDelta, heightDelta, bounds)\n{\n    bounds.left += leftDelta;\n    bounds.top += topDelta;\n    bounds.width += widthDelta;\n    bounds.height += heightDelta;\n\n    var minWidth = 50;  // TODO: Move to external configuration\n    var minHeight = 50;  // TODO: Move to external configuration\n    bounds.width = Math.max(bounds.width, minWidth);\n    bounds.height = Math.max(bounds.height, minHeight);\n\n    this.topLevelElement.style.marginLeft = bounds.left + 'px';\n    this.topLevelElement.style.marginTop = bounds.top + 'px';\n\n    this.resize(bounds.width, bounds.height);\n};\n\n\nfunction ResizeHandle()\n{\n    this.element = undefined;\n    this.handleSize = 6;   // TODO: Get this from DOM\n    this.cornerSize = 12;  // TODO: Get this from DOM\n    this.east = false;\n    this.west = false;\n    this.north = false;\n    this.south = false;\n    this.corner = false;\n}\n\nResizeHandle.prototype.adjustSize = function(container, clientWidth, clientHeight)\n{\n    if (this.corner)\n    {\n        if (this.west) this.element.style.left = '0px';\n        if (this.east) this.element.style.left = (clientWidth - this.cornerSize) + 'px';\n        if (this.north) this.element.style.top = '0px';\n        if (this.south) this.element.style.top = (clientHeight - this.cornerSize) + 'px';\n    }\n    else\n    {\n        if (this.west)\n        {\n            this.element.style.left = '0px';\n            this.element.style.top = this.cornerSize + 'px';\n        }\n        if (this.east) {\n            this.element.style.left = (clientWidth - this.handleSize) + 'px';\n            this.element.style.top = this.cornerSize + 'px';\n        }\n        if (this.north) {\n            this.element.style.left = this.cornerSize + 'px';\n            this.element.style.top = '0px';\n        }\n        if (this.south) {\n            this.element.style.left = this.cornerSize + 'px';\n            this.element.style.top = (clientHeight - this.handleSize) + 'px';\n        }\n\n        if (this.west || this.east) {\n            this.element.style.height = (clientHeight - this.cornerSize * 2) + 'px';\n        } else {\n            this.element.style.width = (clientWidth - this.cornerSize * 2) + 'px';\n        }\n    }\n};\n\n},{\"../utils/EventHandler\":27,\"../utils/Point\":28,\"../utils/utils\":31}],12:[function(require,module,exports){\nvar PanelContainer = require('../containers/PanelContainer'),\n    DraggableContainer = require('../decorators/DraggableContainer'),\n    ResizableContainer = require('../decorators/ResizableContainer'),\n    EventHandler = require('../utils/EventHandler'),\n    utils = require('../utils/utils');\n\nfunction Dialog(panel, dockManager)\n{\n    this.panel = panel;\n    this.zIndexCounter = 100;\n    this.dockManager = dockManager;\n    this.eventListener = dockManager;\n    this._initialize();\n    this.dockManager.context.model.dialogs.push(this);\n        this.position = dockManager.defaultDialogPosition;\n\n    this.dockManager.notifyOnCreateDialog(this);\n}\n\nmodule.exports = Dialog;\n\nDialog.prototype.saveState = function(x, y){\n    this.position = {x: x, y: y};\n    this.dockManager.notifyOnChangeDialogPosition(this, x, y);\n};\n\nDialog.fromElement = function(id, dockManager)\n{\n    return new Dialog(new PanelContainer(document.getElementById(id), dockManager), dockManager);\n};\n\nDialog.prototype._initialize = function()\n{\n    this.panel.floatingDialog = this;\n    this.elementDialog = document.createElement('div');\n    this.elementDialog.appendChild(this.panel.elementPanel);\n    this.draggable = new DraggableContainer(this, this.panel, this.elementDialog, this.panel.elementTitle);\n    this.resizable = new ResizableContainer(this, this.draggable, this.draggable.topLevelElement);\n\n    document.body.appendChild(this.elementDialog);\n    this.elementDialog.classList.add('dialog-floating');\n    this.elementDialog.classList.add('rounded-corner-top');\n    this.panel.elementTitle.classList.add('rounded-corner-top');\n\n    this.mouseDownHandler = new EventHandler(this.elementDialog, 'mousedown', this.onMouseDown.bind(this));\n    this.resize(this.panel.elementPanel.clientWidth, this.panel.elementPanel.clientHeight);\n    this.isHidden = false;\n    this.bringToFront();\n};\n\nDialog.prototype.setPosition = function(x, y)\n{\n    this.position = {x: x, y: y};\n    this.elementDialog.style.left = x + 'px';\n    this.elementDialog.style.top = y + 'px';\n    this.dockManager.notifyOnChangeDialogPosition(this, x, y);\n};\n\nDialog.prototype.getPosition = function()\n{\n    return {\n        left: this.position ? this.position.x : 0,\n        top: this.position ? this.position.y : 0\n    };\n};\n\nDialog.prototype.onMouseDown = function()\n{\n    this.bringToFront();\n};\n\nDialog.prototype.destroy = function()\n{\n    if (this.mouseDownHandler)\n    {\n        this.mouseDownHandler.cancel();\n        delete this.mouseDownHandler;\n    }\n    this.elementDialog.classList.remove('rounded-corner-top');\n    this.panel.elementTitle.classList.remove('rounded-corner-top');\n    utils.removeNode(this.elementDialog);\n    this.draggable.removeDecorator();\n    utils.removeNode(this.panel.elementPanel);\n     this.dockManager.context.model.dialogs.remove(this);\n    delete this.panel.floatingDialog;\n};\n\nDialog.prototype.resize = function(width, height)\n{\n    this.resizable.resize(width, height);\n};\n\nDialog.prototype.setTitle = function(title)\n{\n    this.panel.setTitle(title);\n};\n\nDialog.prototype.setTitleIcon = function(iconName)\n{\n    this.panel.setTitleIcon(iconName);\n};\n\nDialog.prototype.bringToFront = function()\n{\n    this.elementDialog.style.zIndex = this.zIndexCounter++;\n};\n\nDialog.prototype.hide = function()\n{\n    this.elementDialog.style.zIndex = 0;\n    this.elementDialog.style.display = 'none';\n     if(!this.isHidden)\n    {\n        this.isHidden = true;\n        this.dockManager.notifyOnHideDialog(this);\n    }\n};\n\nDialog.prototype.show = function()\n{\n    this.elementDialog.style.zIndex = 100;\n    this.elementDialog.style.display = 'block';\n    if(this.isHidden)\n    {\n        this.isHidden = false;\n        this.dockManager.notifyOnShowDialog(this);\n    }\n};\n\n},{\"../containers/PanelContainer\":7,\"../decorators/DraggableContainer\":10,\"../decorators/ResizableContainer\":11,\"../utils/EventHandler\":27,\"../utils/utils\":31}],13:[function(require,module,exports){\nvar DockNode = require('./DockNode'),\n    HorizontalDockContainer = require('../containers/HorizontalDockContainer'),\n    VerticalDockContainer = require('../containers/VerticalDockContainer'),\n    FillDockContainer = require('../containers/FillDockContainer'),\n    Rectangle = require('../utils/Rectangle'),\n    utils = require('../utils/utils');\n\nfunction DockLayoutEngine(dockManager)\n{\n    this.dockManager = dockManager;\n}\n\nmodule.exports = DockLayoutEngine;\n\n/** docks the [newNode] to the left of [referenceNode] */\nDockLayoutEngine.prototype.dockLeft = function(referenceNode, newNode)\n{\n    this._performDock(referenceNode, newNode, 'horizontal', true);\n};\n\n/** docks the [newNode] to the right of [referenceNode] */\nDockLayoutEngine.prototype.dockRight = function(referenceNode, newNode) {\n    this._performDock(referenceNode, newNode, 'horizontal', false);\n};\n\n/** docks the [newNode] to the top of [referenceNode] */\nDockLayoutEngine.prototype.dockUp = function(referenceNode, newNode) {\n    this._performDock(referenceNode, newNode, 'vertical', true);\n};\n\n/** docks the [newNode] to the bottom of [referenceNode] */\nDockLayoutEngine.prototype.dockDown = function(referenceNode, newNode) {\n    this._performDock(referenceNode, newNode, 'vertical', false);\n};\n\n/** docks the [newNode] by creating a new tab inside [referenceNode] */\nDockLayoutEngine.prototype.dockFill = function(referenceNode, newNode) {\n    this._performDock(referenceNode, newNode, 'fill', false);\n};\n\nDockLayoutEngine.prototype.undock = function(node)\n{\n    var parentNode = node.parent;\n    if (!parentNode)\n        throw new Error('Cannot undock.  panel is not a leaf node');\n\n    // Get the position of the node relative to it's siblings\n    var siblingIndex = parentNode.children.indexOf(node);\n\n    // Detach the node from the dock manager's tree hierarchy\n    node.detachFromParent();\n\n    // Fix the node's parent hierarchy\n    if (parentNode.children.length < parentNode.container.minimumAllowedChildNodes) {\n        // If the child count falls below the minimum threshold, destroy the parent and merge\n        // the children with their grandparents\n        var grandParent = parentNode.parent;\n        for (var i = 0; i < parentNode.children.length; i++)\n        {\n            var otherChild = parentNode.children[i];\n            if (grandParent)\n            {\n                // parent node is not a root node\n                grandParent.addChildAfter(parentNode, otherChild);\n                parentNode.detachFromParent();\n                var width =parentNode.container.containerElement.clientWidth;\n                var height = parentNode.container.containerElement.clientHeight;\n                parentNode.container.destroy();\n\n                otherChild.container.resize(width, height);\n                grandParent.performLayout();\n            }\n            else\n            {\n                // Parent is a root node.\n                // Make the other child the root node\n                parentNode.detachFromParent();\n                parentNode.container.destroy();\n                this.dockManager.setRootNode(otherChild);\n            }\n        }\n    }\n    else\n    {\n        // the node to be removed has 2 or more other siblings. So it is safe to continue\n        // using the parent composite container.\n        parentNode.performLayout();\n\n        // Set the next sibling as the active child (e.g. for a Tab host, it would select it as the active tab)\n        if (parentNode.children.length > 0)\n        {\n            var nextActiveSibling = parentNode.children[Math.max(0, siblingIndex - 1)];\n            parentNode.container.setActiveChild(nextActiveSibling.container);\n        }\n    }\n    this.dockManager.invalidate();\n\n\tthis.dockManager.notifyOnUnDock(node);\n};\n\nDockLayoutEngine.prototype.reorderTabs = function(node, handle, state, index){\n    var N = node.children.length;\n    var nodeIndexToDelete  = state === 'left' ? index : index + 1;\n    if (state == 'right' && nodeIndexToDelete >= node.children.length)\n        return;\n    if (state == 'left' && nodeIndexToDelete == 0)\n        return;\n\n    var indexes = Array.apply(null, {length: N}).map(Number.call, Number);\n    var indexValue = indexes.splice(nodeIndexToDelete, 1)[0]; //remove element\n    indexes.splice(state === 'left' ? index - 1 : index, 0, indexValue); //insert\n\n    node.children = node.children.orderByIndexes(indexes); //apply\n    node.container.tabHost.performTabsLayout(indexes);\n    this.dockManager.notifyOnTabsReorder(node);\n};\n\nDockLayoutEngine.prototype._performDock = function(referenceNode, newNode, direction, insertBeforeReference)\n{\n    if (referenceNode.parent && referenceNode.parent.container.containerType === 'fill')\n        referenceNode = referenceNode.parent;\n\n    if (direction === 'fill' && referenceNode.container.containerType === 'fill')\n    {\n        referenceNode.addChild(newNode);\n        referenceNode.performLayout();\n        referenceNode.container.setActiveChild(newNode.container);\n        this.dockManager.invalidate();\n        this.dockManager.notifyOnDock(newNode);\n        return;\n    }\n\n    // Check if reference node is root node\n    var model = this.dockManager.context.model,\n        compositeContainer,\n        compositeNode,\n        referenceParent;\n\n    if (referenceNode === model.rootNode)\n    {\n        compositeContainer = this._createDockContainer(direction, newNode, referenceNode);\n        compositeNode = new DockNode(compositeContainer);\n\n        if (insertBeforeReference)\n        {\n            compositeNode.addChild(newNode);\n            compositeNode.addChild(referenceNode);\n        }\n        else\n        {\n            compositeNode.addChild(referenceNode);\n            compositeNode.addChild(newNode);\n        }\n\n        // Attach the root node to the dock manager's DOM\n\t\tthis.dockManager.setRootNode(compositeNode);\n        this.dockManager.rebuildLayout(this.dockManager.context.model.rootNode);\n        compositeNode.container.setActiveChild(newNode.container);\n        this.dockManager.invalidate();\n        this.dockManager.notifyOnDock(newNode);\n        return;\n    }\n\n    if (referenceNode.parent.container.containerType !== direction) {\n        referenceParent = referenceNode.parent;\n\n        // Get the dimensions of the reference node, for resizing later on\n        var referenceNodeWidth = referenceNode.container.containerElement.clientWidth;\n        var referenceNodeHeight = referenceNode.container.containerElement.clientHeight;\n\n        // Get the dimensions of the reference node, for resizing later on\n        var referenceNodeParentWidth = referenceParent.container.containerElement.clientWidth;\n        var referenceNodeParentHeight = referenceParent.container.containerElement.clientHeight;\n\n        // Replace the reference node with a new composite node with the reference and new node as it's children\n        compositeContainer = this._createDockContainer(direction, newNode, referenceNode);\n        compositeNode = new DockNode(compositeContainer);\n\n        referenceParent.addChildAfter(referenceNode, compositeNode);\n        referenceNode.detachFromParent();\n        utils.removeNode(referenceNode.container.containerElement);\n\n        if (insertBeforeReference)\n        {\n            compositeNode.addChild(newNode);\n            compositeNode.addChild(referenceNode);\n        }\n        else\n        {\n            compositeNode.addChild(referenceNode);\n            compositeNode.addChild(newNode);\n        }\n\n        referenceParent.performLayout();\n        compositeNode.performLayout();\n\n        compositeNode.container.setActiveChild(newNode.container);\n        compositeNode.container.resize(referenceNodeWidth, referenceNodeHeight);\n        referenceParent.container.resize(referenceNodeParentWidth, referenceNodeParentHeight);\n    }\n    else\n    {\n        // Add as a sibling, since the parent of the reference node is of the right composite type\n        referenceParent = referenceNode.parent;\n        if (insertBeforeReference)\n            referenceParent.addChildBefore(referenceNode, newNode);\n        else\n            referenceParent.addChildAfter(referenceNode, newNode);\n        referenceParent.performLayout();\n        referenceParent.container.setActiveChild(newNode.container);\n    }\n\n    // force resize the panel\n    var containerWidth = newNode.container.containerElement.clientWidth;\n    var containerHeight = newNode.container.containerElement.clientHeight;\n    newNode.container.resize(containerWidth, containerHeight);\n\n    this.dockManager.invalidate();\n\tthis.dockManager.notifyOnDock(newNode);\n};\n\nDockLayoutEngine.prototype._forceResizeCompositeContainer = function(container)\n{\n    var width = container.containerElement.clientWidth;\n    var height = container.containerElement.clientHeight;\n    container.resize(width, height);\n};\n\nDockLayoutEngine.prototype._createDockContainer = function(containerType, newNode, referenceNode)\n{\n    if (containerType === 'horizontal')\n        return new HorizontalDockContainer(this.dockManager, [newNode.container, referenceNode.container]);\n    if (containerType === 'vertical')\n        return new VerticalDockContainer(this.dockManager, [newNode.container, referenceNode.container]);\n    if (containerType === 'fill')\n        return new FillDockContainer(this.dockManager);\n    throw new Error('Failed to create dock container of type: ' + containerType);\n};\n\n\n/**\n * Gets the bounds of the new node if it were to dock with the specified configuration\n * The state is not modified in this function.  It is used for showing a preview of where\n * the panel would be docked when hovered over a dock wheel button\n */\nDockLayoutEngine.prototype.getDockBounds = function(referenceNode, containerToDock, direction, insertBeforeReference)\n{\n    var compositeNode; // The node that contains the splitter / fill node\n    var childCount;\n    var childPosition;\n    var bounds;\n\n    if (direction === 'fill')\n    {\n        // Since this is a fill operation, the highlight bounds is the same as the reference node\n        // TODO: Create a tab handle highlight to show that it's going to be docked in a tab\n        var targetElement = referenceNode.container.containerElement;\n        bounds = new Rectangle();\n        bounds.x = targetElement.offsetLeft;\n        bounds.y = targetElement.offsetTop;\n        bounds.width = targetElement.clientWidth;\n        bounds.height= targetElement.clientHeight;\n        return bounds;\n    }\n\n    if (referenceNode.parent && referenceNode.parent.container.containerType === 'fill')\n        // Ignore the fill container's child and move one level up\n        referenceNode = referenceNode.parent;\n\n    // Flag to indicate of the renference node was replaced with a new composite node with 2 children\n    var hierarchyModified = false;\n    if (referenceNode.parent && referenceNode.parent.container.containerType === direction) {\n        // The parent already is of the desired composite type.  Will be inserted as sibling to the reference node\n        compositeNode = referenceNode.parent;\n        childCount = compositeNode.children.length;\n        childPosition = compositeNode.children.indexOf(referenceNode) + (insertBeforeReference ? 0 : 1);\n    } else {\n        // The reference node will be replaced with a new composite node of the desired type with 2 children\n        compositeNode = referenceNode;\n        childCount = 1;   // The newly inserted composite node will contain the reference node\n        childPosition = (insertBeforeReference ? 0 : 1);\n        hierarchyModified = true;\n    }\n\n    var splitBarSize = 5;  // TODO: Get from DOM\n    var targetPanelSize = 0;\n    var targetPanelStart = 0;\n    if (direction === 'vertical' || direction === 'horizontal')\n    {\n        // Existing size of the composite container (without the splitter bars).\n        // This will also be the final size of the composite (splitter / fill)\n        // container after the new panel has been docked\n        var compositeSize = this._getVaringDimension(compositeNode.container, direction) - (childCount - 1) * splitBarSize;\n\n        // size of the newly added panel\n        var newPanelOriginalSize = this._getVaringDimension(containerToDock, direction);\n        var scaleMultiplier = compositeSize / (compositeSize + newPanelOriginalSize);\n\n        // Size of the panel after it has been docked and scaled\n        targetPanelSize = newPanelOriginalSize * scaleMultiplier;\n        if (hierarchyModified)\n            targetPanelStart = insertBeforeReference ? 0 : compositeSize * scaleMultiplier;\n        else\n        {\n            for (var i = 0; i < childPosition; i++)\n                targetPanelStart += this._getVaringDimension(compositeNode.children[i].container, direction);\n            targetPanelStart *= scaleMultiplier;\n        }\n    }\n\n    bounds = new Rectangle();\n    if (direction === 'vertical')\n    {\n        bounds.x = compositeNode.container.containerElement.offsetLeft;\n        bounds.y = compositeNode.container.containerElement.offsetTop + targetPanelStart;\n        bounds.width = compositeNode.container.width;\n        bounds.height = targetPanelSize;\n    } else if (direction === 'horizontal') {\n        bounds.x = compositeNode.container.containerElement.offsetLeft + targetPanelStart;\n        bounds.y = compositeNode.container.containerElement.offsetTop;\n        bounds.width = targetPanelSize;\n        bounds.height = compositeNode.container.height;\n    }\n\n    return bounds;\n};\n\nDockLayoutEngine.prototype._getVaringDimension = function(container, direction)\n{\n    if (direction === 'vertical')\n        return container.height;\n    if (direction === 'horizontal')\n        return container.width;\n    return 0;\n};\n\n},{\"../containers/FillDockContainer\":5,\"../containers/HorizontalDockContainer\":6,\"../containers/VerticalDockContainer\":9,\"../utils/Rectangle\":29,\"../utils/utils\":31,\"./DockNode\":17}],14:[function(require,module,exports){\nvar DockManagerContext = require('./DockManagerContext'),\n    DockNode = require('./DockNode'),\n    DockWheel = require('./DockWheel'),\n    DockLayoutEngine = require('./DockLayoutEngine'),\n    Dialog = require('../dialog/Dialog'),\n    DockGraphSerializer = require('../serialization/DockGraphSerializer'),\n    DockGraphDeserializer = require('../serialization/DockGraphDeserializer'),\n    EventHandler = require('../utils/EventHandler'),\n    Point = require('../utils/Point'),\n    utils = require('../utils/utils');\n\n/**\n * Dock manager manages all the dock panels in a hierarchy, similar to visual studio.\n * It owns a Html Div element inside which all panels are docked\n * Initially the document manager takes up the central space and acts as the root node\n */\n\nfunction DockManager(element)\n{\n    if (element === undefined)\n        throw new Error('Invalid Dock Manager element provided');\n\n    this.element = element;\n    this.context = this.dockWheel = this.layoutEngine = this.mouseMoveHandler = undefined;\n    this.layoutEventListeners = [];\n\n    this.defaultDialogPosition = new Point(0, 0);\n}\n\nmodule.exports = DockManager;\n\nDockManager.prototype.initialize = function()\n{\n    this.context = new DockManagerContext(this);\n    var documentNode = new DockNode(this.context.documentManagerView);\n    this.context.model.rootNode = documentNode;\n    this.context.model.documentManagerNode = documentNode;\n    this.context.model.dialogs = [];\n    this.setRootNode(this.context.model.rootNode);\n    // Resize the layout\n    this.resize(this.element.clientWidth, this.element.clientHeight);\n    this.dockWheel = new DockWheel(this);\n    this.layoutEngine = new DockLayoutEngine(this);\n    this._undockEnabled = true;\n    this.rebuildLayout(this.context.model.rootNode);\n};\n\nDockManager.prototype.checkXBounds = function(container, currentMousePosition, previousMousePosition){\n    var dx = Math.floor(currentMousePosition.x - previousMousePosition.x);\n    var leftBounds = currentMousePosition.x + dx < 0 || (container.offsetLeft + container.offsetWidth + dx - 40 ) < 0;\n    var rightBounds =\n        currentMousePosition.x + dx > this.element.offsetWidth ||\n        (container.offsetLeft + dx + 40) > this.element.offsetWidth;\n\n    if (leftBounds || rightBounds)\n    {\n        previousMousePosition.x = currentMousePosition.x;\n        dx = 0;\n    }\n\n    return dx;\n};\n\nDockManager.prototype.checkYBounds = function(container, currentMousePosition, previousMousePosition){\n    var dy = Math.floor(currentMousePosition.y - previousMousePosition.y);\n    var topBounds = container.offsetTop + dy < this.element.offsetTop;\n    var bottomBounds =\n        currentMousePosition.y + dy > this.element.offsetHeight ||\n        (container.offsetTop + dy > this.element.offsetHeight + this.element.offsetTop - 20);\n\n    if (topBounds || bottomBounds)\n    {\n        previousMousePosition.y = currentMousePosition.y;\n        dy = 0;\n    }\n\n    return dy;\n};\n\nDockManager.prototype.rebuildLayout = function(node)\n{\n    var self = this;\n    node.children.forEach(function(child) {\n        self.rebuildLayout(child);\n    });\n    node.performLayout();\n};\n\nDockManager.prototype.invalidate = function()\n{\n    this.resize(this.element.clientWidth, this.element.clientHeight);\n};\n\nDockManager.prototype.resize = function(width, height)\n{\n    this.element.style.width = width + 'px';\n    this.element.style.height = height + 'px';\n    this.context.model.rootNode.container.resize(width, height);\n};\n\n/**\n * Reset the dock model . This happens when the state is loaded from json\n */\nDockManager.prototype.setModel = function(model)\n{\n    utils.removeNode(this.context.documentManagerView.containerElement);\n    this.context.model = model;\n    this.setRootNode(model.rootNode);\n\n    this.rebuildLayout(model.rootNode);\n    this.loadResize(model.rootNode);\n    // this.invalidate();\n};\n\nDockManager.prototype.loadResize = function(node)\n{\n    var self = this;\n    node.children.reverse().forEach(function(child) {\n    self.loadResize(child);\n     node.container.setActiveChild(child.container);\n    });\n    node.children.reverse();\n    node.container.resize(node.container.state.width, node.container.state.height);\n\n    // node.performLayout();\n};\n\nDockManager.prototype.setRootNode = function(node)\n{\n    // if (this.context.model.rootNode)\n    // {\n    //     // detach it from the dock manager's base element\n    //     context.model.rootNode.detachFromParent();\n    // }\n\n    // Attach the new node to the dock manager's base element and set as root node\n    node.detachFromParent();\n    this.context.model.rootNode = node;\n    this.element.appendChild(node.container.containerElement);\n};\n\n\nDockManager.prototype.onDialogDragStarted = function(sender, e)\n{\n    this.dockWheel.activeNode = this._findNodeOnPoint(e.pageX, e.pageY);\n    this.dockWheel.activeDialog = sender;\n    this.dockWheel.showWheel();\n    if (this.mouseMoveHandler)\n    {\n        this.mouseMoveHandler.cancel();\n        delete this.mouseMoveHandler;\n    }\n    this.mouseMoveHandler = new EventHandler(window, 'mousemove', this.onMouseMoved.bind(this));\n};\n\nDockManager.prototype.onDialogDragEnded = function(sender)\n{\n    if (this.mouseMoveHandler)\n    {\n        this.mouseMoveHandler.cancel();\n        delete this.mouseMoveHandler;\n    }\n    this.dockWheel.onDialogDropped(sender);\n    this.dockWheel.hideWheel();\n    delete this.dockWheel.activeDialog;\n    //TODO: not so good\n    sender.saveState(sender.elementDialog.offsetLeft, sender.elementDialog.offsetTop);\n};\n\nDockManager.prototype.onMouseMoved = function(e)\n{\n    this.dockWheel.activeNode = this._findNodeOnPoint(e.clientX, e.clientY);\n};\n\n/**\n * Perform a DFS on the dock model's tree to find the\n * deepest level panel (i.e. the top-most non-overlapping panel)\n * that is under the mouse cursor\n * Retuns null if no node is found under this point\n */\nDockManager.prototype._findNodeOnPoint = function(x, y)\n{\n    var stack = [];\n    stack.push(this.context.model.rootNode);\n    var bestMatch;\n\n    while (stack.length > 0)\n    {\n        var topNode = stack.pop();\n\n        if (utils.isPointInsideNode(x, y, topNode))\n        {\n            // This node contains the point.\n            bestMatch = topNode;\n\n            // Keep looking future down\n            [].push.apply(stack, topNode.children);\n        }\n    }\n    return bestMatch;\n};\n\n/** Dock the [dialog] to the left of the [referenceNode] node */\nDockManager.prototype.dockDialogLeft = function(referenceNode, dialog)\n{\n    return this._requestDockDialog(referenceNode, dialog, this.layoutEngine.dockLeft.bind(this.layoutEngine));\n};\n\n/** Dock the [dialog] to the right of the [referenceNode] node */\nDockManager.prototype.dockDialogRight = function(referenceNode, dialog)\n{\n    return this._requestDockDialog(referenceNode, dialog, this.layoutEngine.dockRight.bind(this.layoutEngine));\n};\n\n/** Dock the [dialog] above the [referenceNode] node */\nDockManager.prototype.dockDialogUp = function(referenceNode, dialog)\n{\n    return this._requestDockDialog(referenceNode, dialog, this.layoutEngine.dockUp.bind(this.layoutEngine));\n};\n\n/** Dock the [dialog] below the [referenceNode] node */\nDockManager.prototype.dockDialogDown = function(referenceNode, dialog)\n{\n    return this._requestDockDialog(referenceNode, dialog, this.layoutEngine.dockDown.bind(this.layoutEngine));\n};\n\n/** Dock the [dialog] as a tab inside the [referenceNode] node */\nDockManager.prototype.dockDialogFill = function(referenceNode, dialog)\n{\n    return this._requestDockDialog(referenceNode, dialog, this.layoutEngine.dockFill.bind(this.layoutEngine));\n};\n\n/** Dock the [container] to the left of the [referenceNode] node */\nDockManager.prototype.dockLeft = function(referenceNode, container, ratio)\n{\n    return this._requestDockContainer(referenceNode, container, this.layoutEngine.dockLeft.bind(this.layoutEngine), ratio);\n};\n\n/** Dock the [container] to the right of the [referenceNode] node */\nDockManager.prototype.dockRight = function(referenceNode,  container, ratio)\n{\n    return this._requestDockContainer(referenceNode, container, this.layoutEngine.dockRight.bind(this.layoutEngine), ratio);\n};\n\n/** Dock the [container] above the [referenceNode] node */\nDockManager.prototype.dockUp = function(referenceNode,  container, ratio)\n{\n    return this._requestDockContainer(referenceNode, container, this.layoutEngine.dockUp.bind(this.layoutEngine), ratio);\n};\n\n/** Dock the [container] below the [referenceNode] node */\nDockManager.prototype.dockDown = function(referenceNode,  container, ratio)\n{\n    return this._requestDockContainer(referenceNode, container, this.layoutEngine.dockDown.bind(this.layoutEngine), ratio);\n};\n\n/** Dock the [container] as a tab inside the [referenceNode] node */\nDockManager.prototype.dockFill = function(referenceNode, container)\n{\n    return this._requestDockContainer(referenceNode, container, this.layoutEngine.dockFill.bind(this.layoutEngine));\n};\nDockManager.prototype.floatDialog = function(container, x, y)\n{\n    var retdiag = undefined;\n\n    //check the dialog do not already exist\n    this.context.model.dialogs.forEach(function(dialog) {\n        if (container == dialog.panel) {\n            dialog.show(x, y);\n            retdiag = dialog;\n\n        }\n    });\n    if (retdiag)\n        return retdiag;\n    //try to undock just in case\n    try {\n        var node = this._findNodeFromContainer(container);\n        this.layoutEngine.undock(node);\n    } catch (err) {}\n\n    var panel = container;\n    utils.removeNode(panel.elementPanel);\n    panel.isDialog = true;\n    var dialog = new Dialog(panel, this);\n    dialog.setPosition(x, y);\n    return dialog;\n};\n\nDockManager.prototype._requestDockDialog = function(referenceNode, dialog, layoutDockFunction)\n{\n    // Get the active dialog that was dragged on to the dock wheel\n    var panel = dialog.panel;\n    var newNode = new DockNode(panel);\n    panel.prepareForDocking();\n    dialog.destroy();\n    layoutDockFunction(referenceNode, newNode);\n    // this.invalidate();\n    return newNode;\n};\n\nDockManager.prototype._requestDockContainer = function(referenceNode, container, layoutDockFunction, ratio)\n{\n    // Get the active dialog that was dragged on to the dock wheel\n    var newNode = new DockNode(container);\n    if (container.containerType === 'panel')\n    {\n        var panel = container;\n        panel.prepareForDocking();\n        utils.removeNode(panel.elementPanel);\n    }\n    layoutDockFunction(referenceNode, newNode);\n\n    if (ratio && newNode.parent &&\n        (newNode.parent.container.containerType === 'vertical' || newNode.parent.container.containerType === 'horizontal'))\n    {\n        var splitter = newNode.parent.container;\n        splitter.setContainerRatio(container, ratio);\n    }\n\n    this.rebuildLayout(this.context.model.rootNode);\n    this.invalidate();\n    return newNode;\n};\n\nDockManager.prototype._requestTabReorder = function(container, e){\n    var node = this._findNodeFromContainer(container);\n     this.layoutEngine.reorderTabs(node, e.handle, e.state, e.index);\n};\n\n/**\n * Undocks a panel and converts it into a floating dialog window\n * It is assumed that only leaf nodes (panels) can be undocked\n */\nDockManager.prototype.requestUndockToDialog = function(container, event, dragOffset)\n{\n    var node = this._findNodeFromContainer(container);\n    this.layoutEngine.undock(node);\n\n    // Create a new dialog window for the undocked panel\n    var dialog = new Dialog(node.container, this);\n\n    if(event !== undefined){\n    // Adjust the relative position\n        var dialogWidth = dialog.elementDialog.clientWidth;\n        if (dragOffset.x > dialogWidth)\n            dragOffset.x = 0.75 * dialogWidth;\n        dialog.setPosition(\n            event.clientX - dragOffset.x,\n            event.clientY - dragOffset.y);\n        dialog.draggable.onMouseDown(event);\n    }\n    return dialog;\n};\n\n/** Undocks a panel and converts it into a floating dialog window\n * It is assumed that only leaf nodes (panels) can be undocked\n */\nDockManager.prototype.requestUndock = function(container)\n{\n    var node = this._findNodeFromContainer(container);\n    this.layoutEngine.undock(node);\n};\n\n/**\n * Removes a dock container from the dock layout hierarcy\n * Returns the node that was removed from the dock tree\n */\nDockManager.prototype.requestRemove = function(container)\n{\n    var node = this._findNodeFromContainer(container);\n    var parent = node.parent;\n    node.detachFromParent();\n    if (parent)\n        this.rebuildLayout(parent);\n    return node;\n};\n\n/** Finds the node that owns the specified [container] */\nDockManager.prototype._findNodeFromContainer = function(container)\n{\n    //this.context.model.rootNode.debugDumpTree();\n\n    var stack = [];\n    stack.push(this.context.model.rootNode);\n\n    while (stack.length > 0)\n    {\n        var topNode = stack.pop();\n\n        if (topNode.container === container)\n            return topNode;\n        [].push.apply(stack, topNode.children);\n    }\n\n    throw new Error('Cannot find dock node belonging to the element');\n};\n\nDockManager.prototype.findNodeFromContainerElement = function(containerElm) {\n    //this.context.model.rootNode.debugDumpTree();\n\n    var stack = [];\n    stack.push(this.context.model.rootNode);\n\n    while (stack.length > 0)\n    {\n        var topNode = stack.pop();\n\n        if (topNode.container.containerElement === containerElm)\n            return topNode;\n        [].push.apply(stack, topNode.children);\n    }\n\n    throw new Error('Cannot find dock node belonging to the element');\n};\n\nDockManager.prototype.addLayoutListener = function(listener)\n{\n    this.layoutEventListeners.push(listener);\n};\n\nDockManager.prototype.removeLayoutListener = function(listener)\n{\n    this.layoutEventListeners.splice(this.layoutEventListeners.indexOf(listener), 1);\n};\n\nDockManager.prototype.suspendLayout = function()\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n\t\tif (listener.onSuspendLayout) listener.onSuspendLayout(self);\n\t});\n};\n\nDockManager.prototype.resumeLayout = function(panel)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n\t\tif (listener.onResumeLayout) listener.onResumeLayout(self, panel);\n\t});\n};\n\nDockManager.prototype.notifyOnDock = function(dockNode)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n\t\tif (listener.onDock) {\n\t\t\tlistener.onDock(self, dockNode);\n\t\t}\n\t});\n};\n\nDockManager.prototype.notifyOnTabsReorder = function(dockNode)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onTabsReorder) {\n            listener.onTabsReorder(self, dockNode);\n        }\n    });\n};\n\n\nDockManager.prototype.notifyOnUnDock = function(dockNode)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n\t\tif (listener.onUndock) {\n\t\t\tlistener.onUndock(self, dockNode);\n\t\t}\n\t});\n};\n\nDockManager.prototype.notifyOnClosePanel = function(panel)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onClosePanel) {\n            listener.onClosePanel(self, panel);\n        }\n    });\n};\n\n\nDockManager.prototype.notifyOnCreateDialog = function(dialog)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onCreateDialog) {\n            listener.onCreateDialog(self, dialog);\n        }\n    });\n};\n\nDockManager.prototype.notifyOnHideDialog = function(dialog)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onHideDialog) {\n            listener.onHideDialog(self, dialog);\n        }\n    });\n};\n\n\nDockManager.prototype.notifyOnShowDialog = function(dialog)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onShowDialog) {\n            listener.onShowDialog(self, dialog);\n        }\n    });\n};\n\n\nDockManager.prototype.notifyOnChangeDialogPosition = function(dialog, x, y)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onChangeDialogPosition) {\n            listener.onChangeDialogPosition(self, dialog, x, y);\n        }\n    });\n};\n\nDockManager.prototype.notifyOnTabChange = function(tabpage)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onTabChanged) {\n            listener.onTabChanged(self, tabpage);\n        }\n    });\n};\n\nDockManager.prototype.saveState = function()\n{\n    var serializer = new DockGraphSerializer();\n    return serializer.serialize(this.context.model);\n};\n\nDockManager.prototype.loadState = function(json)\n{\n    var deserializer = new DockGraphDeserializer(this);\n    this.context.model = deserializer.deserialize(json);\n    this.setModel(this.context.model);\n};\n\nDockManager.prototype.getPanels = function()\n{\n    var panels = [];\n    //all visible nodes\n    this._allPanels(this.context.model.rootNode, panels);\n\n    //all visible or not dialogs\n    this.context.model.dialogs.forEach(function(dialog) {\n        //TODO: check visible\n        panels.push(dialog.panel);\n    });\n\n    return panels;\n};\n\nDockManager.prototype.undockEnabled = function(state)\n{\n    this._undockEnabled = state;\n    this.getPanels().forEach(function(panel){\n        panel.canUndock(state);\n    });\n};\n\nDockManager.prototype.lockDockState = function(state)\n{\n    this.undockEnabled(!state); // false - not enabled\n    this.hideCloseButton(state); //true - hide\n};\n\nDockManager.prototype.hideCloseButton = function(state)\n{\n    this.getPanels().forEach(function(panel){\n        panel.hideCloseButton(state);\n    });\n};\n\nDockManager.prototype.updatePanels = function(ids)\n{\n     var panels = [];\n    //all visible nodes\n    this._allPanels(this.context.model.rootNode, panels);\n    //only remove\n    panels.forEach(function(panel) {\n        if(!ids.contains(panel.elementContent.id)){\n           panel.close();\n       }\n    });\n\n    this.context.model.dialogs.forEach(function(dialog) {\n        if(ids.contains(dialog.panel.elementContent.id)){\n            dialog.show();\n        }\n        else{\n            dialog.hide();\n        }\n    });\n    return panels;\n};\n\nDockManager.prototype.getVisiblePanels = function()\n{\n    var panels = [];\n    //all visible nodes\n    this._allPanels(this.context.model.rootNode, panels);\n\n    //all visible\n    this.context.model.dialogs.forEach(function(dialog) {\n        if(!dialog.isHidden){\n            panels.push(dialog.panel);\n        }\n    });\n\n    return panels;\n};\n\nDockManager.prototype._allPanels = function(node, panels)\n{\n     var self = this;\n    node.children.forEach(function(child) {\n       self._allPanels(child, panels);\n    });\n    if (node.container.containerType === 'panel'){\n        panels.push(node.container);\n    }\n};\n\nDockManager.prototype.setCloseTabIconTemplate = function(template){\n    this.closeTabIconTemplate = template;\n};\n\n//typedef void LayoutEngineDockFunction(DockNode referenceNode, DockNode newNode);\n\n/**\n* The Dock Manager notifies the listeners of layout changes so client containers that have\n* costly layout structures can detach and reattach themself to avoid reflow\n*/\n//abstract class LayoutEventListener {\n//void onSuspendLayout(DockManager dockManager);\n//void onResumeLayout(DockManager dockManager);\n//}\n\n},{\"../dialog/Dialog\":12,\"../serialization/DockGraphDeserializer\":20,\"../serialization/DockGraphSerializer\":21,\"../utils/EventHandler\":27,\"../utils/Point\":28,\"../utils/utils\":31,\"./DockLayoutEngine\":13,\"./DockManagerContext\":15,\"./DockNode\":17,\"./DockWheel\":18}],15:[function(require,module,exports){\nvar DockModel = require('./DockModel'),\n    DocumentManagerContainer = require('../containers/DocumentManagerContainer');\n\nfunction DockManagerContext(dockManager)\n{\n    this.dockManager = dockManager;\n    this.model = new DockModel();\n    this.documentManagerView = new DocumentManagerContainer(this.dockManager);\n}\n\nmodule.exports = DockManagerContext;\n\n},{\"../containers/DocumentManagerContainer\":3,\"./DockModel\":16}],16:[function(require,module,exports){\n/**\n * The Dock Model contains the tree hierarchy that represents the state of the\n * panel placement within the dock manager.\n */\nfunction DockModel()\n{\n    this.rootNode = this.documentManagerNode = undefined;\n}\n\nmodule.exports = DockModel;\n\n},{}],17:[function(require,module,exports){\nfunction DockNode(container)\n{\n    /** The dock container represented by this node */\n    this.container = container;\n    this.children = [];\n}\n\nmodule.exports = DockNode;\n\nDockNode.prototype.detachFromParent = function()\n{\n    if (this.parent)\n    {\n        this.parent.removeChild(this);\n        delete this.parent;\n    }\n};\n\nDockNode.prototype.removeChild = function(childNode)\n{\n    var index = this.children.indexOf(childNode);\n    if (index >= 0)\n        this.children.splice(index, 1);\n};\n\nDockNode.prototype.addChild = function(childNode)\n{\n    childNode.detachFromParent();\n    childNode.parent = this;\n    this.children.push(childNode);\n};\n\nDockNode.prototype.addChildBefore = function(referenceNode, childNode)\n{\n    this._addChildWithDirection(referenceNode, childNode, true);\n};\n\nDockNode.prototype.addChildAfter = function(referenceNode, childNode)\n{\n    this._addChildWithDirection(referenceNode, childNode, false);\n};\n\nDockNode.prototype._addChildWithDirection = function(referenceNode, childNode, before)\n{\n    // Detach this node from it's parent first\n    childNode.detachFromParent();\n    childNode.parent = this;\n\n    var referenceIndex = this.children.indexOf(referenceNode);\n    var preList = this.children.slice(0, referenceIndex);\n    var postList = this.children.slice(referenceIndex + 1, this.children.length);\n\n    this.children = preList.slice(0);\n    if (before)\n    {\n        this.children.push(childNode);\n        this.children.push(referenceNode);\n    }\n    else\n    {\n        this.children.push(referenceNode);\n        this.children.push(childNode);\n    }\n    Array.prototype.push.apply(this.children, postList);\n};\n\nDockNode.prototype.performLayout = function()\n{\n    var childContainers = this.children.map(function(childNode) { return childNode.container; });\n    this.container.performLayout(childContainers);\n};\n\nDockNode.prototype.debugDumpTree = function(indent)\n{\n    if (indent === undefined)\n        indent = 0;\n\n    var message = this.container.name;\n    for (var i = 0; i < indent; i++)\n        message = '\\t' + message;\n\n    var parentType = this.parent === undefined ? 'null' : this.parent.container.containerType;\n    console.log('>>' + message + ' [' + parentType + ']');\n\n    this.children.forEach(function(childNode) { childNode.debugDumpTree(indent + 1); });\n};\n\n},{}],18:[function(require,module,exports){\nvar DockWheelItem = require('./DockWheelItem'),\n    utils = require('../utils/utils');\n\n/**\n * Manages the dock overlay buttons that are displayed over the dock manager\n */\nfunction DockWheel(dockManager)\n{\n    this.dockManager = dockManager;\n    this.elementMainWheel = document.createElement('div');    // Contains the main wheel's 5 dock buttons\n    this.elementSideWheel = document.createElement('div');    // Contains the 4 buttons on the side\n    this.wheelItems = {};\n    var wheelTypes = [\n        'left', 'right', 'top', 'down', 'fill',     // Main dock wheel buttons\n        'left-s', 'right-s', 'top-s', 'down-s'      // Buttons on the extreme 4 sides\n    ];\n    var self = this;\n    wheelTypes.forEach(function(wheelType)\n    {\n        self.wheelItems[wheelType] = new DockWheelItem(self, wheelType);\n        if (wheelType.substr(-2, 2) === '-s')\n            // Side button\n            self.elementSideWheel.appendChild(self.wheelItems[wheelType].element);\n        else\n            // Main dock wheel button\n            self.elementMainWheel.appendChild(self.wheelItems[wheelType].element);\n    });\n\n    var zIndex = 100000;\n    this.elementMainWheel.classList.add('dock-wheel-base');\n    this.elementSideWheel.classList.add('dock-wheel-base');\n    this.elementMainWheel.style.zIndex = zIndex + 1;\n    this.elementSideWheel.style.zIndex = zIndex;\n    this.elementPanelPreview = document.createElement('div');\n    this.elementPanelPreview.classList.add('dock-wheel-panel-preview');\n    this.elementPanelPreview.style.zIndex = zIndex - 1;\n    this.activeDialog = undefined;  // The dialog being dragged, when the wheel is visible\n    this._activeNode = undefined;\n    this._visible = false;\n}\n\nmodule.exports = DockWheel;\n\n/** The node over which the dock wheel is being displayed on */\nObject.defineProperty(DockWheel.prototype, 'activeNode', {\n    get: function() { return this._activeNode; },\n    set: function(value)\n    {\n        var previousValue = this._activeNode;\n        this._activeNode = value;\n\n        if (previousValue !== this._activeNode)\n        {\n            // The active node has been changed.\n            // Reattach the wheel to the new node's element and show it again\n            if (this._visible)\n                this.showWheel();\n        }\n    }\n});\n\nDockWheel.prototype.showWheel = function()\n{\n    this._visible = true;\n    if (!this.activeNode)\n    {\n        // No active node selected. make sure the wheel is invisible\n        utils.removeNode(this.elementMainWheel);\n        utils.removeNode(this.elementSideWheel);\n        return;\n    }\n    var element = this.activeNode.container.containerElement;\n    var containerWidth = element.clientWidth;\n    var containerHeight = element.clientHeight;\n    var baseX = Math.floor(containerWidth / 2) + element.offsetLeft;\n    var baseY = Math.floor(containerHeight / 2) + element.offsetTop;\n    this.elementMainWheel.style.left = baseX + 'px';\n    this.elementMainWheel.style.top = baseY + 'px';\n\n    // The positioning of the main dock wheel buttons is done automatically through CSS\n    // Dynamically calculate the positions of the buttons on the extreme sides of the dock manager\n    var sideMargin = 20;\n    var dockManagerWidth = this.dockManager.element.clientWidth;\n    var dockManagerHeight = this.dockManager.element.clientHeight;\n    // var dockManagerOffsetX = this.dockManager.element.offsetLeft;\n    // var dockManagerOffsetY = this.dockManager.element.offsetTop;\n\n    utils.removeNode(this.elementMainWheel);\n    utils.removeNode(this.elementSideWheel);\n    element.appendChild(this.elementMainWheel);\n    this.dockManager.element.appendChild(this.elementSideWheel);\n\n    this._setWheelButtonPosition('left-s',   sideMargin, -dockManagerHeight / 2);\n    this._setWheelButtonPosition('right-s',  dockManagerWidth - sideMargin * 2, -dockManagerHeight / 2);\n    this._setWheelButtonPosition('top-s',    dockManagerWidth / 2, -dockManagerHeight + sideMargin);\n    this._setWheelButtonPosition('down-s',   dockManagerWidth / 2, -sideMargin);\n};\n\nDockWheel.prototype._setWheelButtonPosition = function(wheelId, left, top)\n{\n    var item = this.wheelItems[wheelId];\n    var itemHalfWidth = item.element.clientWidth / 2;\n    var itemHalfHeight = item.element.clientHeight / 2;\n\n    var x = Math.floor(left - itemHalfWidth);\n    var y = Math.floor(top - itemHalfHeight);\n//    item.element.style.left = '${x}px';\n//    item.element.style.top = '${y}px';\n    item.element.style.marginLeft = x + 'px';\n    item.element.style.marginTop = y + 'px';\n};\n\nDockWheel.prototype.hideWheel = function()\n{\n    this._visible = false;\n    this.activeNode = undefined;\n    utils.removeNode(this.elementMainWheel);\n    utils.removeNode(this.elementSideWheel);\n    utils.removeNode(this.elementPanelPreview);\n\n    // deactivate all wheels\n    for (var wheelType in this.wheelItems)\n        this.wheelItems[wheelType].active = false;\n};\n\nDockWheel.prototype.onMouseOver = function(wheelItem)\n{\n    if (!this.activeDialog)\n        return;\n\n    // Display the preview panel to show where the panel would be docked\n    var rootNode = this.dockManager.context.model.rootNode;\n    var bounds;\n    if (wheelItem.id === 'top') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(this.activeNode, this.activeDialog.panel, 'vertical', true);\n    } else if (wheelItem.id === 'down') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(this.activeNode, this.activeDialog.panel, 'vertical', false);\n    } else if (wheelItem.id === 'left') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(this.activeNode, this.activeDialog.panel, 'horizontal', true);\n    } else if (wheelItem.id === 'right') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(this.activeNode, this.activeDialog.panel, 'horizontal', false);\n    } else if (wheelItem.id === 'fill') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(this.activeNode, this.activeDialog.panel, 'fill', false);\n    } else if (wheelItem.id === 'top-s') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(rootNode, this.activeDialog.panel, 'vertical', true);\n    } else if (wheelItem.id === 'down-s') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(rootNode, this.activeDialog.panel, 'vertical', false);\n    } else if (wheelItem.id === 'left-s') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(rootNode, this.activeDialog.panel, 'horizontal', true);\n    } else if (wheelItem.id === 'right-s') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(rootNode, this.activeDialog.panel, 'horizontal', false);\n    }\n\n    if (bounds)\n    {\n        this.dockManager.element.appendChild(this.elementPanelPreview);\n        this.elementPanelPreview.style.left = Math.round(bounds.x) + 'px';\n        this.elementPanelPreview.style.top = Math.round(bounds.y) + 'px';\n        this.elementPanelPreview.style.width = Math.round(bounds.width) + 'px';\n        this.elementPanelPreview.style.height = Math.round(bounds.height) + 'px';\n    }\n};\n\nDockWheel.prototype.onMouseOut = function()\n{\n    utils.removeNode(this.elementPanelPreview);\n};\n\n/**\n * Called if the dialog is dropped in a dock panel.\n * The dialog might not necessarily be dropped in one of the dock wheel buttons,\n * in which case the request will be ignored\n */\nDockWheel.prototype.onDialogDropped = function(dialog)\n{\n    // Check if the dialog was dropped in one of the wheel items\n    var wheelItem = this._getActiveWheelItem();\n    if (wheelItem)\n        this._handleDockRequest(wheelItem, dialog);\n};\n\n/**\n * Returns the wheel item which has the mouse cursor on top of it\n */\nDockWheel.prototype._getActiveWheelItem = function()\n{\n    for (var wheelType in this.wheelItems)\n    {\n        var wheelItem = this.wheelItems[wheelType];\n        if (wheelItem.active)\n            return wheelItem;\n    }\n    return undefined;\n};\n\nDockWheel.prototype._handleDockRequest = function(wheelItem, dialog)\n{\n    if (!this.activeNode)\n        return;\n    if (wheelItem.id === 'left') {\n        this.dockManager.dockDialogLeft(this.activeNode, dialog);\n    } else if (wheelItem.id === 'right') {\n        this.dockManager.dockDialogRight(this.activeNode, dialog);\n    } else if (wheelItem.id === 'top') {\n        this.dockManager.dockDialogUp(this.activeNode, dialog);\n    } else if (wheelItem.id === 'down') {\n        this.dockManager.dockDialogDown(this.activeNode, dialog);\n    } else if (wheelItem.id === 'fill') {\n        this.dockManager.dockDialogFill(this.activeNode, dialog);\n    } else if (wheelItem.id === 'left-s') {\n        this.dockManager.dockDialogLeft(this.dockManager.context.model.rootNode, dialog);\n    } else if (wheelItem.id === 'right-s') {\n        this.dockManager.dockDialogRight(this.dockManager.context.model.rootNode, dialog);\n    } else if (wheelItem.id === 'top-s') {\n        this.dockManager.dockDialogUp(this.dockManager.context.model.rootNode, dialog);\n    } else if (wheelItem.id === 'down-s') {\n        this.dockManager.dockDialogDown(this.dockManager.context.model.rootNode, dialog);\n    }\n};\n\n\n},{\"../utils/utils\":31,\"./DockWheelItem\":19}],19:[function(require,module,exports){\nvar EventHandler = require('../utils/EventHandler');\n\nfunction DockWheelItem(wheel, id)\n{\n    this.wheel = wheel;\n    this.id = id;\n    var wheelType = id.replace('-s', '');\n    this.element = document.createElement('div');\n    this.element.classList.add('dock-wheel-item');\n    this.element.classList.add('disable-selection');\n    this.element.classList.add('dock-wheel-' + wheelType);\n    this.element.classList.add('dock-wheel-' + wheelType + '-icon');\n    this.hoverIconClass = 'dock-wheel-' + wheelType + '-icon-hover';\n    this.mouseOverHandler = new EventHandler(this.element, 'mouseover', this.onMouseMoved.bind(this));\n    this.mouseOutHandler = new EventHandler(this.element, 'mouseout', this.onMouseOut.bind(this));\n    this.active = false;    // Becomes active when the mouse is hovered over it\n}\n\nmodule.exports = DockWheelItem;\n\nDockWheelItem.prototype.onMouseMoved = function(e)\n{\n    this.active = true;\n    this.element.classList.add(this.hoverIconClass);\n    this.wheel.onMouseOver(this, e);\n};\n\nDockWheelItem.prototype.onMouseOut = function(e)\n{\n    this.active = false;\n    this.element.classList.remove(this.hoverIconClass);\n    this.wheel.onMouseOut(this, e);\n};\n\n},{\"../utils/EventHandler\":27}],20:[function(require,module,exports){\nvar DockModel = require('../dock/DockModel'),\n    DockNode = require('../dock/DockNode'),\n    PanelContainer = require('../containers/PanelContainer'),\n    HorizontalDockContainer = require('../containers/HorizontalDockContainer'),\n    VerticalDockContainer = require('../containers/VerticalDockContainer'),\n    DocumentManagerContainer = require('../containers/DocumentManagerContainer'),\n    FillDockContainer = require('../containers/FillDockContainer'),\n    Dialog = require('../dialog/Dialog'),\n    utils = require('../utils/utils');\n\n/**\n * Deserializes the dock layout hierarchy from JSON and creates a dock hierarhcy graph\n */\nfunction DockGraphDeserializer(dockManager)\n{\n    this.dockManager = dockManager;\n}\n\nmodule.exports = DockGraphDeserializer;\n\nDockGraphDeserializer.prototype.deserialize = function(_json)\n{\n    var info = JSON.parse(_json);\n    var model = new DockModel();\n    model.rootNode = this._buildGraph(info.graphInfo);\n    model.dialogs = this._buildDialogs(info.dialogsInfo);\n    return model;\n};\n\nDockGraphDeserializer.prototype._buildGraph = function(nodeInfo)\n{\n    var childrenInfo = nodeInfo.children;\n    var children = [];\n    var self = this;\n    childrenInfo.forEach(function(childInfo)\n    {\n        var childNode = self._buildGraph(childInfo);\n        if (childNode !== null) {\n            children.push(childNode);\n        }\n    });\n\n    // Build the container owned by this node\n    var container = this._createContainer(nodeInfo, children);\n    if(container === null) {\n        return null;\n    }\n    // Build the node for this container and attach it's children\n    var node = new DockNode(container);\n    node.children = children;\n    node.children.reverse().forEach(function(childNode) {\n        childNode.parent = node;\n    });\n    node.children.reverse();\n    // node.container.setActiveChild(node.container);\n    return node;\n};\n\nDockGraphDeserializer.prototype._createContainer = function(nodeInfo, children)\n{\n    var containerType = nodeInfo.containerType;\n    var containerState = nodeInfo.state;\n    var container;\n\n    var childContainers = [];\n    children.forEach(function(childNode) { childContainers.push(childNode.container); });\n\n\n    if (containerType === 'panel'){\n        container = new PanelContainer.loadFromState(containerState, this.dockManager);\n        if(!container.prepareForDocking)\n            return null;\n         container.prepareForDocking();\n         utils.removeNode(container.elementPanel);\n    }\n    else if (containerType === 'horizontal')\n        container = new HorizontalDockContainer(this.dockManager, childContainers);\n    else if (containerType === 'vertical')\n        container = new VerticalDockContainer(this.dockManager, childContainers);\n    else if (containerType === 'fill')\n    {\n        // Check if this is a document manager\n\n        // TODO: Layout engine compares the string 'fill', so cannot create another subclass type\n        // called document_manager and have to resort to this hack. use RTTI in layout engine\n        var typeDocumentManager = containerState.documentManager;\n        if (typeDocumentManager)\n            container = new DocumentManagerContainer(this.dockManager);\n        else\n            container = new FillDockContainer(this.dockManager);\n    }\n    else\n        throw new Error('Cannot create dock container of unknown type: ' + containerType);\n\n    // Restore the state of the container\n\n    container.loadState(containerState);\n\n    // container.performLayout(childContainers);\n    return container;\n};\n\nDockGraphDeserializer.prototype._buildDialogs = function(dialogsInfo)\n{\n    var dialogs = [];\n    var self = this;\n    dialogsInfo.forEach(function(dialogInfo) {\n        var containerType = dialogInfo.containerType;\n        var containerState = dialogInfo.state;\n        var container;\n        if (containerType === 'panel'){\n            container = new PanelContainer.loadFromState(containerState, self.dockManager);\n            if (container.prepareForDocking) {\n                utils.removeNode(container.elementPanel);\n                container.isDialog = true;\n                var dialog = new Dialog(container, self.dockManager);\n                if(dialogInfo.position.left > document.body.clientWidth ||\n                    dialogInfo.position.top > document.body.clientHeight - 70){\n                    dialogInfo.position.left = 20;\n                    dialogInfo.position.top = 70;\n                }\n                dialog.setPosition(dialogInfo.position.left, dialogInfo.position.top);\n                dialog.isHidden = dialogInfo.isHidden;\n                if(dialog.isHidden)\n                    dialog.hide();\n                dialogs.push(dialog);\n            }\n        }\n\n    });\n    return dialogs;\n};\n\n},{\"../containers/DocumentManagerContainer\":3,\"../containers/FillDockContainer\":5,\"../containers/HorizontalDockContainer\":6,\"../containers/PanelContainer\":7,\"../containers/VerticalDockContainer\":9,\"../dialog/Dialog\":12,\"../dock/DockModel\":16,\"../dock/DockNode\":17,\"../utils/utils\":31}],21:[function(require,module,exports){\n/**\n * The serializer saves / loads the state of the dock layout hierarchy\n */\nfunction DockGraphSerializer() {}\n\nmodule.exports = DockGraphSerializer;\n\nDockGraphSerializer.prototype.serialize = function(model)\n{\n    var graphInfo = this._buildGraphInfo(model.rootNode);\n    var dialogs = this._buildDialogsInfo(model.dialogs);\n    return JSON.stringify({graphInfo: graphInfo, dialogsInfo: dialogs});\n};\n\nDockGraphSerializer.prototype._buildGraphInfo = function(node)\n{\n    var nodeState = {};\n    node.container.saveState(nodeState);\n\n    var childrenInfo = [];\n    var self = this;\n    node.children.forEach(function(childNode) {\n        childrenInfo.push(self._buildGraphInfo(childNode));\n    });\n\n    var nodeInfo = {};\n    nodeInfo.containerType = node.container.containerType;\n    nodeInfo.state = nodeState;\n    nodeInfo.children = childrenInfo;\n    return nodeInfo;\n};\n\nDockGraphSerializer.prototype._buildDialogsInfo = function(dialogs)\n{\n    var dialogsInfo = [];\n    dialogs.forEach(function(dialog) {\n        var panelState = {};\n        var panelContainer = dialog.panel;\n        panelContainer.saveState(panelState);\n\n        var panelInfo = {};\n        panelInfo.containerType = panelContainer.containerType;\n        panelInfo.state = panelState;\n        panelInfo.children = [];\n        panelInfo.position = dialog.getPosition();\n        panelInfo.isHidden = dialog.isHidden;\n        dialogsInfo.push(panelInfo);\n    });\n\n    return dialogsInfo;\n};\n\n},{}],22:[function(require,module,exports){\nvar EventHandler = require('../utils/EventHandler'),\n    utils = require('../utils/utils');\n\nfunction SplitterBar(previousContainer, nextContainer, stackedVertical)\n{\n    // The panel to the left/top side of the bar, depending on the bar orientation\n    this.previousContainer = previousContainer;\n    // The panel to the right/bottom side of the bar, depending on the bar orientation\n    this.nextContainer = nextContainer;\n    this.stackedVertical = stackedVertical;\n    this.barElement = document.createElement('div');\n    this.barElement.classList.add(stackedVertical ? 'splitbar-horizontal' : 'splitbar-vertical');\n    this.mouseDownHandler = new EventHandler(this.barElement, 'mousedown', this.onMouseDown.bind(this));\n    this.minPanelSize = 50; // TODO: Get from container configuration\n    this.readyToProcessNextDrag = true;\n}\n\nmodule.exports = SplitterBar;\n\nSplitterBar.prototype.onMouseDown = function(e)\n{\n    this._startDragging(e);\n};\n\nSplitterBar.prototype.onMouseUp = function(e)\n{\n    this._stopDragging(e);\n};\n\nSplitterBar.prototype.onMouseMoved = function(e)\n{\n    if (!this.readyToProcessNextDrag)\n        return;\n    this.readyToProcessNextDrag = false;\n\n    var dockManager = this.previousContainer.dockManager;\n    dockManager.suspendLayout();\n    var dx = e.pageX - this.previousMouseEvent.pageX;\n    var dy = e.pageY - this.previousMouseEvent.pageY;\n    this._performDrag(dx, dy);\n    this.previousMouseEvent = e;\n    this.readyToProcessNextDrag = true;\n    dockManager.resumeLayout();\n};\n\nSplitterBar.prototype._performDrag = function(dx, dy)\n{\n    var previousWidth = this.previousContainer.containerElement.clientWidth;\n    var previousHeight = this.previousContainer.containerElement.clientHeight;\n    var nextWidth = this.nextContainer.containerElement.clientWidth;\n    var nextHeight = this.nextContainer.containerElement.clientHeight;\n\n    var previousPanelSize = this.stackedVertical ? previousHeight : previousWidth;\n    var nextPanelSize = this.stackedVertical ? nextHeight : nextWidth;\n    var deltaMovement = this.stackedVertical ? dy : dx;\n    var newPreviousPanelSize = previousPanelSize + deltaMovement;\n    var newNextPanelSize = nextPanelSize - deltaMovement;\n\n    if (newPreviousPanelSize < this.minPanelSize || newNextPanelSize < this.minPanelSize)\n    {\n        // One of the panels is smaller than it should be.\n        // In that case, check if the small panel's size is being increased\n        var continueProcessing = (newPreviousPanelSize < this.minPanelSize && newPreviousPanelSize > previousPanelSize) ||\n            (newNextPanelSize < this.minPanelSize && newNextPanelSize > nextPanelSize);\n\n        if (!continueProcessing)\n            return;\n    }\n\n    if (this.stackedVertical)\n    {\n        this.previousContainer.resize(previousWidth, newPreviousPanelSize);\n        this.nextContainer.resize(nextWidth, newNextPanelSize);\n    }\n    else\n    {\n        this.previousContainer.resize(newPreviousPanelSize, previousHeight);\n        this.nextContainer.resize(newNextPanelSize, nextHeight);\n    }\n};\n\nSplitterBar.prototype._startDragging = function(e)\n{\n    utils.disableGlobalTextSelection();\n    if (this.mouseMovedHandler)\n    {\n        this.mouseMovedHandler.cancel();\n        delete this.mouseMovedHandler;\n    }\n    if (this.mouseUpHandler)\n    {\n        this.mouseUpHandler.cancel();\n        delete this.mouseUpHandler;\n    }\n    this.mouseMovedHandler = new EventHandler(window, 'mousemove', this.onMouseMoved.bind(this));\n    this.mouseUpHandler = new EventHandler(window, 'mouseup', this.onMouseUp.bind(this));\n    this.previousMouseEvent = e;\n};\n\nSplitterBar.prototype._stopDragging = function()\n{\n    utils.enableGlobalTextSelection();\n    document.body.classList.remove('disable-selection');\n    if (this.mouseMovedHandler)\n    {\n        this.mouseMovedHandler.cancel();\n        delete this.mouseMovedHandler;\n    }\n    if (this.mouseUpHandler)\n    {\n        this.mouseUpHandler.cancel();\n        delete this.mouseUpHandler;\n    }\n};\n\n},{\"../utils/EventHandler\":27,\"../utils/utils\":31}],23:[function(require,module,exports){\nvar SplitterBar = require('./SplitterBar'),\n    utils = require('../utils/utils');\n\n/**\n * A splitter panel manages the child containers inside it with splitter bars.\n * It can be stacked horizontally or vertically\n */\nfunction SplitterPanel(childContainers, stackedVertical)\n{\n    this.childContainers = childContainers;\n    this.stackedVertical = stackedVertical;\n    this.panelElement = document.createElement('div');\n    this.spiltterBars = [];\n    this._buildSplitterDOM();\n}\n\nmodule.exports = SplitterPanel;\n\nSplitterPanel.prototype._buildSplitterDOM = function()\n{\n    if (this.childContainers.length <= 1)\n        throw new Error('Splitter panel should contain atleast 2 panels');\n\n    this.spiltterBars = [];\n    for (var i = 0; i < this.childContainers.length - 1; i++)\n    {\n        var previousContainer = this.childContainers[i];\n        var nextContainer = this.childContainers[i + 1];\n        var splitterBar = new SplitterBar(previousContainer, nextContainer, this.stackedVertical);\n        this.spiltterBars.push(splitterBar);\n\n        // Add the container and split bar to the panel's base div element\n        this._insertContainerIntoPanel(previousContainer);\n        this.panelElement.appendChild(splitterBar.barElement);\n    }\n    this._insertContainerIntoPanel(this.childContainers.slice(-1)[0]);\n};\n\nSplitterPanel.prototype.performLayout = function(children)\n{\n    this.removeFromDOM();\n\n    // rebuild\n    this.childContainers = children;\n    this._buildSplitterDOM();\n};\n\nSplitterPanel.prototype.removeFromDOM = function()\n{\n    this.childContainers.forEach(function(container)\n    {\n        if (container.containerElement)\n        {\n            container.containerElement.classList.remove('splitter-container-vertical');\n            container.containerElement.classList.remove('splitter-container-horizontal');\n            utils.removeNode(container.containerElement);\n        }\n    });\n    this.spiltterBars.forEach(function(bar) { utils.removeNode(bar.barElement); });\n};\n\nSplitterPanel.prototype.destroy = function()\n{\n    this.removeFromDOM();\n    this.panelElement.parentNode.removeChild(this.panelElement);\n};\n\nSplitterPanel.prototype._insertContainerIntoPanel = function(container)\n{\n    if (!container)\n    {\n        console.log('undefined');\n    }\n\n    utils.removeNode(container.containerElement);\n    this.panelElement.appendChild(container.containerElement);\n    container.containerElement.classList.add(\n        this.stackedVertical ? 'splitter-container-vertical' : 'splitter-container-horizontal'\n    );\n};\n\n/**\n * Sets the percentage of space the specified [container] takes in the split panel\n * The percentage is specified in [ratio] and is between 0..1\n */\nSplitterPanel.prototype.setContainerRatio = function(container, ratio)\n{\n    var splitPanelSize = this.stackedVertical ? this.panelElement.clientHeight : this.panelElement.clientWidth;\n    var newContainerSize = splitPanelSize * ratio;\n    var barSize = this.stackedVertical ?\n        this.spiltterBars[0].barElement.clientHeight : this.spiltterBars[0].barElement.clientWidth;\n\n    var otherPanelSizeQuota = splitPanelSize - newContainerSize - barSize * this.spiltterBars.length;\n    var otherPanelScaleMultipler = otherPanelSizeQuota / splitPanelSize;\n\n    for (var i = 0; i < this.childContainers.length; i++)\n    {\n        var child = this.childContainers[i];\n        var size;\n        if (child !== container)\n        {\n            size = this.stackedVertical ? child.containerElement.clientHeight : child.containerElement.clientWidth;\n            size *= otherPanelScaleMultipler;\n        }\n        else\n            size = newContainerSize;\n\n        if (this.stackedVertical)\n            child.resize(child.width, Math.floor(size));\n        else\n            child.resize(Math.floor(size), child.height);\n    }\n};\n\nSplitterPanel.prototype.resize = function(width, height)\n{\n    if (this.childContainers.length <= 1)\n        return;\n\n    var i;\n\n    // Adjust the fixed dimension that is common to all (i.e. width, if stacked vertical; height, if stacked horizontally)\n    for (i = 0; i < this.childContainers.length; i++)\n    {\n        var childContainer = this.childContainers[i];\n        if (this.stackedVertical)\n            childContainer.resize(width, childContainer.height);\n        else\n            childContainer.resize(childContainer.width, height);\n\n        if (i < this.spiltterBars.length) {\n            var splitBar = this.spiltterBars[i];\n            if (this.stackedVertical)\n                splitBar.barElement.style.width = width + 'px';\n            else\n                splitBar.barElement.style.height = height + 'px';\n        }\n    }\n\n    // Adjust the varying dimension\n    var totalChildPanelSize = 0;\n    // Find out how much space existing child containers take up (excluding the splitter bars)\n    var self = this;\n    this.childContainers.forEach(function(container)\n    {\n        var size = self.stackedVertical ?\n            container.height :\n            container.width;\n        totalChildPanelSize += size;\n    });\n\n    // Get the thickness of the bar\n    var barSize = this.stackedVertical ?\n        this.spiltterBars[0].barElement.clientHeight : this.spiltterBars[0].barElement.clientWidth;\n\n    // Find out how much space existing child containers will take after being resized (excluding the splitter bars)\n    var targetTotalChildPanelSize = this.stackedVertical ? height : width;\n    targetTotalChildPanelSize -= barSize * this.spiltterBars.length;\n\n    // Get the scale multiplier\n    totalChildPanelSize = Math.max(totalChildPanelSize, 1);\n    var scaleMultiplier = targetTotalChildPanelSize / totalChildPanelSize;\n\n\n    // Update the size with this multiplier\n    var updatedTotalChildPanelSize = 0;\n    for (i = 0; i < this.childContainers.length; i++)\n    {\n        var child = this.childContainers[i];\n        var original = this.stackedVertical ?\n            child.containerElement.clientHeight :\n            child.containerElement.clientWidth;\n\n        var newSize = scaleMultiplier > 1 ? Math.floor(original * scaleMultiplier) :\n        Math.ceil(original * scaleMultiplier);\n        updatedTotalChildPanelSize += newSize;\n\n        // If this is the last node, add any extra pixels to fix the rounding off errors and match the requested size\n        if (i === this.childContainers.length - 1)\n            newSize += targetTotalChildPanelSize - updatedTotalChildPanelSize;\n\n        // Set the size of the panel\n        if (this.stackedVertical)\n            child.resize(child.width, newSize );\n        else\n            child.resize( newSize, child.height);\n    }\n\n    this.panelElement.style.width = width + 'px';\n    this.panelElement.style.height = height + 'px';\n};\n\n},{\"../utils/utils\":31,\"./SplitterBar\":22}],24:[function(require,module,exports){\nvar PanelContainer = require('../containers/PanelContainer'),\n    UndockInitiator = require('../utils/UndockInitiator'),\n    EventHandler = require('../utils/EventHandler'),\n    utils = require('../utils/utils');\n\n/**\n * A tab handle represents the tab button on the tab strip\n */\nfunction TabHandle(parent)\n{\n    this.parent = parent;\n    var undockHandler = TabHandle.prototype._performUndock.bind(this);\n    this.elementBase = document.createElement('div');\n    this.elementText = document.createElement('div');\n    this.elementCloseButton = document.createElement('div');\n    this.elementBase.classList.add('tab-handle');\n    this.elementBase.classList.add('disable-selection'); // Disable text selection\n    this.elementText.classList.add('tab-handle-text');\n    this.elementCloseButton.classList.add('tab-handle-close-button');\n    this.elementBase.appendChild(this.elementText);\n    if (this.parent.host.displayCloseButton)\n        this.elementBase.appendChild(this.elementCloseButton);\n\n    this.parent.host.tabListElement.appendChild(this.elementBase);\n\n    var panel = parent.container;\n    var title = panel.getRawTitle();\n    var that = this;\n    this.undockListener = {\n        onDockEnabled:function(e){ that.undockEnabled(e.state); },\n        onHideCloseButton: function(e){ that.hideCloseButton(e.state); }\n    };\n    this.eventListeners = [];\n    panel.addListener(this.undockListener);\n\n    this.elementText.innerHTML = title;\n\n    // Set the close button text (font awesome)\n    if (this.parent.container instanceof PanelContainer && this.parent.container.dockManager.closeTabIconTemplate) {\n         this.elementCloseButton.innerHTML = this.parent.container.dockManager.closeTabIconTemplate();\n    }\n    else {\n        this.elementCloseButton.innerHTML = '<i class=\"fa fa-times\"></i>';\n    }\n\n    this._bringToFront(this.elementBase);\n\n    this.undockInitiator = new UndockInitiator(this.elementBase, undockHandler);\n    this.undockInitiator.enabled = true;\n    this.mouseClickHandler = new EventHandler(this.elementBase, 'click', this.onMouseClicked.bind(this));\n    this.mouseDownHandler = new EventHandler(this.elementBase, 'mousedown', this.onMouseDown.bind(this));\n    this.closeButtonHandler = new EventHandler(this.elementCloseButton, 'mousedown', this.onCloseButtonClicked.bind(this));\n\n    this.moveThreshold = 10;\n    this.zIndexCounter = 100;\n}\n\nmodule.exports = TabHandle;\n\nTabHandle.prototype.addListener = function(listener){\n    this.eventListeners.push(listener);\n};\n\nTabHandle.prototype.removeListener = function(listener)\n{\n    this.eventListeners.splice(this.eventListeners.indexOf(listener), 1);\n};\n\nTabHandle.prototype.undockEnabled = function(state)\n{\n      this.undockInitiator.enabled = state;\n};\n\nTabHandle.prototype.onMouseDown = function(e)\n{\n    if(this.undockInitiator.enabled)\n        this.undockInitiator.setThresholdPixels(40, false);\n    if (this.mouseMoveHandler)\n    {\n        this.mouseMoveHandler.cancel();\n        delete this.mouseMoveHandler;\n    }\n    if (this.mouseUpHandler)\n    {\n        this.mouseUpHandler.cancel();\n        delete this.mouseUpHandler;\n    }\n    this.stargDragPosition = e.clientX;\n    this.mouseMoveHandler = new EventHandler(this.elementBase, 'mousemove', this.onMouseMove.bind(this));\n    this.mouseUpHandler = new EventHandler(window, 'mouseup', this.onMouseUp.bind(this));\n};\n\nTabHandle.prototype.onMouseUp = function()\n{\n    if(this.undockInitiator.enabled)\n        this.undockInitiator.setThresholdPixels(10, true);\n    if(this.elementBase){\n         this.elementBase.classList.remove('tab-handle-dragged');\n    }\n    this.dragged = false;\n    this.mouseMoveHandler.cancel();\n    this.mouseUpHandler.cancel();\n    delete this.mouseMoveHandler;\n    delete this.mouseUpHandler;\n\n};\n\nTabHandle.prototype.generateMoveTabEvent = function(event, pos) {\n    var contain = pos > event.rect.left && pos < event.rect.right;\n    var m = Math.abs(event.bound - pos);\n    if(m < this.moveThreshold && contain)\n        this.moveTabEvent(this, event.state);\n};\n\nTabHandle.prototype.moveTabEvent = function(that, state){\n    that.eventListeners.forEach(function(listener) {\n        if (listener.onMoveTab) {\n            listener.onMoveTab({self: that, state: state});\n        }\n    });\n\n};\n\nTabHandle.prototype.onMouseMove = function(e)\n{\n    if(Math.abs(this.stargDragPosition  -  e.clientX) < 10)\n        return;\n    this.elementBase.classList.add('tab-handle-dragged');\n   this.dragged = true;\n   this.prev = this.current;\n   this.current = e.clientX;\n   this.direction =  this.current - this.prev;\n   var tabRect = this.elementBase.getBoundingClientRect();\n   var event = this.direction < 0 ? {state: 'left', bound: tabRect.left, rect:tabRect} :\n    {state: 'right', bound: tabRect.right, rect:tabRect};\n   if(this.direction !== 0) this.generateMoveTabEvent(event, this.current);\n};\n\nTabHandle.prototype.hideCloseButton = function(state)\n{\n    this.elementCloseButton.style.display = state ? 'none' : 'block';\n};\n\nTabHandle.prototype.updateTitle = function()\n{\n    if (this.parent.container instanceof PanelContainer)\n    {\n        var panel = this.parent.container;\n        var title = panel.getRawTitle();\n        this.elementText.innerHTML = title;\n    }\n};\n\nTabHandle.prototype.destroy = function()\n{\n    var panel = this.parent.container;\n    panel.removeListener(this.undockListener);\n\n    this.mouseClickHandler.cancel();\n    this.mouseDownHandler.cancel();\n    this.closeButtonHandler.cancel();\n\n    if (this.mouseUpHandler) {\n        this.mouseUpHandler.cancel();\n    }\n\n    utils.removeNode(this.elementBase);\n    utils.removeNode(this.elementCloseButton);\n    delete this.elementBase;\n    delete this.elementCloseButton;\n};\n\nTabHandle.prototype._performUndock = function(e, dragOffset)\n{\n    if (this.parent.container.containerType === 'panel')\n    {\n        this.undockInitiator.enabled = false;\n        var panel = this.parent.container;\n        return panel.performUndockToDialog(e, dragOffset);\n    }\n    else\n        return null;\n};\n\nTabHandle.prototype.onMouseClicked = function()\n{\n    this.parent.onSelected();\n};\n\nTabHandle.prototype.onCloseButtonClicked = function()\n{\n    // If the page contains a panel element, undock it and destroy it\n    if (this.parent.container.containerType === 'panel')\n    {\n        this.parent.container.close();\n        // this.undockInitiator.enabled = false;\n        // var panel = this.parent.container;\n        // panel.performUndock();\n    }\n};\n\nTabHandle.prototype.setSelected = function(selected)\n{\n    var selectedClassName = 'tab-handle-selected';\n    if (selected)\n        this.elementBase.classList.add(selectedClassName);\n    else\n        this.elementBase.classList.remove(selectedClassName);\n};\n\nTabHandle.prototype.setZIndex = function(zIndex)\n{\n    this.elementBase.style.zIndex = zIndex;\n};\n\nTabHandle.prototype._bringToFront = function(element)\n{\n    element.style.zIndex = this.zIndexCounter;\n    this.zIndexCounter++;\n};\n\n},{\"../containers/PanelContainer\":7,\"../utils/EventHandler\":27,\"../utils/UndockInitiator\":30,\"../utils/utils\":31}],25:[function(require,module,exports){\nvar TabPage = require('./TabPage');\n\n/**\n * Tab Host control contains tabs known as TabPages.\n * The tab strip can be aligned in different orientations\n */\nfunction TabHost(tabStripDirection, displayCloseButton)\n{\n    /**\n     * Create a tab host with the tab strip aligned in the [tabStripDirection] direciton\n     * Only TabHost.DIRECTION_BOTTOM and TabHost.DIRECTION_TOP are supported\n     */\n    if (tabStripDirection === undefined) {\n        tabStripDirection = TabHost.DIRECTION_BOTTOM;\n    }\n\n    if (displayCloseButton === undefined) {\n        displayCloseButton = false;\n    }\n\n    this.tabStripDirection = tabStripDirection;\n    this.displayCloseButton = displayCloseButton; // Indicates if the close button next to the tab handle should be displayed\n    this.pages = [];\n    var that = this;\n     that.eventListeners = [];\n    this.tabHandleListener = {\n        onMoveTab :function(e){ that.onMoveTab(e); }\n    };\n    this.hostElement = document.createElement('div');       // The main tab host DOM element\n    this.tabListElement = document.createElement('div');    // Hosts the tab handles\n    this.separatorElement = document.createElement('div');  // A seperator line between the tabs and content\n    this.contentElement = document.createElement('div');    // Hosts the active tab content\n    this.createTabPage = this._createDefaultTabPage;        // Factory for creating tab pages\n\n    if (this.tabStripDirection === TabHost.DIRECTION_BOTTOM)\n    {\n        this.hostElement.appendChild(this.contentElement);\n        this.hostElement.appendChild(this.separatorElement);\n        this.hostElement.appendChild(this.tabListElement);\n    }\n    else if (this.tabStripDirection === TabHost.DIRECTION_TOP)\n    {\n        this.hostElement.appendChild(this.tabListElement);\n        this.hostElement.appendChild(this.separatorElement);\n        this.hostElement.appendChild(this.contentElement);\n    }\n    else {\n        throw new Error('Only top and bottom tab strip orientations are supported');\n    }\n\n    this.hostElement.classList.add('tab-host');\n    this.tabListElement.classList.add('tab-handle-list-container');\n    this.separatorElement.classList.add('tab-handle-content-seperator');\n    this.contentElement.classList.add('tab-content');\n}\n\nmodule.exports = TabHost;\n\n// constants\nTabHost.DIRECTION_TOP = 0;\nTabHost.DIRECTION_BOTTOM = 1;\nTabHost.DIRECTION_LEFT = 2;\nTabHost.DIRECTION_RIGHT = 3;\n\nTabHost.prototype.onMoveTab = function(e){\n    // this.tabListElement;\n    var index =  Array.prototype.slice.call(this.tabListElement.childNodes).indexOf(e.self.elementBase);\n\n    this.change(/*host*/this, /*handle*/e.self, e.state, index);\n};\n\nTabHost.prototype.performTabsLayout = function(indexes){\n    this.pages = this.pages.orderByIndexes(indexes);\n\n    var items = this.tabListElement.childNodes;\n    var itemsArr = [];\n    for (var i in items) {\n        if (items[i].nodeType === 1) { // get rid of the whitespace text nodes\n            itemsArr.push(items[i]);\n        }\n    }\n    itemsArr = itemsArr.orderByIndexes(indexes);\n    for (i = 0; i < itemsArr.length; ++i) {\n        this.tabListElement.appendChild(itemsArr[i]);\n    }\n\n    if (this.activeTab)\n        this.onTabPageSelected(this.activeTab);\n};\n\nTabHost.prototype.addListener = function(listener){\n    this.eventListeners.push(listener);\n};\n\nTabHost.prototype.removeListener = function(listener)\n{\n    this.eventListeners.splice(this.eventListeners.indexOf(listener), 1);\n};\n\nTabHost.prototype.change = function(host, handle, state, index){\n    this.eventListeners.forEach(function(listener) {\n        if (listener.onChange) {\n            listener.onChange({host: host, handle: handle, state: state, index: index});\n        }\n    });\n};\n\nTabHost.prototype._createDefaultTabPage = function(tabHost, container)\n{\n    return new TabPage(tabHost, container);\n};\n\nTabHost.prototype.setActiveTab = function(container) {\n    var currentPage;\n    this.pages.forEach(function(itm) {\n        if (itm.container === container) {\n            currentPage = itm;\n        }\n    });\n    if (this.pages.length > 0 && currentPage) {\n        this.onTabPageSelected(currentPage);\n    }\n};\n\nTabHost.prototype.resize = function(width, height)\n{\n    this.hostElement.style.width = width + 'px';\n    this.hostElement.style.height = height + 'px';\n\n    var tabHeight = this.tabListElement.clientHeight;\n    if (this.timeoutPerform) //lazy check\n        clearTimeout(this.timeoutPerform);\n    var self = this;\n    this.timeoutPerform = setTimeout(function () {\n        self.resizeTabListElement(width, height);\n    }, 100);\n    var separatorHeight = this.separatorElement.clientHeight;\n    var contentHeight = height - tabHeight - separatorHeight;\n    this.contentElement.style.height = contentHeight + 'px';\n\n    if (this.activeTab)\n        this.activeTab.resize(width, contentHeight);\n};\n\nTabHost.prototype.resizeTabListElement = function(width/*, height*/) {\n    if(this.pages.length === 0) return;\n    var tabListWidth = 0;\n    this.pages.forEach(function(page){\n        var handle = page.handle;\n        handle.elementBase.style.width = ''; //clear\n        handle.elementText.style.width = '';\n        tabListWidth += handle.elementBase.clientWidth;\n    });\n    var scaleMultiplier = width / tabListWidth;\n    if(scaleMultiplier > 1.2) return; //with a reserve\n    var self = this;\n    this.pages.forEach(function(page, index){\n        var handle = page.handle;\n         var newSize = scaleMultiplier * handle.elementBase.clientWidth;\n         if(index === self.pages.length - 1)\n            newSize = newSize - 5;\n         handle.elementBase.style.width = newSize + 'px';\n         if(self.tabStripDirection === TabHost.DIRECTION_TOP){\n             handle.elementText.style.width = newSize - handle.elementCloseButton.clientWidth - 16 + 'px';\n         }\n    });\n};\n\nTabHost.prototype.performLayout = function(children)\n{\n    // Destroy all existing tab pages\n    this.pages.forEach(function(tab)\n    {\n        tab.handle.removeListener(this.tabHandleListener);\n        tab.destroy();\n    });\n    this.pages.length = 0;\n\n    var oldActiveTab = this.activeTab;\n    delete this.activeTab;\n\n    var childPanels = children.filter(function(child)\n    {\n        return child.containerType === 'panel';\n    });\n\n    if (childPanels.length > 0)\n    {\n        // Rebuild new tab pages\n        var self = this;\n        childPanels.forEach(function(child)\n        {\n            var page = self.createTabPage(self, child);\n            page.handle.addListener(self.tabHandleListener);\n            self.pages.push(page);\n\n            // Restore the active selected tab\n            if (oldActiveTab && page.container === oldActiveTab.container)\n                self.activeTab = page;\n        });\n        this._setTabHandlesVisible(true);\n    }\n    else\n        // Do not show an empty tab handle host with zero tabs\n        this._setTabHandlesVisible(false);\n\n    if (this.activeTab)\n        this.onTabPageSelected(this.activeTab);\n};\n\nTabHost.prototype._setTabHandlesVisible = function(visible)\n{\n    this.tabListElement.style.display = visible ? 'block' : 'none';\n    this.separatorElement.style.display = visible ? 'block' : 'none';\n};\n\nTabHost.prototype.onTabPageSelected = function(page)\n{\n    this.activeTab = page;\n    this.pages.forEach(function(tabPage)\n    {\n        var selected = (tabPage === page);\n        tabPage.setSelected(selected);\n    });\n\n    // adjust the zIndex of the tabs to have proper shadow/depth effect\n    var zIndexDelta = 1;\n    var zIndex = 100;\n    this.pages.forEach(function(tabPage)\n    {\n        tabPage.handle.setZIndex(zIndex);\n        var selected = (tabPage === page);\n        if (selected)\n            zIndexDelta = -1;\n        zIndex += zIndexDelta;\n    });\n\n};\n\n},{\"./TabPage\":26}],26:[function(require,module,exports){\nvar TabHandle = require('./TabHandle'),\n    PanelContainer = require('../containers/PanelContainer'),\n    utils = require('../utils/utils');\n\nfunction TabPage(host, container)\n{\n    if (arguments.length === 0) {\n        return;\n    }\n\n    this.selected = false;\n    this.host = host;\n    this.container = container;\n\n    this.handle = new TabHandle(this);\n    this.containerElement = container.containerElement;\n\n    if (container instanceof PanelContainer)\n    {\n        var panel = container;\n        panel.onTitleChanged = this.onTitleChanged.bind(this);\n    }\n}\n\nmodule.exports = TabPage;\n\nTabPage.prototype.onTitleChanged = function(/*sender, title*/)\n{\n    this.handle.updateTitle();\n};\n\nTabPage.prototype.destroy = function()\n{\n    this.handle.destroy();\n\n    if (this.container instanceof PanelContainer)\n    {\n        var panel = this.container;\n        delete panel.onTitleChanged;\n    }\n};\n\nTabPage.prototype.onSelected = function()\n{\n    this.host.onTabPageSelected(this);\n    if (this.container instanceof PanelContainer)\n    {\n        var panel = this.container;\n        panel.dockManager.notifyOnTabChange(this);\n    }\n\n};\n\nTabPage.prototype.setSelected = function(flag)\n{\n    this.selected = flag;\n    this.handle.setSelected(flag);\n\n    if (!this._initContent)\n        this.host.contentElement.appendChild(this.containerElement);\n    this._initContent = true;\n    if (this.selected)\n    {\n        this.containerElement.style.display = 'block';\n        // force a resize again\n        var width = this.host.contentElement.clientWidth;\n        var height = this.host.contentElement.clientHeight;\n        this.container.resize(width, height);\n    }\n    else {\n        this.containerElement.style.display = 'none';\n    }\n};\n\nTabPage.prototype.resize = function(width, height)\n{\n    this.container.resize(width, height);\n};\n\n},{\"../containers/PanelContainer\":7,\"../utils/utils\":31,\"./TabHandle\":24}],27:[function(require,module,exports){\nfunction EventHandler(source, eventName, target) {\n    // wrap the target\n    this.target = target;\n    this.eventName = eventName;\n    this.source = source;\n\n    this.source.addEventListener(eventName, this.target);\n}\n\nmodule.exports = EventHandler;\n\nEventHandler.prototype.cancel = function() {\n    this.source.removeEventListener(this.eventName, this.target);\n};\n\n},{}],28:[function(require,module,exports){\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nmodule.exports = Point;\n\n},{}],29:[function(require,module,exports){\nfunction Rectangle(x, y, width, height) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.width = width || 0;\n    this.height = height || 0;\n}\n\nmodule.exports = Rectangle;\n\n},{}],30:[function(require,module,exports){\nvar EventHandler = require('./EventHandler'),\n    Point = require('./Point');\n\n/**\n * Listens for events on the [element] and notifies the [listener]\n * if an undock event has been invoked.  An undock event is invoked\n * when the user clicks on the event and drags is beyond the\n * specified [thresholdPixels]\n */\nfunction UndockInitiator(element, listener, thresholdPixels) {\n    if (!thresholdPixels) {\n        thresholdPixels = 10;\n    }\n\n    this.element = element;\n    this.listener = listener;\n    this.thresholdPixels = thresholdPixels;\n    this._enabled = false;\n    this.horizontalChange = true;\n}\n\nmodule.exports = UndockInitiator;\n\nObject.defineProperty(UndockInitiator.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            if (this.mouseDownHandler) {\n                this.mouseDownHandler.cancel();\n                delete this.mouseDownHandler;\n            }\n\n            this.mouseDownHandler = new EventHandler(this.element, 'mousedown', this.onMouseDown.bind(this));\n        }\n        else {\n            if (this.mouseDownHandler) {\n                this.mouseDownHandler.cancel();\n                delete this.mouseDownHandler;\n            }\n\n            if (this.mouseUpHandler) {\n                this.mouseUpHandler.cancel();\n                delete this.mouseUpHandler;\n            }\n\n            if (this.mouseMoveHandler) {\n                this.mouseMoveHandler.cancel();\n                delete this.mouseMoveHandler;\n            }\n        }\n    }\n});\n\nUndockInitiator.prototype.setThresholdPixels = function (thresholdPixels, horizontalChange){\n     this.horizontalChange = horizontalChange;\n     this.thresholdPixels = thresholdPixels;\n};\n\nUndockInitiator.prototype.onMouseDown = function (e) {\n    // Make sure we dont do this on floating dialogs\n    if (this.enabled) {\n        if (this.mouseUpHandler) {\n            this.mouseUpHandler.cancel();\n            delete this.mouseUpHandler;\n        }\n\n        if (this.mouseMoveHandler) {\n            this.mouseMoveHandler.cancel();\n            delete this.mouseMoveHandler;\n        }\n\n        this.mouseUpHandler = new EventHandler(window, 'mouseup', this.onMouseUp.bind(this));\n        this.mouseMoveHandler = new EventHandler(window, 'mousemove', this.onMouseMove.bind(this));\n        this.dragStartPosition = new Point(e.pageX, e.pageY);\n    }\n};\n\nUndockInitiator.prototype.onMouseUp = function () {\n    if (this.mouseUpHandler) {\n        this.mouseUpHandler.cancel();\n        delete this.mouseUpHandler;\n    }\n\n    if (this.mouseMoveHandler) {\n        this.mouseMoveHandler.cancel();\n        delete this.mouseMoveHandler;\n    }\n};\n\nUndockInitiator.prototype.onMouseMove = function (e) {\n    var position = new Point(e.pageX, e.pageY);\n    var dx = this.horizontalChange ? position.x - this.dragStartPosition.x : 10;\n    var dy = position.y - this.dragStartPosition.y;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (distance > this.thresholdPixels) {\n        this.enabled = false;\n        this._requestUndock(e);\n    }\n};\n\nUndockInitiator.prototype._requestUndock = function (e) {\n    var dragOffsetX = this.dragStartPosition.x - this.element.offsetLeft;\n    var dragOffsetY = this.dragStartPosition.y - this.element.offsetTop;\n    var dragOffset = new Point(dragOffsetX, dragOffsetY);\n    this.listener(e, dragOffset);\n};\n\n},{\"./EventHandler\":27,\"./Point\":28}],31:[function(require,module,exports){\nvar counter = 0;\n\nmodule.exports = {\n    getPixels: function (pixels) {\n        if (pixels === null) {\n            return 0;\n        }\n\n        return parseInt(pixels.replace('px', ''));\n    },\n\n    disableGlobalTextSelection: function () {\n        document.body.classList.add('disable-selection');\n    },\n\n    enableGlobalTextSelection: function () {\n        document.body.classList.remove('disable-selection');\n    },\n\n    isPointInsideNode: function (px, py, node) {\n        var element = node.container.containerElement;\n\n        return (\n            px >= element.offsetLeft &&\n            px <= element.offsetLeft + element.clientWidth &&\n            py >= element.offsetTop &&\n            py <= element.offsetTop + element.clientHeight\n        );\n    },\n\n    getNextId: function (prefix) {\n        return prefix + counter++;\n    },\n\n    removeNode: function (node) {\n        if (node.parentNode === null) {\n            return false;\n        }\n\n        node.parentNode.removeChild(node);\n\n        return true;\n    }\n};\n\n},{}]},{},[1])(1)\n});\n\n","module.exports={\n  \"name\": \"dock-spawn\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Panel docking library similar to Visual Studio docking.\",\n  \"author\": \"Chad Engler <chad@pantherdev.com>\",\n  \"homepage\": \"https://github.com/englercj/dock-spawn\",\n  \"main\": \"./src/index\",\n  \"scripts\": {\n    \"build\": \"gulp build\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/englercj/dock-spawn.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/englercj/dock-spawn/issues\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"browserify\": \"^6.0.3\",\n    \"gulp\": \"^3.8.8\",\n    \"gulp-jshint\": \"^2.0.0\",\n    \"gulp-rename\": \"^1.2.0\",\n    \"gulp-sourcemaps\": \"^1.3.0\",\n    \"gulp-uglify\": \"^1.1.0\",\n    \"gulp-util\": \"^3.0.7\",\n    \"gulp-webserver\": \"^0.9.0\",\n    \"jshint\": \"^2.8.0\",\n    \"jshint-summary\": \"^0.4.0\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.0.0\",\n    \"watchify\": \"^2.0.0\"\n  }\n}\n","var FillDockContainer = require('./FillDockContainer'),\n    DocumentTabPage = require('./DocumentTabPage'),\n    TabHost = require('../tab/TabHost');\n\n/**\n * The document manager is then central area of the dock layout hierarchy.\n * This is where more important panels are placed (e.g. the text editor in an IDE,\n * 3D view in a modelling package etc\n */\n\nfunction DocumentManagerContainer(dockManager)\n{\n    FillDockContainer.call(this, dockManager, TabHost.DIRECTION_TOP);\n    this.minimumAllowedChildNodes = 0;\n    this.element.classList.add('document-manager');\n    this.tabHost.createTabPage = this._createDocumentTabPage;\n    this.tabHost.displayCloseButton = true;\n}\n\nDocumentManagerContainer.prototype = Object.create(FillDockContainer.prototype);\nDocumentManagerContainer.prototype.constructor = DocumentManagerContainer;\nmodule.exports = DocumentManagerContainer;\n\nDocumentManagerContainer.prototype._createDocumentTabPage = function(tabHost, container)\n{\n    return new DocumentTabPage(tabHost, container);\n};\n\nDocumentManagerContainer.prototype.saveState = function(state)\n{\n    FillDockContainer.prototype.saveState.call(this, state);\n    state.documentManager = true;\n};\n\n/** Returns the selected document tab */\nDocumentManagerContainer.prototype.selectedTab = function()\n{\n    return this.tabHost.activeTab;\n};\n","var TabPage = require('../tab/TabPage'),\n    utils = require('../utils/utils');\n\n/**\n * Specialized tab page that doesn't display the panel's frame when docked in a tab page\n */\nfunction DocumentTabPage(host, container)\n{\n    TabPage.call(this, host, container);\n\n    // If the container is a panel, extract the content element and set it as the tab's content\n    if (this.container.containerType === 'panel')\n    {\n        this.panel = container;\n        this.containerElement = this.panel.elementContent;\n\n        // detach the container element from the panel's frame.\n        // It will be reattached when this tab page is destroyed\n        // This enables the panel's frame (title bar etc) to be hidden\n        // inside the tab page\n        utils.removeNode(this.containerElement);\n    }\n}\n\nDocumentTabPage.prototype = Object.create(TabPage.prototype);\nDocumentTabPage.prototype.constructor = DocumentTabPage;\nmodule.exports = DocumentTabPage;\n\nDocumentTabPage.prototype.destroy = function()\n{\n    TabPage.prototype.destroy.call(this);\n\n    // Restore the panel content element back into the panel frame\n    utils.removeNode(this.containerElement);\n    this.panel.elementContentHost.appendChild(this.containerElement);\n};\n","var TabHost = require('../tab/TabHost'),\n    utils = require('../utils/utils');\n\nfunction FillDockContainer(dockManager, tabStripDirection)\n{\n    if (arguments.length === 0) {\n        return;\n    }\n\n    if (tabStripDirection === undefined) {\n        tabStripDirection = TabHost.DIRECTION_BOTTOM;\n    }\n\n    this.dockManager = dockManager;\n    this.tabOrientation = tabStripDirection;\n    this.name = utils.getNextId('fill_');\n    this.element = document.createElement('div');\n    this.containerElement = this.element;\n    this.containerType = 'fill';\n    this.minimumAllowedChildNodes = 2;\n    this.element.classList.add('dock-container');\n    this.element.classList.add('dock-container-fill');\n    this.tabHost = new TabHost(this.tabOrientation);\n    var that = this;\n    this.tabHostListener = {\n        onChange: function (e) {\n            that.dockManager._requestTabReorder(that, e);\n        }\n    };\n    this.tabHost.addListener(this.tabHostListener);\n    this.element.appendChild(this.tabHost.hostElement);\n}\n\nmodule.exports = FillDockContainer;\n\nFillDockContainer.prototype.setActiveChild = function(child)\n{\n    this.tabHost.setActiveTab(child);\n};\n\nFillDockContainer.prototype.resize = function(width, height)\n{\n    this.element.style.width = width + 'px';\n    this.element.style.height = height + 'px';\n    this.tabHost.resize(width, height);\n};\n\nFillDockContainer.prototype.performLayout = function(children)\n{\n    this.tabHost.performLayout(children);\n};\n\nFillDockContainer.prototype.destroy = function()\n{\n    if (utils.removeNode(this.element))\n        delete this.element;\n};\n\nFillDockContainer.prototype.saveState = function(state)\n{\n    state.width = this.width;\n    state.height = this.height;\n};\n\nFillDockContainer.prototype.loadState = function(state)\n{\n    // this.resize(state.width, state.height);\n    // this.width = state.width;\n    // this.height = state.height;\n    this.state = {width: state.width, height: state.height};\n};\n\nObject.defineProperty(FillDockContainer.prototype, 'width', {\n    get: function() {\n        // if(this.element.clientWidth === 0 && this.stateWidth !== 0)\n        //     return this.stateWidth;\n        return this.element.clientWidth;\n    },\n    set: function(value) {\n        this.element.style.width = value + 'px';\n    }\n});\n\nObject.defineProperty(FillDockContainer.prototype, 'height', {\n    get: function() {\n        // if(this.element.clientHeight === 0 && this.stateHeight !== 0)\n        //     return this.stateHeight;\n        return this.element.clientHeight;\n    },\n    set: function(value) {\n        this.element.style.height = value + 'px';\n    }\n});\n","var SplitterDockContainer = require('./SplitterDockContainer'),\n    utils = require('../utils/utils');\n\nfunction HorizontalDockContainer(dockManager, childContainers)\n{\n    this.stackedVertical = false;\n    SplitterDockContainer.call(this, utils.getNextId('horizontal_splitter_'), dockManager, childContainers);\n    this.containerType = 'horizontal';\n}\n\nHorizontalDockContainer.prototype = Object.create(SplitterDockContainer.prototype);\nHorizontalDockContainer.prototype.constructor = HorizontalDockContainer;\nmodule.exports = HorizontalDockContainer;\n","var EventHandler = require('../utils/EventHandler'),\n    UndockInitiator = require('../utils/UndockInitiator'),\n    utils = require('../utils/utils');\n\n/**\n * This dock container wraps the specified element on a panel frame with a title bar and close button\n */\nfunction PanelContainer(elementContent, dockManager, title)\n{\n    if (!title)\n        title = 'Panel';\n    this.elementContent = elementContent;\n    this.dockManager = dockManager;\n    this.title = title;\n    this.containerType = 'panel';\n    this.iconName = 'fa fa-arrow-circle-right';\n    this.iconTemplate = null;\n    this.minimumAllowedChildNodes = 0;\n    this._floatingDialog = undefined;\n    this.isDialog = false;\n    this._canUndock = dockManager._undockEnabled;\n    this.eventListeners = [];\n    this._initialize();\n}\n\nmodule.exports = PanelContainer;\n\nPanelContainer.prototype.canUndock = function(state){\n    this._canUndock = state;\n    this.undockInitiator.enabled = state;\n    this.eventListeners.forEach(function(listener) {\n        if (listener.onDockEnabled) {\n            listener.onDockEnabled({self: this, state: state});\n        }\n    });\n\n};\n\nPanelContainer.prototype.addListener = function(listener){\n    this.eventListeners.push(listener);\n};\n\nPanelContainer.prototype.removeListener = function(listener)\n{\n    this.eventListeners.splice(this.eventListeners.indexOf(listener), 1);\n};\n\nObject.defineProperty(PanelContainer.prototype, 'floatingDialog', {\n    get: function() { return this._floatingDialog; },\n    set: function(value)\n    {\n        this._floatingDialog = value;\n        var canUndock = (this._floatingDialog === undefined);\n        this.undockInitiator.enabled = canUndock;\n    }\n});\n\nPanelContainer.loadFromState = function(state, dockManager)\n{\n    var elementName = state.element;\n    var elementContent = document.getElementById(elementName);\n    if(elementContent === null) {\n        return null;\n    }\n    var ret = new PanelContainer(elementContent, dockManager);\n    ret.loadState(state);\n    return ret;\n};\n\nPanelContainer.prototype.saveState = function(state)\n{\n    state.element = this.elementContent.id;\n    state.width = this.width;\n    state.height = this.height;\n};\n\nPanelContainer.prototype.loadState = function(state)\n{\n    this.width = state.width;\n    this.height = state.height;\n    this.state = {width: state.width, height: state.height};\n    // this.resize(this.width, this.height);\n};\n\nPanelContainer.prototype.setActiveChild = function(/*child*/)\n{\n};\n\nObject.defineProperty(PanelContainer.prototype, 'containerElement', {\n    get: function() { return this.elementPanel; }\n});\n\nPanelContainer.prototype._initialize = function()\n{\n    this.name = utils.getNextId('panel_');\n    this.elementPanel = document.createElement('div');\n    this.elementTitle = document.createElement('div');\n    this.elementTitleText = document.createElement('div');\n    this.elementContentHost = document.createElement('div');\n    this.elementButtonClose = document.createElement('div');\n\n    this.elementPanel.appendChild(this.elementTitle);\n    this.elementTitle.appendChild(this.elementTitleText);\n    this.elementTitle.appendChild(this.elementButtonClose);\n    this.elementButtonClose.innerHTML = '<i class=\"fa fa-times\"></i>';\n    this.elementButtonClose.classList.add('panel-titlebar-button-close');\n    this.elementPanel.appendChild(this.elementContentHost);\n\n    this.elementPanel.classList.add('panel-base');\n    this.elementTitle.classList.add('panel-titlebar');\n    this.elementTitle.classList.add('disable-selection');\n    this.elementTitleText.classList.add('panel-titlebar-text');\n    this.elementContentHost.classList.add('panel-content');\n\n    // set the size of the dialog elements based on the panel's size\n    var panelWidth = this.elementContent.clientWidth;\n    var panelHeight = this.elementContent.clientHeight;\n    var titleHeight = this.elementTitle.clientHeight;\n    this._setPanelDimensions(panelWidth, panelHeight + titleHeight);\n\n    // Add the panel to the body\n    document.body.appendChild(this.elementPanel);\n\n    this.closeButtonClickedHandler =\n        new EventHandler(this.elementButtonClose, 'click', this.onCloseButtonClicked.bind(this));\n\n    utils.removeNode(this.elementContent);\n    this.elementContentHost.appendChild(this.elementContent);\n\n    // Extract the title from the content element's attribute\n    var contentTitle = this.elementContent.dataset.panelCaption;\n    var contentIcon = this.elementContent.dataset.panelIcon;\n    if (contentTitle) this.title = contentTitle;\n    if (contentIcon) this.iconName = contentIcon;\n    this._updateTitle();\n\n    this.undockInitiator = new UndockInitiator(this.elementTitle, this.performUndockToDialog.bind(this));\n    delete this.floatingDialog;\n};\n\n\nPanelContainer.prototype.hideCloseButton = function(state){\n     this.elementButtonClose.style.display = state ? 'none' : 'block';\n     this.eventListeners.forEach(function(listener) {\n        if (listener.onHideCloseButton) {\n            listener.onHideCloseButton({self: this, state: state});\n        }\n    });\n};\n\n\nPanelContainer.prototype.destroy = function()\n{\n    utils.removeNode(this.elementPanel);\n    if (this.closeButtonClickedHandler)\n    {\n        this.closeButtonClickedHandler.cancel();\n        delete this.closeButtonClickedHandler;\n    }\n};\n\n/**\n * Undocks the panel and and converts it to a dialog box\n */\nPanelContainer.prototype.performUndockToDialog = function(e, dragOffset)\n{\n     this.isDialog = true;\n    this.undockInitiator.enabled = false;\n    return this.dockManager.requestUndockToDialog(this, e, dragOffset);\n};\n\n/**\n * Undocks the container and from the layout hierarchy\n * The container would be removed from the DOM\n */\nPanelContainer.prototype.performUndock = function()\n{\n\n    this.undockInitiator.enabled = false;\n    this.dockManager.requestUndock(this);\n};\n\nPanelContainer.prototype.prepareForDocking = function()\n{\n    this.isDialog = false;\n    this.undockInitiator.enabled = this.canUndock;\n};\n\nObject.defineProperty(PanelContainer.prototype, 'width', {\n    get: function() { return this._cachedWidth; },\n    set: function(value)\n    {\n        if (value !== this._cachedWidth)\n        {\n            this._cachedWidth = value;\n            this.elementPanel.style.width = value + 'px';\n        }\n    }\n});\n\nObject.defineProperty(PanelContainer.prototype, 'height', {\n    get: function() { return this._cachedHeight; },\n    set: function(value)\n    {\n        if (value !== this._cachedHeight)\n        {\n            this._cachedHeight = value;\n            this.elementPanel.style.height = value + 'px';\n        }\n    }\n});\n\nPanelContainer.prototype.resize = function(width,  height)\n{\n    // if (this._cachedWidth === width && this._cachedHeight === height)\n    // {\n    //     // Already in the desired size\n    //     return;\n    // }\n    this._setPanelDimensions(width, height);\n    this._cachedWidth = width;\n    this._cachedHeight = height;\n    try {\n        if (this.elementContent != undefined && (typeof this.elementContent.resizeHandler == 'function'))\n            this.elementContent.resizeHandler(width, height - this.elementTitle.clientHeight);\n    } catch (err) {\n        console.log(\"error calling resizeHandler:\", err, \" elt:\", this.elementContent);\n    }\n};\n\nPanelContainer.prototype._setPanelDimensions = function(width, height)\n{\n    this.elementTitle.style.width = width + 'px';\n    this.elementContentHost.style.width = width + 'px';\n    this.elementContent.style.width = width + 'px';\n    this.elementPanel.style.width = width + 'px';\n\n    var titleBarHeight = this.elementTitle.clientHeight;\n    var contentHeight = height - titleBarHeight;\n    this.elementContentHost.style.height = contentHeight + 'px';\n    this.elementContent.style.height = contentHeight + 'px';\n    this.elementPanel.style.height = height + 'px';\n};\n\nPanelContainer.prototype.setTitle = function(title)\n{\n    this.title = title;\n    this._updateTitle();\n    if (this.onTitleChanged)\n        this.onTitleChanged(this, title);\n};\n\nPanelContainer.prototype.setTitleIcon = function(iconName)\n{\n    this.iconName = iconName;\n    this._updateTitle();\n    if (this.onTitleChanged)\n        this.onTitleChanged(this, this.title);\n};\n\nPanelContainer.prototype.setTitleIconTemplate = function(iconTemplate)\n{\n    this.iconTemplate = iconTemplate;\n    this._updateTitle();\n    if (this.onTitleChanged)\n        this.onTitleChanged(this, this.title);\n};\n\nPanelContainer.prototype.setCloseIconTemplate = function(closeIconTemplate)\n{\n    this.elementButtonClose.innerHTML = closeIconTemplate();\n};\n\nPanelContainer.prototype._updateTitle = function()\n{\n    if(this.iconTemplate !== null)\n    {\n        this.elementTitleText.innerHTML = this.iconTemplate(this.iconName) + this.title;\n        return;\n    }\n    this.elementTitleText.innerHTML = '<i class=\"' + this.iconName + '\"></i> ' + this.title;\n};\n\nPanelContainer.prototype.getRawTitle = function()\n{\n    return this.elementTitleText.innerHTML;\n};\n\nPanelContainer.prototype.performLayout = function(/*children*/)\n{\n};\n\nPanelContainer.prototype.onCloseButtonClicked = function()\n{\n   this.close();\n};\n\nPanelContainer.prototype.close = function() {\n     //TODO: hide\n    if (this.isDialog) {\n        this.floatingDialog.hide();\n\n        this.floatingDialog.setPosition(this.dockManager.defaultDialogPosition.x, this.dockManager.defaultDialogPosition.y);\n    }\n    else\n    {\n        this.performUndockToDialog();\n        this.floatingDialog.hide();\n        this.floatingDialog.setPosition(this.dockManager.defaultDialogPosition.x, this.dockManager.defaultDialogPosition.y);\n    }\n     this.dockManager.notifyOnClosePanel(this);\n};\n","var SplitterPanel = require('../splitter/SplitterPanel');\n\nfunction SplitterDockContainer(name, dockManager, childContainers)\n{\n    // for prototype inheritance purposes only\n    if (arguments.length === 0) {\n        return;\n    }\n\n    this.name = name;\n    this.dockManager = dockManager;\n    this.splitterPanel = new SplitterPanel(childContainers, this.stackedVertical);\n    this.containerElement = this.splitterPanel.panelElement;\n    this.minimumAllowedChildNodes = 2;\n}\n\nmodule.exports = SplitterDockContainer;\n\nSplitterDockContainer.prototype.resize = function(width, height)\n{\n//    if (_cachedWidth === _cachedWidth && _cachedHeight === _height) {\n//      // No need to resize\n//      return;\n//    }\n    this.splitterPanel.resize(width, height);\n    this._cachedWidth = width;\n    this._cachedHeight = height;\n};\n\nSplitterDockContainer.prototype.performLayout = function(childContainers)\n{\n    this.splitterPanel.performLayout(childContainers);\n};\n\nSplitterDockContainer.prototype.setActiveChild = function(/*child*/)\n{\n};\n\nSplitterDockContainer.prototype.destroy = function()\n{\n    this.splitterPanel.destroy();\n};\n\n/**\n * Sets the percentage of space the specified [container] takes in the split panel\n * The percentage is specified in [ratio] and is between 0..1\n */\nSplitterDockContainer.prototype.setContainerRatio = function(container, ratio)\n{\n    this.splitterPanel.setContainerRatio(container, ratio);\n    this.resize(this.width, this.height);\n};\n\nSplitterDockContainer.prototype.saveState = function(state)\n{\n    state.width = this.width;\n    state.height = this.height;\n};\n\nSplitterDockContainer.prototype.loadState = function(state)\n{\n    this.state = {width: state.width, height: state.height};\n    // this.resize(state.width, state.height);\n};\n\nObject.defineProperty(SplitterDockContainer.prototype, 'width', {\n    get: function()\n    {\n        if (this._cachedWidth === undefined)\n            this._cachedWidth = this.splitterPanel.panelElement.clientWidth;\n        return this._cachedWidth;\n    }\n});\n\nObject.defineProperty(SplitterDockContainer.prototype, 'height', {\n    get: function()\n    {\n        if (this._cachedHeight === undefined)\n            this._cachedHeight = this.splitterPanel.panelElement.clientHeight;\n        return this._cachedHeight;\n    }\n});\n","var SplitterDockContainer = require('./SplitterDockContainer'),\n    utils = require('../utils/utils');\n\nfunction VerticalDockContainer(dockManager, childContainers)\n{\n    this.stackedVertical = true;\n    SplitterDockContainer.call(this, utils.getNextId('vertical_splitter_'), dockManager, childContainers);\n    this.containerType = 'vertical';\n}\n\nVerticalDockContainer.prototype = Object.create(SplitterDockContainer.prototype);\nVerticalDockContainer.prototype.constructor = VerticalDockContainer;\nmodule.exports = VerticalDockContainer;\n","var EventHandler = require('../utils/EventHandler'),\n    Point = require('../utils/Point'),\n    utils = require('../utils/utils');\n\nfunction DraggableContainer(dialog, delegate, topLevelElement, dragHandle)\n{\n    this.dialog = dialog;\n    this.delegate = delegate;\n    this.containerElement = delegate.containerElement;\n    this.dockManager = delegate.dockManager;\n    this.topLevelElement = topLevelElement;\n    this.containerType = delegate.containerType;\n    this.mouseDownHandler = new EventHandler(dragHandle, 'mousedown', this.onMouseDown.bind(this));\n    this.topLevelElement.style.marginLeft = topLevelElement.offsetLeft + 'px';\n    this.topLevelElement.style.marginTop = topLevelElement.offsetTop + 'px';\n    this.minimumAllowedChildNodes = delegate.minimumAllowedChildNodes;\n}\n\nmodule.exports = DraggableContainer;\n\nDraggableContainer.prototype.destroy = function()\n{\n    this.removeDecorator();\n    this.delegate.destroy();\n};\n\nDraggableContainer.prototype.saveState = function(state)\n{\n    this.delegate.saveState(state);\n};\n\nDraggableContainer.prototype.loadState = function(state)\n{\n    this.delegate.loadState(state);\n};\n\nDraggableContainer.prototype.setActiveChild = function(/*child*/)\n{\n};\n\nObject.defineProperty(DraggableContainer.prototype, 'width', {\n    get: function() { return this.delegate.width; }\n});\n\nObject.defineProperty(DraggableContainer.prototype, 'height', {\n    get: function() { return this.delegate.height; }\n});\n\nDraggableContainer.prototype.name = function(value)\n{\n    if (value)\n        this.delegate.name = value;\n    return this.delegate.name;\n};\n\nDraggableContainer.prototype.resize = function(width, height)\n{\n    this.delegate.resize(width, height);\n};\n\nDraggableContainer.prototype.performLayout = function(children)\n{\n    this.delegate.performLayout(children);\n};\n\nDraggableContainer.prototype.removeDecorator = function()\n{\n    if (this.mouseDownHandler)\n    {\n        this.mouseDownHandler.cancel();\n        delete this.mouseDownHandler;\n    }\n};\n\nDraggableContainer.prototype.onMouseDown = function(event)\n{\n    this._startDragging(event);\n    this.previousMousePosition = { x: event.pageX, y: event.pageY };\n    if (this.mouseMoveHandler)\n    {\n        this.mouseMoveHandler.cancel();\n        delete this.mouseMoveHandler;\n    }\n    if (this.mouseUpHandler)\n    {\n        this.mouseUpHandler.cancel();\n        delete this.mouseUpHandler;\n    }\n\n    this.mouseMoveHandler = new EventHandler(window, 'mousemove', this.onMouseMove.bind(this));\n    this.mouseUpHandler = new EventHandler(window, 'mouseup', this.onMouseUp.bind(this));\n};\n\nDraggableContainer.prototype.onMouseUp = function(event)\n{\n    this._stopDragging(event);\n    this.mouseMoveHandler.cancel();\n    delete this.mouseMoveHandler;\n    this.mouseUpHandler.cancel();\n    delete this.mouseUpHandler;\n};\n\nDraggableContainer.prototype._startDragging = function(event)\n{\n    if (this.dialog.eventListener)\n        this.dialog.eventListener.onDialogDragStarted(this.dialog, event);\n    document.body.classList.add('disable-selection');\n};\n\nDraggableContainer.prototype._stopDragging = function(event)\n{\n    if (this.dialog.eventListener)\n        this.dialog.eventListener.onDialogDragEnded(this.dialog, event);\n    document.body.classList.remove('disable-selection');\n};\n\nDraggableContainer.prototype.onMouseMove = function(event)\n{\n    var currentMousePosition = new Point(event.pageX, event.pageY);\n\n    var dx = this.dockManager.checkXBounds(this.topLevelElement, currentMousePosition, this.previousMousePosition);\n    var dy = this.dockManager.checkYBounds(this.topLevelElement, currentMousePosition, this.previousMousePosition);\n    this._performDrag(dx, dy);\n    this.previousMousePosition = currentMousePosition;\n};\n\nDraggableContainer.prototype._performDrag = function(dx, dy)\n{\n    var left = dx + utils.getPixels(this.topLevelElement.style.marginLeft);\n    var top = dy + utils.getPixels(this.topLevelElement.style.marginTop);\n    this.topLevelElement.style.marginLeft = left + 'px';\n    this.topLevelElement.style.marginTop = top + 'px';\n};\n","var EventHandler = require('../utils/EventHandler'),\n    Point = require('../utils/Point'),\n    utils = require('../utils/utils');\n\n/**\n * Decorates a dock container with resizer handles around its base element\n * This enables the container to be resized from all directions\n */\nfunction ResizableContainer(dialog, delegate, topLevelElement)\n{\n    this.dialog = dialog;\n    this.delegate = delegate;\n    this.containerElement = delegate.containerElement;\n    this.dockManager = delegate.dockManager;\n    this.topLevelElement = topLevelElement;\n    this.containerType = delegate.containerType;\n    this.topLevelElement.style.marginLeft = this.topLevelElement.offsetLeft + 'px';\n    this.topLevelElement.style.marginTop = this.topLevelElement.offsetTop + 'px';\n    this.minimumAllowedChildNodes = delegate.minimumAllowedChildNodes;\n    this._buildResizeHandles();\n    this.readyToProcessNextResize = true;\n}\n\nmodule.exports = ResizableContainer;\n\nResizableContainer.prototype.setActiveChild = function(/*child*/)\n{\n};\n\nResizableContainer.prototype._buildResizeHandles = function()\n{\n    this.resizeHandles = [];\n//    this._buildResizeHandle(true, false, true, false); // Dont need the corner resizer near the close button\n    this._buildResizeHandle(false, true, true, false);\n    this._buildResizeHandle(true, false, false, true);\n    this._buildResizeHandle(false, true, false, true);\n\n    this._buildResizeHandle(true, false, false, false);\n    this._buildResizeHandle(false, true, false, false);\n    this._buildResizeHandle(false, false, true, false);\n    this._buildResizeHandle(false, false, false, true);\n};\n\nResizableContainer.prototype._buildResizeHandle = function(east, west, north, south)\n{\n    var handle = new ResizeHandle();\n    handle.east = east;\n    handle.west = west;\n    handle.north = north;\n    handle.south = south;\n\n    // Create an invisible div for the handle\n    handle.element = document.createElement('div');\n    this.topLevelElement.appendChild(handle.element);\n\n    // Build the class name for the handle\n    var verticalClass = '';\n    var horizontalClass = '';\n    if (north) verticalClass = 'n';\n    if (south) verticalClass = 's';\n    if (east) horizontalClass = 'e';\n    if (west) horizontalClass = 'w';\n    var cssClass = 'resize-handle-' + verticalClass + horizontalClass;\n    if (verticalClass.length > 0 && horizontalClass.length > 0)\n        handle.corner = true;\n\n    handle.element.classList.add(handle.corner ? 'resize-handle-corner' : 'resize-handle');\n    handle.element.classList.add(cssClass);\n    this.resizeHandles.push(handle);\n\n    var self = this;\n    handle.mouseDownHandler = new EventHandler(handle.element, 'mousedown', function(e) { self.onMouseDown(handle, e); });\n};\n\nResizableContainer.prototype.saveState = function(state)\n{\n    this.delegate.saveState(state);\n};\n\nResizableContainer.prototype.loadState = function(state)\n{\n    this.delegate.loadState(state);\n};\n\nObject.defineProperty(ResizableContainer.prototype, 'width', {\n    get: function() { return this.delegate.width; }\n});\n\nObject.defineProperty(ResizableContainer.prototype, 'height', {\n    get: function() { return this.delegate.height; }\n});\n\nResizableContainer.prototype.name = function(value)\n{\n    if (value)\n        this.delegate.name = value;\n    return this.delegate.name;\n};\n\nResizableContainer.prototype.resize = function(width, height)\n{\n    this.delegate.resize(width, height);\n    this._adjustResizeHandles(width, height);\n};\n\nResizableContainer.prototype._adjustResizeHandles = function(width, height)\n{\n    var self = this;\n    this.resizeHandles.forEach(function(handle) {\n        handle.adjustSize(self.topLevelElement, width, height);\n    });\n};\n\nResizableContainer.prototype.performLayout = function(children)\n{\n    this.delegate.performLayout(children);\n};\n\nResizableContainer.prototype.destroy = function()\n{\n    this.removeDecorator();\n    this.delegate.destroy();\n};\n\nResizableContainer.prototype.removeDecorator = function()\n{\n};\n\nResizableContainer.prototype.onMouseMoved = function(handle, e)\n{\n    if (!this.readyToProcessNextResize)\n        return;\n    this.readyToProcessNextResize = false;\n\n//    window.requestLayoutFrame(() {\n    this.dockManager.suspendLayout();\n    var currentMousePosition = new Point(e.pageX, e.pageY);\n    var dx = this.dockManager.checkXBounds(this.topLevelElement, currentMousePosition, this.previousMousePosition);\n    var dy = this.dockManager.checkYBounds(this.topLevelElement, currentMousePosition, this.previousMousePosition);\n    this._performDrag(handle, dx, dy);\n    this.previousMousePosition = currentMousePosition;\n    this.readyToProcessNextResize = true;\n    if(this.dialog.panel)\n        this.dockManager.resumeLayout(this.dialog.panel);\n};\n\nResizableContainer.prototype.onMouseDown = function(handle, event)\n{\n    this.previousMousePosition = new Point(event.pageX, event.pageY);\n    if (handle.mouseMoveHandler)\n    {\n        handle.mouseMoveHandler.cancel();\n        delete handle.mouseMoveHandler;\n    }\n    if (handle.mouseUpHandler)\n    {\n        handle.mouseUpHandler.cancel();\n        delete handle.mouseUpHandler;\n    }\n\n    // Create the mouse event handlers\n    var self = this;\n    handle.mouseMoveHandler = new EventHandler(window, 'mousemove', function(e) { self.onMouseMoved(handle, e); });\n    handle.mouseUpHandler = new EventHandler(window, 'mouseup', function(e) { self.onMouseUp(handle, e); });\n\n    document.body.classList.add('disable-selection');\n};\n\nResizableContainer.prototype.onMouseUp = function(handle)\n{\n    handle.mouseMoveHandler.cancel();\n    handle.mouseUpHandler.cancel();\n    delete handle.mouseMoveHandler;\n    delete handle.mouseUpHandler;\n\n    document.body.classList.remove('disable-selection');\n};\n\nResizableContainer.prototype._performDrag = function(handle, dx, dy)\n{\n    var bounds = {};\n    bounds.left = utils.getPixels(this.topLevelElement.style.marginLeft);\n    bounds.top = utils.getPixels(this.topLevelElement.style.marginTop);\n    bounds.width = this.topLevelElement.clientWidth;\n    bounds.height = this.topLevelElement.clientHeight;\n\n    if (handle.east) this._resizeEast(dx, bounds);\n    if (handle.west) this._resizeWest(dx, bounds);\n    if (handle.north) this._resizeNorth(dy, bounds);\n    if (handle.south) this._resizeSouth(dy, bounds);\n};\n\nResizableContainer.prototype._resizeWest = function(dx, bounds)\n{\n    this._resizeContainer(dx, 0, -dx, 0, bounds);\n};\n\nResizableContainer.prototype._resizeEast = function(dx, bounds)\n{\n    this._resizeContainer(0, 0, dx, 0, bounds);\n};\n\nResizableContainer.prototype._resizeNorth = function(dy, bounds)\n{\n    this._resizeContainer(0, dy, 0, -dy, bounds);\n};\n\nResizableContainer.prototype._resizeSouth = function(dy, bounds)\n{\n    this._resizeContainer(0, 0, 0, dy, bounds);\n};\n\nResizableContainer.prototype._resizeContainer = function(leftDelta, topDelta, widthDelta, heightDelta, bounds)\n{\n    bounds.left += leftDelta;\n    bounds.top += topDelta;\n    bounds.width += widthDelta;\n    bounds.height += heightDelta;\n\n    var minWidth = 50;  // TODO: Move to external configuration\n    var minHeight = 50;  // TODO: Move to external configuration\n    bounds.width = Math.max(bounds.width, minWidth);\n    bounds.height = Math.max(bounds.height, minHeight);\n\n    this.topLevelElement.style.marginLeft = bounds.left + 'px';\n    this.topLevelElement.style.marginTop = bounds.top + 'px';\n\n    this.resize(bounds.width, bounds.height);\n};\n\n\nfunction ResizeHandle()\n{\n    this.element = undefined;\n    this.handleSize = 6;   // TODO: Get this from DOM\n    this.cornerSize = 12;  // TODO: Get this from DOM\n    this.east = false;\n    this.west = false;\n    this.north = false;\n    this.south = false;\n    this.corner = false;\n}\n\nResizeHandle.prototype.adjustSize = function(container, clientWidth, clientHeight)\n{\n    if (this.corner)\n    {\n        if (this.west) this.element.style.left = '0px';\n        if (this.east) this.element.style.left = (clientWidth - this.cornerSize) + 'px';\n        if (this.north) this.element.style.top = '0px';\n        if (this.south) this.element.style.top = (clientHeight - this.cornerSize) + 'px';\n    }\n    else\n    {\n        if (this.west)\n        {\n            this.element.style.left = '0px';\n            this.element.style.top = this.cornerSize + 'px';\n        }\n        if (this.east) {\n            this.element.style.left = (clientWidth - this.handleSize) + 'px';\n            this.element.style.top = this.cornerSize + 'px';\n        }\n        if (this.north) {\n            this.element.style.left = this.cornerSize + 'px';\n            this.element.style.top = '0px';\n        }\n        if (this.south) {\n            this.element.style.left = this.cornerSize + 'px';\n            this.element.style.top = (clientHeight - this.handleSize) + 'px';\n        }\n\n        if (this.west || this.east) {\n            this.element.style.height = (clientHeight - this.cornerSize * 2) + 'px';\n        } else {\n            this.element.style.width = (clientWidth - this.cornerSize * 2) + 'px';\n        }\n    }\n};\n","var PanelContainer = require('../containers/PanelContainer'),\n    DraggableContainer = require('../decorators/DraggableContainer'),\n    ResizableContainer = require('../decorators/ResizableContainer'),\n    EventHandler = require('../utils/EventHandler'),\n    utils = require('../utils/utils');\n\nfunction Dialog(panel, dockManager)\n{\n    this.panel = panel;\n    this.zIndexCounter = 100;\n    this.dockManager = dockManager;\n    this.eventListener = dockManager;\n    this._initialize();\n    this.dockManager.context.model.dialogs.push(this);\n        this.position = dockManager.defaultDialogPosition;\n\n    this.dockManager.notifyOnCreateDialog(this);\n}\n\nmodule.exports = Dialog;\n\nDialog.prototype.saveState = function(x, y){\n    this.position = {x: x, y: y};\n    this.dockManager.notifyOnChangeDialogPosition(this, x, y);\n};\n\nDialog.fromElement = function(id, dockManager)\n{\n    return new Dialog(new PanelContainer(document.getElementById(id), dockManager), dockManager);\n};\n\nDialog.prototype._initialize = function()\n{\n    this.panel.floatingDialog = this;\n    this.elementDialog = document.createElement('div');\n    this.elementDialog.appendChild(this.panel.elementPanel);\n    this.draggable = new DraggableContainer(this, this.panel, this.elementDialog, this.panel.elementTitle);\n    this.resizable = new ResizableContainer(this, this.draggable, this.draggable.topLevelElement);\n\n    document.body.appendChild(this.elementDialog);\n    this.elementDialog.classList.add('dialog-floating');\n    this.elementDialog.classList.add('rounded-corner-top');\n    this.panel.elementTitle.classList.add('rounded-corner-top');\n\n    this.mouseDownHandler = new EventHandler(this.elementDialog, 'mousedown', this.onMouseDown.bind(this));\n    this.resize(this.panel.elementPanel.clientWidth, this.panel.elementPanel.clientHeight);\n    this.isHidden = false;\n    this.bringToFront();\n};\n\nDialog.prototype.setPosition = function(x, y)\n{\n    this.position = {x: x, y: y};\n    this.elementDialog.style.left = x + 'px';\n    this.elementDialog.style.top = y + 'px';\n    this.dockManager.notifyOnChangeDialogPosition(this, x, y);\n};\n\nDialog.prototype.getPosition = function()\n{\n    return {\n        left: this.position ? this.position.x : 0,\n        top: this.position ? this.position.y : 0\n    };\n};\n\nDialog.prototype.onMouseDown = function()\n{\n    this.bringToFront();\n};\n\nDialog.prototype.destroy = function()\n{\n    if (this.mouseDownHandler)\n    {\n        this.mouseDownHandler.cancel();\n        delete this.mouseDownHandler;\n    }\n    this.elementDialog.classList.remove('rounded-corner-top');\n    this.panel.elementTitle.classList.remove('rounded-corner-top');\n    utils.removeNode(this.elementDialog);\n    this.draggable.removeDecorator();\n    utils.removeNode(this.panel.elementPanel);\n     this.dockManager.context.model.dialogs.remove(this);\n    delete this.panel.floatingDialog;\n};\n\nDialog.prototype.resize = function(width, height)\n{\n    this.resizable.resize(width, height);\n};\n\nDialog.prototype.setTitle = function(title)\n{\n    this.panel.setTitle(title);\n};\n\nDialog.prototype.setTitleIcon = function(iconName)\n{\n    this.panel.setTitleIcon(iconName);\n};\n\nDialog.prototype.bringToFront = function()\n{\n    this.elementDialog.style.zIndex = this.zIndexCounter++;\n};\n\nDialog.prototype.hide = function()\n{\n    this.elementDialog.style.zIndex = 0;\n    this.elementDialog.style.display = 'none';\n     if(!this.isHidden)\n    {\n        this.isHidden = true;\n        this.dockManager.notifyOnHideDialog(this);\n    }\n};\n\nDialog.prototype.show = function()\n{\n    this.elementDialog.style.zIndex = 100;\n    this.elementDialog.style.display = 'block';\n    if(this.isHidden)\n    {\n        this.isHidden = false;\n        this.dockManager.notifyOnShowDialog(this);\n    }\n};\n","var DockNode = require('./DockNode'),\n    HorizontalDockContainer = require('../containers/HorizontalDockContainer'),\n    VerticalDockContainer = require('../containers/VerticalDockContainer'),\n    FillDockContainer = require('../containers/FillDockContainer'),\n    Rectangle = require('../utils/Rectangle'),\n    utils = require('../utils/utils');\n\nfunction DockLayoutEngine(dockManager)\n{\n    this.dockManager = dockManager;\n}\n\nmodule.exports = DockLayoutEngine;\n\n/** docks the [newNode] to the left of [referenceNode] */\nDockLayoutEngine.prototype.dockLeft = function(referenceNode, newNode)\n{\n    this._performDock(referenceNode, newNode, 'horizontal', true);\n};\n\n/** docks the [newNode] to the right of [referenceNode] */\nDockLayoutEngine.prototype.dockRight = function(referenceNode, newNode) {\n    this._performDock(referenceNode, newNode, 'horizontal', false);\n};\n\n/** docks the [newNode] to the top of [referenceNode] */\nDockLayoutEngine.prototype.dockUp = function(referenceNode, newNode) {\n    this._performDock(referenceNode, newNode, 'vertical', true);\n};\n\n/** docks the [newNode] to the bottom of [referenceNode] */\nDockLayoutEngine.prototype.dockDown = function(referenceNode, newNode) {\n    this._performDock(referenceNode, newNode, 'vertical', false);\n};\n\n/** docks the [newNode] by creating a new tab inside [referenceNode] */\nDockLayoutEngine.prototype.dockFill = function(referenceNode, newNode) {\n    this._performDock(referenceNode, newNode, 'fill', false);\n};\n\nDockLayoutEngine.prototype.undock = function(node)\n{\n    var parentNode = node.parent;\n    if (!parentNode)\n        throw new Error('Cannot undock.  panel is not a leaf node');\n\n    // Get the position of the node relative to it's siblings\n    var siblingIndex = parentNode.children.indexOf(node);\n\n    // Detach the node from the dock manager's tree hierarchy\n    node.detachFromParent();\n\n    // Fix the node's parent hierarchy\n    if (parentNode.children.length < parentNode.container.minimumAllowedChildNodes) {\n        // If the child count falls below the minimum threshold, destroy the parent and merge\n        // the children with their grandparents\n        var grandParent = parentNode.parent;\n        for (var i = 0; i < parentNode.children.length; i++)\n        {\n            var otherChild = parentNode.children[i];\n            if (grandParent)\n            {\n                // parent node is not a root node\n                grandParent.addChildAfter(parentNode, otherChild);\n                parentNode.detachFromParent();\n                var width =parentNode.container.containerElement.clientWidth;\n                var height = parentNode.container.containerElement.clientHeight;\n                parentNode.container.destroy();\n\n                otherChild.container.resize(width, height);\n                grandParent.performLayout();\n            }\n            else\n            {\n                // Parent is a root node.\n                // Make the other child the root node\n                parentNode.detachFromParent();\n                parentNode.container.destroy();\n                this.dockManager.setRootNode(otherChild);\n            }\n        }\n    }\n    else\n    {\n        // the node to be removed has 2 or more other siblings. So it is safe to continue\n        // using the parent composite container.\n        parentNode.performLayout();\n\n        // Set the next sibling as the active child (e.g. for a Tab host, it would select it as the active tab)\n        if (parentNode.children.length > 0)\n        {\n            var nextActiveSibling = parentNode.children[Math.max(0, siblingIndex - 1)];\n            parentNode.container.setActiveChild(nextActiveSibling.container);\n        }\n    }\n    this.dockManager.invalidate();\n\n\tthis.dockManager.notifyOnUnDock(node);\n};\n\nDockLayoutEngine.prototype.reorderTabs = function(node, handle, state, index){\n    var N = node.children.length;\n    var nodeIndexToDelete  = state === 'left' ? index : index + 1;\n    if (state == 'right' && nodeIndexToDelete >= node.children.length)\n        return;\n    if (state == 'left' && nodeIndexToDelete == 0)\n        return;\n\n    var indexes = Array.apply(null, {length: N}).map(Number.call, Number);\n    var indexValue = indexes.splice(nodeIndexToDelete, 1)[0]; //remove element\n    indexes.splice(state === 'left' ? index - 1 : index, 0, indexValue); //insert\n\n    node.children = node.children.orderByIndexes(indexes); //apply\n    node.container.tabHost.performTabsLayout(indexes);\n    this.dockManager.notifyOnTabsReorder(node);\n};\n\nDockLayoutEngine.prototype._performDock = function(referenceNode, newNode, direction, insertBeforeReference)\n{\n    if (referenceNode.parent && referenceNode.parent.container.containerType === 'fill')\n        referenceNode = referenceNode.parent;\n\n    if (direction === 'fill' && referenceNode.container.containerType === 'fill')\n    {\n        referenceNode.addChild(newNode);\n        referenceNode.performLayout();\n        referenceNode.container.setActiveChild(newNode.container);\n        this.dockManager.invalidate();\n        this.dockManager.notifyOnDock(newNode);\n        return;\n    }\n\n    // Check if reference node is root node\n    var model = this.dockManager.context.model,\n        compositeContainer,\n        compositeNode,\n        referenceParent;\n\n    if (referenceNode === model.rootNode)\n    {\n        compositeContainer = this._createDockContainer(direction, newNode, referenceNode);\n        compositeNode = new DockNode(compositeContainer);\n\n        if (insertBeforeReference)\n        {\n            compositeNode.addChild(newNode);\n            compositeNode.addChild(referenceNode);\n        }\n        else\n        {\n            compositeNode.addChild(referenceNode);\n            compositeNode.addChild(newNode);\n        }\n\n        // Attach the root node to the dock manager's DOM\n\t\tthis.dockManager.setRootNode(compositeNode);\n        this.dockManager.rebuildLayout(this.dockManager.context.model.rootNode);\n        compositeNode.container.setActiveChild(newNode.container);\n        this.dockManager.invalidate();\n        this.dockManager.notifyOnDock(newNode);\n        return;\n    }\n\n    if (referenceNode.parent.container.containerType !== direction) {\n        referenceParent = referenceNode.parent;\n\n        // Get the dimensions of the reference node, for resizing later on\n        var referenceNodeWidth = referenceNode.container.containerElement.clientWidth;\n        var referenceNodeHeight = referenceNode.container.containerElement.clientHeight;\n\n        // Get the dimensions of the reference node, for resizing later on\n        var referenceNodeParentWidth = referenceParent.container.containerElement.clientWidth;\n        var referenceNodeParentHeight = referenceParent.container.containerElement.clientHeight;\n\n        // Replace the reference node with a new composite node with the reference and new node as it's children\n        compositeContainer = this._createDockContainer(direction, newNode, referenceNode);\n        compositeNode = new DockNode(compositeContainer);\n\n        referenceParent.addChildAfter(referenceNode, compositeNode);\n        referenceNode.detachFromParent();\n        utils.removeNode(referenceNode.container.containerElement);\n\n        if (insertBeforeReference)\n        {\n            compositeNode.addChild(newNode);\n            compositeNode.addChild(referenceNode);\n        }\n        else\n        {\n            compositeNode.addChild(referenceNode);\n            compositeNode.addChild(newNode);\n        }\n\n        referenceParent.performLayout();\n        compositeNode.performLayout();\n\n        compositeNode.container.setActiveChild(newNode.container);\n        compositeNode.container.resize(referenceNodeWidth, referenceNodeHeight);\n        referenceParent.container.resize(referenceNodeParentWidth, referenceNodeParentHeight);\n    }\n    else\n    {\n        // Add as a sibling, since the parent of the reference node is of the right composite type\n        referenceParent = referenceNode.parent;\n        if (insertBeforeReference)\n            referenceParent.addChildBefore(referenceNode, newNode);\n        else\n            referenceParent.addChildAfter(referenceNode, newNode);\n        referenceParent.performLayout();\n        referenceParent.container.setActiveChild(newNode.container);\n    }\n\n    // force resize the panel\n    var containerWidth = newNode.container.containerElement.clientWidth;\n    var containerHeight = newNode.container.containerElement.clientHeight;\n    newNode.container.resize(containerWidth, containerHeight);\n\n    this.dockManager.invalidate();\n\tthis.dockManager.notifyOnDock(newNode);\n};\n\nDockLayoutEngine.prototype._forceResizeCompositeContainer = function(container)\n{\n    var width = container.containerElement.clientWidth;\n    var height = container.containerElement.clientHeight;\n    container.resize(width, height);\n};\n\nDockLayoutEngine.prototype._createDockContainer = function(containerType, newNode, referenceNode)\n{\n    if (containerType === 'horizontal')\n        return new HorizontalDockContainer(this.dockManager, [newNode.container, referenceNode.container]);\n    if (containerType === 'vertical')\n        return new VerticalDockContainer(this.dockManager, [newNode.container, referenceNode.container]);\n    if (containerType === 'fill')\n        return new FillDockContainer(this.dockManager);\n    throw new Error('Failed to create dock container of type: ' + containerType);\n};\n\n\n/**\n * Gets the bounds of the new node if it were to dock with the specified configuration\n * The state is not modified in this function.  It is used for showing a preview of where\n * the panel would be docked when hovered over a dock wheel button\n */\nDockLayoutEngine.prototype.getDockBounds = function(referenceNode, containerToDock, direction, insertBeforeReference)\n{\n    var compositeNode; // The node that contains the splitter / fill node\n    var childCount;\n    var childPosition;\n    var bounds;\n\n    if (direction === 'fill')\n    {\n        // Since this is a fill operation, the highlight bounds is the same as the reference node\n        // TODO: Create a tab handle highlight to show that it's going to be docked in a tab\n        var targetElement = referenceNode.container.containerElement;\n        bounds = new Rectangle();\n        bounds.x = targetElement.offsetLeft;\n        bounds.y = targetElement.offsetTop;\n        bounds.width = targetElement.clientWidth;\n        bounds.height= targetElement.clientHeight;\n        return bounds;\n    }\n\n    if (referenceNode.parent && referenceNode.parent.container.containerType === 'fill')\n        // Ignore the fill container's child and move one level up\n        referenceNode = referenceNode.parent;\n\n    // Flag to indicate of the renference node was replaced with a new composite node with 2 children\n    var hierarchyModified = false;\n    if (referenceNode.parent && referenceNode.parent.container.containerType === direction) {\n        // The parent already is of the desired composite type.  Will be inserted as sibling to the reference node\n        compositeNode = referenceNode.parent;\n        childCount = compositeNode.children.length;\n        childPosition = compositeNode.children.indexOf(referenceNode) + (insertBeforeReference ? 0 : 1);\n    } else {\n        // The reference node will be replaced with a new composite node of the desired type with 2 children\n        compositeNode = referenceNode;\n        childCount = 1;   // The newly inserted composite node will contain the reference node\n        childPosition = (insertBeforeReference ? 0 : 1);\n        hierarchyModified = true;\n    }\n\n    var splitBarSize = 5;  // TODO: Get from DOM\n    var targetPanelSize = 0;\n    var targetPanelStart = 0;\n    if (direction === 'vertical' || direction === 'horizontal')\n    {\n        // Existing size of the composite container (without the splitter bars).\n        // This will also be the final size of the composite (splitter / fill)\n        // container after the new panel has been docked\n        var compositeSize = this._getVaringDimension(compositeNode.container, direction) - (childCount - 1) * splitBarSize;\n\n        // size of the newly added panel\n        var newPanelOriginalSize = this._getVaringDimension(containerToDock, direction);\n        var scaleMultiplier = compositeSize / (compositeSize + newPanelOriginalSize);\n\n        // Size of the panel after it has been docked and scaled\n        targetPanelSize = newPanelOriginalSize * scaleMultiplier;\n        if (hierarchyModified)\n            targetPanelStart = insertBeforeReference ? 0 : compositeSize * scaleMultiplier;\n        else\n        {\n            for (var i = 0; i < childPosition; i++)\n                targetPanelStart += this._getVaringDimension(compositeNode.children[i].container, direction);\n            targetPanelStart *= scaleMultiplier;\n        }\n    }\n\n    bounds = new Rectangle();\n    if (direction === 'vertical')\n    {\n        bounds.x = compositeNode.container.containerElement.offsetLeft;\n        bounds.y = compositeNode.container.containerElement.offsetTop + targetPanelStart;\n        bounds.width = compositeNode.container.width;\n        bounds.height = targetPanelSize;\n    } else if (direction === 'horizontal') {\n        bounds.x = compositeNode.container.containerElement.offsetLeft + targetPanelStart;\n        bounds.y = compositeNode.container.containerElement.offsetTop;\n        bounds.width = targetPanelSize;\n        bounds.height = compositeNode.container.height;\n    }\n\n    return bounds;\n};\n\nDockLayoutEngine.prototype._getVaringDimension = function(container, direction)\n{\n    if (direction === 'vertical')\n        return container.height;\n    if (direction === 'horizontal')\n        return container.width;\n    return 0;\n};\n","var DockManagerContext = require('./DockManagerContext'),\n    DockNode = require('./DockNode'),\n    DockWheel = require('./DockWheel'),\n    DockLayoutEngine = require('./DockLayoutEngine'),\n    Dialog = require('../dialog/Dialog'),\n    DockGraphSerializer = require('../serialization/DockGraphSerializer'),\n    DockGraphDeserializer = require('../serialization/DockGraphDeserializer'),\n    EventHandler = require('../utils/EventHandler'),\n    Point = require('../utils/Point'),\n    utils = require('../utils/utils');\n\n/**\n * Dock manager manages all the dock panels in a hierarchy, similar to visual studio.\n * It owns a Html Div element inside which all panels are docked\n * Initially the document manager takes up the central space and acts as the root node\n */\n\nfunction DockManager(element)\n{\n    if (element === undefined)\n        throw new Error('Invalid Dock Manager element provided');\n\n    this.element = element;\n    this.context = this.dockWheel = this.layoutEngine = this.mouseMoveHandler = undefined;\n    this.layoutEventListeners = [];\n\n    this.defaultDialogPosition = new Point(0, 0);\n}\n\nmodule.exports = DockManager;\n\nDockManager.prototype.initialize = function()\n{\n    this.context = new DockManagerContext(this);\n    var documentNode = new DockNode(this.context.documentManagerView);\n    this.context.model.rootNode = documentNode;\n    this.context.model.documentManagerNode = documentNode;\n    this.context.model.dialogs = [];\n    this.setRootNode(this.context.model.rootNode);\n    // Resize the layout\n    this.resize(this.element.clientWidth, this.element.clientHeight);\n    this.dockWheel = new DockWheel(this);\n    this.layoutEngine = new DockLayoutEngine(this);\n    this._undockEnabled = true;\n    this.rebuildLayout(this.context.model.rootNode);\n};\n\nDockManager.prototype.checkXBounds = function(container, currentMousePosition, previousMousePosition){\n    var dx = Math.floor(currentMousePosition.x - previousMousePosition.x);\n    var leftBounds = currentMousePosition.x + dx < 0 || (container.offsetLeft + container.offsetWidth + dx - 40 ) < 0;\n    var rightBounds =\n        currentMousePosition.x + dx > this.element.offsetWidth ||\n        (container.offsetLeft + dx + 40) > this.element.offsetWidth;\n\n    if (leftBounds || rightBounds)\n    {\n        previousMousePosition.x = currentMousePosition.x;\n        dx = 0;\n    }\n\n    return dx;\n};\n\nDockManager.prototype.checkYBounds = function(container, currentMousePosition, previousMousePosition){\n    var dy = Math.floor(currentMousePosition.y - previousMousePosition.y);\n    var topBounds = container.offsetTop + dy < this.element.offsetTop;\n    var bottomBounds =\n        currentMousePosition.y + dy > this.element.offsetHeight ||\n        (container.offsetTop + dy > this.element.offsetHeight + this.element.offsetTop - 20);\n\n    if (topBounds || bottomBounds)\n    {\n        previousMousePosition.y = currentMousePosition.y;\n        dy = 0;\n    }\n\n    return dy;\n};\n\nDockManager.prototype.rebuildLayout = function(node)\n{\n    var self = this;\n    node.children.forEach(function(child) {\n        self.rebuildLayout(child);\n    });\n    node.performLayout();\n};\n\nDockManager.prototype.invalidate = function()\n{\n    this.resize(this.element.clientWidth, this.element.clientHeight);\n};\n\nDockManager.prototype.resize = function(width, height)\n{\n    this.element.style.width = width + 'px';\n    this.element.style.height = height + 'px';\n    this.context.model.rootNode.container.resize(width, height);\n};\n\n/**\n * Reset the dock model . This happens when the state is loaded from json\n */\nDockManager.prototype.setModel = function(model)\n{\n    utils.removeNode(this.context.documentManagerView.containerElement);\n    this.context.model = model;\n    this.setRootNode(model.rootNode);\n\n    this.rebuildLayout(model.rootNode);\n    this.loadResize(model.rootNode);\n    // this.invalidate();\n};\n\nDockManager.prototype.loadResize = function(node)\n{\n    var self = this;\n    node.children.reverse().forEach(function(child) {\n    self.loadResize(child);\n     node.container.setActiveChild(child.container);\n    });\n    node.children.reverse();\n    node.container.resize(node.container.state.width, node.container.state.height);\n\n    // node.performLayout();\n};\n\nDockManager.prototype.setRootNode = function(node)\n{\n    // if (this.context.model.rootNode)\n    // {\n    //     // detach it from the dock manager's base element\n    //     context.model.rootNode.detachFromParent();\n    // }\n\n    // Attach the new node to the dock manager's base element and set as root node\n    node.detachFromParent();\n    this.context.model.rootNode = node;\n    this.element.appendChild(node.container.containerElement);\n};\n\n\nDockManager.prototype.onDialogDragStarted = function(sender, e)\n{\n    this.dockWheel.activeNode = this._findNodeOnPoint(e.pageX, e.pageY);\n    this.dockWheel.activeDialog = sender;\n    this.dockWheel.showWheel();\n    if (this.mouseMoveHandler)\n    {\n        this.mouseMoveHandler.cancel();\n        delete this.mouseMoveHandler;\n    }\n    this.mouseMoveHandler = new EventHandler(window, 'mousemove', this.onMouseMoved.bind(this));\n};\n\nDockManager.prototype.onDialogDragEnded = function(sender)\n{\n    if (this.mouseMoveHandler)\n    {\n        this.mouseMoveHandler.cancel();\n        delete this.mouseMoveHandler;\n    }\n    this.dockWheel.onDialogDropped(sender);\n    this.dockWheel.hideWheel();\n    delete this.dockWheel.activeDialog;\n    //TODO: not so good\n    sender.saveState(sender.elementDialog.offsetLeft, sender.elementDialog.offsetTop);\n};\n\nDockManager.prototype.onMouseMoved = function(e)\n{\n    this.dockWheel.activeNode = this._findNodeOnPoint(e.clientX, e.clientY);\n};\n\n/**\n * Perform a DFS on the dock model's tree to find the\n * deepest level panel (i.e. the top-most non-overlapping panel)\n * that is under the mouse cursor\n * Retuns null if no node is found under this point\n */\nDockManager.prototype._findNodeOnPoint = function(x, y)\n{\n    var stack = [];\n    stack.push(this.context.model.rootNode);\n    var bestMatch;\n\n    while (stack.length > 0)\n    {\n        var topNode = stack.pop();\n\n        if (utils.isPointInsideNode(x, y, topNode))\n        {\n            // This node contains the point.\n            bestMatch = topNode;\n\n            // Keep looking future down\n            [].push.apply(stack, topNode.children);\n        }\n    }\n    return bestMatch;\n};\n\n/** Dock the [dialog] to the left of the [referenceNode] node */\nDockManager.prototype.dockDialogLeft = function(referenceNode, dialog)\n{\n    return this._requestDockDialog(referenceNode, dialog, this.layoutEngine.dockLeft.bind(this.layoutEngine));\n};\n\n/** Dock the [dialog] to the right of the [referenceNode] node */\nDockManager.prototype.dockDialogRight = function(referenceNode, dialog)\n{\n    return this._requestDockDialog(referenceNode, dialog, this.layoutEngine.dockRight.bind(this.layoutEngine));\n};\n\n/** Dock the [dialog] above the [referenceNode] node */\nDockManager.prototype.dockDialogUp = function(referenceNode, dialog)\n{\n    return this._requestDockDialog(referenceNode, dialog, this.layoutEngine.dockUp.bind(this.layoutEngine));\n};\n\n/** Dock the [dialog] below the [referenceNode] node */\nDockManager.prototype.dockDialogDown = function(referenceNode, dialog)\n{\n    return this._requestDockDialog(referenceNode, dialog, this.layoutEngine.dockDown.bind(this.layoutEngine));\n};\n\n/** Dock the [dialog] as a tab inside the [referenceNode] node */\nDockManager.prototype.dockDialogFill = function(referenceNode, dialog)\n{\n    return this._requestDockDialog(referenceNode, dialog, this.layoutEngine.dockFill.bind(this.layoutEngine));\n};\n\n/** Dock the [container] to the left of the [referenceNode] node */\nDockManager.prototype.dockLeft = function(referenceNode, container, ratio)\n{\n    return this._requestDockContainer(referenceNode, container, this.layoutEngine.dockLeft.bind(this.layoutEngine), ratio);\n};\n\n/** Dock the [container] to the right of the [referenceNode] node */\nDockManager.prototype.dockRight = function(referenceNode,  container, ratio)\n{\n    return this._requestDockContainer(referenceNode, container, this.layoutEngine.dockRight.bind(this.layoutEngine), ratio);\n};\n\n/** Dock the [container] above the [referenceNode] node */\nDockManager.prototype.dockUp = function(referenceNode,  container, ratio)\n{\n    return this._requestDockContainer(referenceNode, container, this.layoutEngine.dockUp.bind(this.layoutEngine), ratio);\n};\n\n/** Dock the [container] below the [referenceNode] node */\nDockManager.prototype.dockDown = function(referenceNode,  container, ratio)\n{\n    return this._requestDockContainer(referenceNode, container, this.layoutEngine.dockDown.bind(this.layoutEngine), ratio);\n};\n\n/** Dock the [container] as a tab inside the [referenceNode] node */\nDockManager.prototype.dockFill = function(referenceNode, container)\n{\n    return this._requestDockContainer(referenceNode, container, this.layoutEngine.dockFill.bind(this.layoutEngine));\n};\nDockManager.prototype.floatDialog = function(container, x, y)\n{\n    var retdiag = undefined;\n\n    //check the dialog do not already exist\n    this.context.model.dialogs.forEach(function(dialog) {\n        if (container == dialog.panel) {\n            dialog.show(x, y);\n            retdiag = dialog;\n\n        }\n    });\n    if (retdiag)\n        return retdiag;\n    //try to undock just in case\n    try {\n        var node = this._findNodeFromContainer(container);\n        this.layoutEngine.undock(node);\n    } catch (err) {}\n\n    var panel = container;\n    utils.removeNode(panel.elementPanel);\n    panel.isDialog = true;\n    var dialog = new Dialog(panel, this);\n    dialog.setPosition(x, y);\n    return dialog;\n};\n\nDockManager.prototype._requestDockDialog = function(referenceNode, dialog, layoutDockFunction)\n{\n    // Get the active dialog that was dragged on to the dock wheel\n    var panel = dialog.panel;\n    var newNode = new DockNode(panel);\n    panel.prepareForDocking();\n    dialog.destroy();\n    layoutDockFunction(referenceNode, newNode);\n    // this.invalidate();\n    return newNode;\n};\n\nDockManager.prototype._requestDockContainer = function(referenceNode, container, layoutDockFunction, ratio)\n{\n    // Get the active dialog that was dragged on to the dock wheel\n    var newNode = new DockNode(container);\n    if (container.containerType === 'panel')\n    {\n        var panel = container;\n        panel.prepareForDocking();\n        utils.removeNode(panel.elementPanel);\n    }\n    layoutDockFunction(referenceNode, newNode);\n\n    if (ratio && newNode.parent &&\n        (newNode.parent.container.containerType === 'vertical' || newNode.parent.container.containerType === 'horizontal'))\n    {\n        var splitter = newNode.parent.container;\n        splitter.setContainerRatio(container, ratio);\n    }\n\n    this.rebuildLayout(this.context.model.rootNode);\n    this.invalidate();\n    return newNode;\n};\n\nDockManager.prototype._requestTabReorder = function(container, e){\n    var node = this._findNodeFromContainer(container);\n     this.layoutEngine.reorderTabs(node, e.handle, e.state, e.index);\n};\n\n/**\n * Undocks a panel and converts it into a floating dialog window\n * It is assumed that only leaf nodes (panels) can be undocked\n */\nDockManager.prototype.requestUndockToDialog = function(container, event, dragOffset)\n{\n    var node = this._findNodeFromContainer(container);\n    this.layoutEngine.undock(node);\n\n    // Create a new dialog window for the undocked panel\n    var dialog = new Dialog(node.container, this);\n\n    if(event !== undefined){\n    // Adjust the relative position\n        var dialogWidth = dialog.elementDialog.clientWidth;\n        if (dragOffset.x > dialogWidth)\n            dragOffset.x = 0.75 * dialogWidth;\n        dialog.setPosition(\n            event.clientX - dragOffset.x,\n            event.clientY - dragOffset.y);\n        dialog.draggable.onMouseDown(event);\n    }\n    return dialog;\n};\n\n/** Undocks a panel and converts it into a floating dialog window\n * It is assumed that only leaf nodes (panels) can be undocked\n */\nDockManager.prototype.requestUndock = function(container)\n{\n    var node = this._findNodeFromContainer(container);\n    this.layoutEngine.undock(node);\n};\n\n/**\n * Removes a dock container from the dock layout hierarcy\n * Returns the node that was removed from the dock tree\n */\nDockManager.prototype.requestRemove = function(container)\n{\n    var node = this._findNodeFromContainer(container);\n    var parent = node.parent;\n    node.detachFromParent();\n    if (parent)\n        this.rebuildLayout(parent);\n    return node;\n};\n\n/** Finds the node that owns the specified [container] */\nDockManager.prototype._findNodeFromContainer = function(container)\n{\n    //this.context.model.rootNode.debugDumpTree();\n\n    var stack = [];\n    stack.push(this.context.model.rootNode);\n\n    while (stack.length > 0)\n    {\n        var topNode = stack.pop();\n\n        if (topNode.container === container)\n            return topNode;\n        [].push.apply(stack, topNode.children);\n    }\n\n    throw new Error('Cannot find dock node belonging to the element');\n};\n\nDockManager.prototype.findNodeFromContainerElement = function(containerElm) {\n    //this.context.model.rootNode.debugDumpTree();\n\n    var stack = [];\n    stack.push(this.context.model.rootNode);\n\n    while (stack.length > 0)\n    {\n        var topNode = stack.pop();\n\n        if (topNode.container.containerElement === containerElm)\n            return topNode;\n        [].push.apply(stack, topNode.children);\n    }\n\n    throw new Error('Cannot find dock node belonging to the element');\n};\n\nDockManager.prototype.addLayoutListener = function(listener)\n{\n    this.layoutEventListeners.push(listener);\n};\n\nDockManager.prototype.removeLayoutListener = function(listener)\n{\n    this.layoutEventListeners.splice(this.layoutEventListeners.indexOf(listener), 1);\n};\n\nDockManager.prototype.suspendLayout = function()\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n\t\tif (listener.onSuspendLayout) listener.onSuspendLayout(self);\n\t});\n};\n\nDockManager.prototype.resumeLayout = function(panel)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n\t\tif (listener.onResumeLayout) listener.onResumeLayout(self, panel);\n\t});\n};\n\nDockManager.prototype.notifyOnDock = function(dockNode)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n\t\tif (listener.onDock) {\n\t\t\tlistener.onDock(self, dockNode);\n\t\t}\n\t});\n};\n\nDockManager.prototype.notifyOnTabsReorder = function(dockNode)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onTabsReorder) {\n            listener.onTabsReorder(self, dockNode);\n        }\n    });\n};\n\n\nDockManager.prototype.notifyOnUnDock = function(dockNode)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n\t\tif (listener.onUndock) {\n\t\t\tlistener.onUndock(self, dockNode);\n\t\t}\n\t});\n};\n\nDockManager.prototype.notifyOnClosePanel = function(panel)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onClosePanel) {\n            listener.onClosePanel(self, panel);\n        }\n    });\n};\n\n\nDockManager.prototype.notifyOnCreateDialog = function(dialog)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onCreateDialog) {\n            listener.onCreateDialog(self, dialog);\n        }\n    });\n};\n\nDockManager.prototype.notifyOnHideDialog = function(dialog)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onHideDialog) {\n            listener.onHideDialog(self, dialog);\n        }\n    });\n};\n\n\nDockManager.prototype.notifyOnShowDialog = function(dialog)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onShowDialog) {\n            listener.onShowDialog(self, dialog);\n        }\n    });\n};\n\n\nDockManager.prototype.notifyOnChangeDialogPosition = function(dialog, x, y)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onChangeDialogPosition) {\n            listener.onChangeDialogPosition(self, dialog, x, y);\n        }\n    });\n};\n\nDockManager.prototype.notifyOnTabChange = function(tabpage)\n{\n    var self = this;\n    this.layoutEventListeners.forEach(function(listener) {\n        if (listener.onTabChanged) {\n            listener.onTabChanged(self, tabpage);\n        }\n    });\n};\n\nDockManager.prototype.saveState = function()\n{\n    var serializer = new DockGraphSerializer();\n    return serializer.serialize(this.context.model);\n};\n\nDockManager.prototype.loadState = function(json)\n{\n    var deserializer = new DockGraphDeserializer(this);\n    this.context.model = deserializer.deserialize(json);\n    this.setModel(this.context.model);\n};\n\nDockManager.prototype.getPanels = function()\n{\n    var panels = [];\n    //all visible nodes\n    this._allPanels(this.context.model.rootNode, panels);\n\n    //all visible or not dialogs\n    this.context.model.dialogs.forEach(function(dialog) {\n        //TODO: check visible\n        panels.push(dialog.panel);\n    });\n\n    return panels;\n};\n\nDockManager.prototype.undockEnabled = function(state)\n{\n    this._undockEnabled = state;\n    this.getPanels().forEach(function(panel){\n        panel.canUndock(state);\n    });\n};\n\nDockManager.prototype.lockDockState = function(state)\n{\n    this.undockEnabled(!state); // false - not enabled\n    this.hideCloseButton(state); //true - hide\n};\n\nDockManager.prototype.hideCloseButton = function(state)\n{\n    this.getPanels().forEach(function(panel){\n        panel.hideCloseButton(state);\n    });\n};\n\nDockManager.prototype.updatePanels = function(ids)\n{\n     var panels = [];\n    //all visible nodes\n    this._allPanels(this.context.model.rootNode, panels);\n    //only remove\n    panels.forEach(function(panel) {\n        if(!ids.contains(panel.elementContent.id)){\n           panel.close();\n       }\n    });\n\n    this.context.model.dialogs.forEach(function(dialog) {\n        if(ids.contains(dialog.panel.elementContent.id)){\n            dialog.show();\n        }\n        else{\n            dialog.hide();\n        }\n    });\n    return panels;\n};\n\nDockManager.prototype.getVisiblePanels = function()\n{\n    var panels = [];\n    //all visible nodes\n    this._allPanels(this.context.model.rootNode, panels);\n\n    //all visible\n    this.context.model.dialogs.forEach(function(dialog) {\n        if(!dialog.isHidden){\n            panels.push(dialog.panel);\n        }\n    });\n\n    return panels;\n};\n\nDockManager.prototype._allPanels = function(node, panels)\n{\n     var self = this;\n    node.children.forEach(function(child) {\n       self._allPanels(child, panels);\n    });\n    if (node.container.containerType === 'panel'){\n        panels.push(node.container);\n    }\n};\n\nDockManager.prototype.setCloseTabIconTemplate = function(template){\n    this.closeTabIconTemplate = template;\n};\n\n//typedef void LayoutEngineDockFunction(DockNode referenceNode, DockNode newNode);\n\n/**\n* The Dock Manager notifies the listeners of layout changes so client containers that have\n* costly layout structures can detach and reattach themself to avoid reflow\n*/\n//abstract class LayoutEventListener {\n//void onSuspendLayout(DockManager dockManager);\n//void onResumeLayout(DockManager dockManager);\n//}\n","var DockModel = require('./DockModel'),\n    DocumentManagerContainer = require('../containers/DocumentManagerContainer');\n\nfunction DockManagerContext(dockManager)\n{\n    this.dockManager = dockManager;\n    this.model = new DockModel();\n    this.documentManagerView = new DocumentManagerContainer(this.dockManager);\n}\n\nmodule.exports = DockManagerContext;\n","/**\n * The Dock Model contains the tree hierarchy that represents the state of the\n * panel placement within the dock manager.\n */\nfunction DockModel()\n{\n    this.rootNode = this.documentManagerNode = undefined;\n}\n\nmodule.exports = DockModel;\n","function DockNode(container)\n{\n    /** The dock container represented by this node */\n    this.container = container;\n    this.children = [];\n}\n\nmodule.exports = DockNode;\n\nDockNode.prototype.detachFromParent = function()\n{\n    if (this.parent)\n    {\n        this.parent.removeChild(this);\n        delete this.parent;\n    }\n};\n\nDockNode.prototype.removeChild = function(childNode)\n{\n    var index = this.children.indexOf(childNode);\n    if (index >= 0)\n        this.children.splice(index, 1);\n};\n\nDockNode.prototype.addChild = function(childNode)\n{\n    childNode.detachFromParent();\n    childNode.parent = this;\n    this.children.push(childNode);\n};\n\nDockNode.prototype.addChildBefore = function(referenceNode, childNode)\n{\n    this._addChildWithDirection(referenceNode, childNode, true);\n};\n\nDockNode.prototype.addChildAfter = function(referenceNode, childNode)\n{\n    this._addChildWithDirection(referenceNode, childNode, false);\n};\n\nDockNode.prototype._addChildWithDirection = function(referenceNode, childNode, before)\n{\n    // Detach this node from it's parent first\n    childNode.detachFromParent();\n    childNode.parent = this;\n\n    var referenceIndex = this.children.indexOf(referenceNode);\n    var preList = this.children.slice(0, referenceIndex);\n    var postList = this.children.slice(referenceIndex + 1, this.children.length);\n\n    this.children = preList.slice(0);\n    if (before)\n    {\n        this.children.push(childNode);\n        this.children.push(referenceNode);\n    }\n    else\n    {\n        this.children.push(referenceNode);\n        this.children.push(childNode);\n    }\n    Array.prototype.push.apply(this.children, postList);\n};\n\nDockNode.prototype.performLayout = function()\n{\n    var childContainers = this.children.map(function(childNode) { return childNode.container; });\n    this.container.performLayout(childContainers);\n};\n\nDockNode.prototype.debugDumpTree = function(indent)\n{\n    if (indent === undefined)\n        indent = 0;\n\n    var message = this.container.name;\n    for (var i = 0; i < indent; i++)\n        message = '\\t' + message;\n\n    var parentType = this.parent === undefined ? 'null' : this.parent.container.containerType;\n    console.log('>>' + message + ' [' + parentType + ']');\n\n    this.children.forEach(function(childNode) { childNode.debugDumpTree(indent + 1); });\n};\n","var DockWheelItem = require('./DockWheelItem'),\n    utils = require('../utils/utils');\n\n/**\n * Manages the dock overlay buttons that are displayed over the dock manager\n */\nfunction DockWheel(dockManager)\n{\n    this.dockManager = dockManager;\n    this.elementMainWheel = document.createElement('div');    // Contains the main wheel's 5 dock buttons\n    this.elementSideWheel = document.createElement('div');    // Contains the 4 buttons on the side\n    this.wheelItems = {};\n    var wheelTypes = [\n        'left', 'right', 'top', 'down', 'fill',     // Main dock wheel buttons\n        'left-s', 'right-s', 'top-s', 'down-s'      // Buttons on the extreme 4 sides\n    ];\n    var self = this;\n    wheelTypes.forEach(function(wheelType)\n    {\n        self.wheelItems[wheelType] = new DockWheelItem(self, wheelType);\n        if (wheelType.substr(-2, 2) === '-s')\n            // Side button\n            self.elementSideWheel.appendChild(self.wheelItems[wheelType].element);\n        else\n            // Main dock wheel button\n            self.elementMainWheel.appendChild(self.wheelItems[wheelType].element);\n    });\n\n    var zIndex = 100000;\n    this.elementMainWheel.classList.add('dock-wheel-base');\n    this.elementSideWheel.classList.add('dock-wheel-base');\n    this.elementMainWheel.style.zIndex = zIndex + 1;\n    this.elementSideWheel.style.zIndex = zIndex;\n    this.elementPanelPreview = document.createElement('div');\n    this.elementPanelPreview.classList.add('dock-wheel-panel-preview');\n    this.elementPanelPreview.style.zIndex = zIndex - 1;\n    this.activeDialog = undefined;  // The dialog being dragged, when the wheel is visible\n    this._activeNode = undefined;\n    this._visible = false;\n}\n\nmodule.exports = DockWheel;\n\n/** The node over which the dock wheel is being displayed on */\nObject.defineProperty(DockWheel.prototype, 'activeNode', {\n    get: function() { return this._activeNode; },\n    set: function(value)\n    {\n        var previousValue = this._activeNode;\n        this._activeNode = value;\n\n        if (previousValue !== this._activeNode)\n        {\n            // The active node has been changed.\n            // Reattach the wheel to the new node's element and show it again\n            if (this._visible)\n                this.showWheel();\n        }\n    }\n});\n\nDockWheel.prototype.showWheel = function()\n{\n    this._visible = true;\n    if (!this.activeNode)\n    {\n        // No active node selected. make sure the wheel is invisible\n        utils.removeNode(this.elementMainWheel);\n        utils.removeNode(this.elementSideWheel);\n        return;\n    }\n    var element = this.activeNode.container.containerElement;\n    var containerWidth = element.clientWidth;\n    var containerHeight = element.clientHeight;\n    var baseX = Math.floor(containerWidth / 2) + element.offsetLeft;\n    var baseY = Math.floor(containerHeight / 2) + element.offsetTop;\n    this.elementMainWheel.style.left = baseX + 'px';\n    this.elementMainWheel.style.top = baseY + 'px';\n\n    // The positioning of the main dock wheel buttons is done automatically through CSS\n    // Dynamically calculate the positions of the buttons on the extreme sides of the dock manager\n    var sideMargin = 20;\n    var dockManagerWidth = this.dockManager.element.clientWidth;\n    var dockManagerHeight = this.dockManager.element.clientHeight;\n    // var dockManagerOffsetX = this.dockManager.element.offsetLeft;\n    // var dockManagerOffsetY = this.dockManager.element.offsetTop;\n\n    utils.removeNode(this.elementMainWheel);\n    utils.removeNode(this.elementSideWheel);\n    element.appendChild(this.elementMainWheel);\n    this.dockManager.element.appendChild(this.elementSideWheel);\n\n    this._setWheelButtonPosition('left-s',   sideMargin, -dockManagerHeight / 2);\n    this._setWheelButtonPosition('right-s',  dockManagerWidth - sideMargin * 2, -dockManagerHeight / 2);\n    this._setWheelButtonPosition('top-s',    dockManagerWidth / 2, -dockManagerHeight + sideMargin);\n    this._setWheelButtonPosition('down-s',   dockManagerWidth / 2, -sideMargin);\n};\n\nDockWheel.prototype._setWheelButtonPosition = function(wheelId, left, top)\n{\n    var item = this.wheelItems[wheelId];\n    var itemHalfWidth = item.element.clientWidth / 2;\n    var itemHalfHeight = item.element.clientHeight / 2;\n\n    var x = Math.floor(left - itemHalfWidth);\n    var y = Math.floor(top - itemHalfHeight);\n//    item.element.style.left = '${x}px';\n//    item.element.style.top = '${y}px';\n    item.element.style.marginLeft = x + 'px';\n    item.element.style.marginTop = y + 'px';\n};\n\nDockWheel.prototype.hideWheel = function()\n{\n    this._visible = false;\n    this.activeNode = undefined;\n    utils.removeNode(this.elementMainWheel);\n    utils.removeNode(this.elementSideWheel);\n    utils.removeNode(this.elementPanelPreview);\n\n    // deactivate all wheels\n    for (var wheelType in this.wheelItems)\n        this.wheelItems[wheelType].active = false;\n};\n\nDockWheel.prototype.onMouseOver = function(wheelItem)\n{\n    if (!this.activeDialog)\n        return;\n\n    // Display the preview panel to show where the panel would be docked\n    var rootNode = this.dockManager.context.model.rootNode;\n    var bounds;\n    if (wheelItem.id === 'top') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(this.activeNode, this.activeDialog.panel, 'vertical', true);\n    } else if (wheelItem.id === 'down') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(this.activeNode, this.activeDialog.panel, 'vertical', false);\n    } else if (wheelItem.id === 'left') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(this.activeNode, this.activeDialog.panel, 'horizontal', true);\n    } else if (wheelItem.id === 'right') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(this.activeNode, this.activeDialog.panel, 'horizontal', false);\n    } else if (wheelItem.id === 'fill') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(this.activeNode, this.activeDialog.panel, 'fill', false);\n    } else if (wheelItem.id === 'top-s') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(rootNode, this.activeDialog.panel, 'vertical', true);\n    } else if (wheelItem.id === 'down-s') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(rootNode, this.activeDialog.panel, 'vertical', false);\n    } else if (wheelItem.id === 'left-s') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(rootNode, this.activeDialog.panel, 'horizontal', true);\n    } else if (wheelItem.id === 'right-s') {\n        bounds = this.dockManager.layoutEngine.getDockBounds(rootNode, this.activeDialog.panel, 'horizontal', false);\n    }\n\n    if (bounds)\n    {\n        this.dockManager.element.appendChild(this.elementPanelPreview);\n        this.elementPanelPreview.style.left = Math.round(bounds.x) + 'px';\n        this.elementPanelPreview.style.top = Math.round(bounds.y) + 'px';\n        this.elementPanelPreview.style.width = Math.round(bounds.width) + 'px';\n        this.elementPanelPreview.style.height = Math.round(bounds.height) + 'px';\n    }\n};\n\nDockWheel.prototype.onMouseOut = function()\n{\n    utils.removeNode(this.elementPanelPreview);\n};\n\n/**\n * Called if the dialog is dropped in a dock panel.\n * The dialog might not necessarily be dropped in one of the dock wheel buttons,\n * in which case the request will be ignored\n */\nDockWheel.prototype.onDialogDropped = function(dialog)\n{\n    // Check if the dialog was dropped in one of the wheel items\n    var wheelItem = this._getActiveWheelItem();\n    if (wheelItem)\n        this._handleDockRequest(wheelItem, dialog);\n};\n\n/**\n * Returns the wheel item which has the mouse cursor on top of it\n */\nDockWheel.prototype._getActiveWheelItem = function()\n{\n    for (var wheelType in this.wheelItems)\n    {\n        var wheelItem = this.wheelItems[wheelType];\n        if (wheelItem.active)\n            return wheelItem;\n    }\n    return undefined;\n};\n\nDockWheel.prototype._handleDockRequest = function(wheelItem, dialog)\n{\n    if (!this.activeNode)\n        return;\n    if (wheelItem.id === 'left') {\n        this.dockManager.dockDialogLeft(this.activeNode, dialog);\n    } else if (wheelItem.id === 'right') {\n        this.dockManager.dockDialogRight(this.activeNode, dialog);\n    } else if (wheelItem.id === 'top') {\n        this.dockManager.dockDialogUp(this.activeNode, dialog);\n    } else if (wheelItem.id === 'down') {\n        this.dockManager.dockDialogDown(this.activeNode, dialog);\n    } else if (wheelItem.id === 'fill') {\n        this.dockManager.dockDialogFill(this.activeNode, dialog);\n    } else if (wheelItem.id === 'left-s') {\n        this.dockManager.dockDialogLeft(this.dockManager.context.model.rootNode, dialog);\n    } else if (wheelItem.id === 'right-s') {\n        this.dockManager.dockDialogRight(this.dockManager.context.model.rootNode, dialog);\n    } else if (wheelItem.id === 'top-s') {\n        this.dockManager.dockDialogUp(this.dockManager.context.model.rootNode, dialog);\n    } else if (wheelItem.id === 'down-s') {\n        this.dockManager.dockDialogDown(this.dockManager.context.model.rootNode, dialog);\n    }\n};\n\n","var EventHandler = require('../utils/EventHandler');\n\nfunction DockWheelItem(wheel, id)\n{\n    this.wheel = wheel;\n    this.id = id;\n    var wheelType = id.replace('-s', '');\n    this.element = document.createElement('div');\n    this.element.classList.add('dock-wheel-item');\n    this.element.classList.add('disable-selection');\n    this.element.classList.add('dock-wheel-' + wheelType);\n    this.element.classList.add('dock-wheel-' + wheelType + '-icon');\n    this.hoverIconClass = 'dock-wheel-' + wheelType + '-icon-hover';\n    this.mouseOverHandler = new EventHandler(this.element, 'mouseover', this.onMouseMoved.bind(this));\n    this.mouseOutHandler = new EventHandler(this.element, 'mouseout', this.onMouseOut.bind(this));\n    this.active = false;    // Becomes active when the mouse is hovered over it\n}\n\nmodule.exports = DockWheelItem;\n\nDockWheelItem.prototype.onMouseMoved = function(e)\n{\n    this.active = true;\n    this.element.classList.add(this.hoverIconClass);\n    this.wheel.onMouseOver(this, e);\n};\n\nDockWheelItem.prototype.onMouseOut = function(e)\n{\n    this.active = false;\n    this.element.classList.remove(this.hoverIconClass);\n    this.wheel.onMouseOut(this, e);\n};\n","var DockModel = require('../dock/DockModel'),\n    DockNode = require('../dock/DockNode'),\n    PanelContainer = require('../containers/PanelContainer'),\n    HorizontalDockContainer = require('../containers/HorizontalDockContainer'),\n    VerticalDockContainer = require('../containers/VerticalDockContainer'),\n    DocumentManagerContainer = require('../containers/DocumentManagerContainer'),\n    FillDockContainer = require('../containers/FillDockContainer'),\n    Dialog = require('../dialog/Dialog'),\n    utils = require('../utils/utils');\n\n/**\n * Deserializes the dock layout hierarchy from JSON and creates a dock hierarhcy graph\n */\nfunction DockGraphDeserializer(dockManager)\n{\n    this.dockManager = dockManager;\n}\n\nmodule.exports = DockGraphDeserializer;\n\nDockGraphDeserializer.prototype.deserialize = function(_json)\n{\n    var info = JSON.parse(_json);\n    var model = new DockModel();\n    model.rootNode = this._buildGraph(info.graphInfo);\n    model.dialogs = this._buildDialogs(info.dialogsInfo);\n    return model;\n};\n\nDockGraphDeserializer.prototype._buildGraph = function(nodeInfo)\n{\n    var childrenInfo = nodeInfo.children;\n    var children = [];\n    var self = this;\n    childrenInfo.forEach(function(childInfo)\n    {\n        var childNode = self._buildGraph(childInfo);\n        if (childNode !== null) {\n            children.push(childNode);\n        }\n    });\n\n    // Build the container owned by this node\n    var container = this._createContainer(nodeInfo, children);\n    if(container === null) {\n        return null;\n    }\n    // Build the node for this container and attach it's children\n    var node = new DockNode(container);\n    node.children = children;\n    node.children.reverse().forEach(function(childNode) {\n        childNode.parent = node;\n    });\n    node.children.reverse();\n    // node.container.setActiveChild(node.container);\n    return node;\n};\n\nDockGraphDeserializer.prototype._createContainer = function(nodeInfo, children)\n{\n    var containerType = nodeInfo.containerType;\n    var containerState = nodeInfo.state;\n    var container;\n\n    var childContainers = [];\n    children.forEach(function(childNode) { childContainers.push(childNode.container); });\n\n\n    if (containerType === 'panel'){\n        container = new PanelContainer.loadFromState(containerState, this.dockManager);\n        if(!container.prepareForDocking)\n            return null;\n         container.prepareForDocking();\n         utils.removeNode(container.elementPanel);\n    }\n    else if (containerType === 'horizontal')\n        container = new HorizontalDockContainer(this.dockManager, childContainers);\n    else if (containerType === 'vertical')\n        container = new VerticalDockContainer(this.dockManager, childContainers);\n    else if (containerType === 'fill')\n    {\n        // Check if this is a document manager\n\n        // TODO: Layout engine compares the string 'fill', so cannot create another subclass type\n        // called document_manager and have to resort to this hack. use RTTI in layout engine\n        var typeDocumentManager = containerState.documentManager;\n        if (typeDocumentManager)\n            container = new DocumentManagerContainer(this.dockManager);\n        else\n            container = new FillDockContainer(this.dockManager);\n    }\n    else\n        throw new Error('Cannot create dock container of unknown type: ' + containerType);\n\n    // Restore the state of the container\n\n    container.loadState(containerState);\n\n    // container.performLayout(childContainers);\n    return container;\n};\n\nDockGraphDeserializer.prototype._buildDialogs = function(dialogsInfo)\n{\n    var dialogs = [];\n    var self = this;\n    dialogsInfo.forEach(function(dialogInfo) {\n        var containerType = dialogInfo.containerType;\n        var containerState = dialogInfo.state;\n        var container;\n        if (containerType === 'panel'){\n            container = new PanelContainer.loadFromState(containerState, self.dockManager);\n            if (container.prepareForDocking) {\n                utils.removeNode(container.elementPanel);\n                container.isDialog = true;\n                var dialog = new Dialog(container, self.dockManager);\n                if(dialogInfo.position.left > document.body.clientWidth ||\n                    dialogInfo.position.top > document.body.clientHeight - 70){\n                    dialogInfo.position.left = 20;\n                    dialogInfo.position.top = 70;\n                }\n                dialog.setPosition(dialogInfo.position.left, dialogInfo.position.top);\n                dialog.isHidden = dialogInfo.isHidden;\n                if(dialog.isHidden)\n                    dialog.hide();\n                dialogs.push(dialog);\n            }\n        }\n\n    });\n    return dialogs;\n};\n","/**\n * The serializer saves / loads the state of the dock layout hierarchy\n */\nfunction DockGraphSerializer() {}\n\nmodule.exports = DockGraphSerializer;\n\nDockGraphSerializer.prototype.serialize = function(model)\n{\n    var graphInfo = this._buildGraphInfo(model.rootNode);\n    var dialogs = this._buildDialogsInfo(model.dialogs);\n    return JSON.stringify({graphInfo: graphInfo, dialogsInfo: dialogs});\n};\n\nDockGraphSerializer.prototype._buildGraphInfo = function(node)\n{\n    var nodeState = {};\n    node.container.saveState(nodeState);\n\n    var childrenInfo = [];\n    var self = this;\n    node.children.forEach(function(childNode) {\n        childrenInfo.push(self._buildGraphInfo(childNode));\n    });\n\n    var nodeInfo = {};\n    nodeInfo.containerType = node.container.containerType;\n    nodeInfo.state = nodeState;\n    nodeInfo.children = childrenInfo;\n    return nodeInfo;\n};\n\nDockGraphSerializer.prototype._buildDialogsInfo = function(dialogs)\n{\n    var dialogsInfo = [];\n    dialogs.forEach(function(dialog) {\n        var panelState = {};\n        var panelContainer = dialog.panel;\n        panelContainer.saveState(panelState);\n\n        var panelInfo = {};\n        panelInfo.containerType = panelContainer.containerType;\n        panelInfo.state = panelState;\n        panelInfo.children = [];\n        panelInfo.position = dialog.getPosition();\n        panelInfo.isHidden = dialog.isHidden;\n        dialogsInfo.push(panelInfo);\n    });\n\n    return dialogsInfo;\n};\n","var EventHandler = require('../utils/EventHandler'),\n    utils = require('../utils/utils');\n\nfunction SplitterBar(previousContainer, nextContainer, stackedVertical)\n{\n    // The panel to the left/top side of the bar, depending on the bar orientation\n    this.previousContainer = previousContainer;\n    // The panel to the right/bottom side of the bar, depending on the bar orientation\n    this.nextContainer = nextContainer;\n    this.stackedVertical = stackedVertical;\n    this.barElement = document.createElement('div');\n    this.barElement.classList.add(stackedVertical ? 'splitbar-horizontal' : 'splitbar-vertical');\n    this.mouseDownHandler = new EventHandler(this.barElement, 'mousedown', this.onMouseDown.bind(this));\n    this.minPanelSize = 50; // TODO: Get from container configuration\n    this.readyToProcessNextDrag = true;\n}\n\nmodule.exports = SplitterBar;\n\nSplitterBar.prototype.onMouseDown = function(e)\n{\n    this._startDragging(e);\n};\n\nSplitterBar.prototype.onMouseUp = function(e)\n{\n    this._stopDragging(e);\n};\n\nSplitterBar.prototype.onMouseMoved = function(e)\n{\n    if (!this.readyToProcessNextDrag)\n        return;\n    this.readyToProcessNextDrag = false;\n\n    var dockManager = this.previousContainer.dockManager;\n    dockManager.suspendLayout();\n    var dx = e.pageX - this.previousMouseEvent.pageX;\n    var dy = e.pageY - this.previousMouseEvent.pageY;\n    this._performDrag(dx, dy);\n    this.previousMouseEvent = e;\n    this.readyToProcessNextDrag = true;\n    dockManager.resumeLayout();\n};\n\nSplitterBar.prototype._performDrag = function(dx, dy)\n{\n    var previousWidth = this.previousContainer.containerElement.clientWidth;\n    var previousHeight = this.previousContainer.containerElement.clientHeight;\n    var nextWidth = this.nextContainer.containerElement.clientWidth;\n    var nextHeight = this.nextContainer.containerElement.clientHeight;\n\n    var previousPanelSize = this.stackedVertical ? previousHeight : previousWidth;\n    var nextPanelSize = this.stackedVertical ? nextHeight : nextWidth;\n    var deltaMovement = this.stackedVertical ? dy : dx;\n    var newPreviousPanelSize = previousPanelSize + deltaMovement;\n    var newNextPanelSize = nextPanelSize - deltaMovement;\n\n    if (newPreviousPanelSize < this.minPanelSize || newNextPanelSize < this.minPanelSize)\n    {\n        // One of the panels is smaller than it should be.\n        // In that case, check if the small panel's size is being increased\n        var continueProcessing = (newPreviousPanelSize < this.minPanelSize && newPreviousPanelSize > previousPanelSize) ||\n            (newNextPanelSize < this.minPanelSize && newNextPanelSize > nextPanelSize);\n\n        if (!continueProcessing)\n            return;\n    }\n\n    if (this.stackedVertical)\n    {\n        this.previousContainer.resize(previousWidth, newPreviousPanelSize);\n        this.nextContainer.resize(nextWidth, newNextPanelSize);\n    }\n    else\n    {\n        this.previousContainer.resize(newPreviousPanelSize, previousHeight);\n        this.nextContainer.resize(newNextPanelSize, nextHeight);\n    }\n};\n\nSplitterBar.prototype._startDragging = function(e)\n{\n    utils.disableGlobalTextSelection();\n    if (this.mouseMovedHandler)\n    {\n        this.mouseMovedHandler.cancel();\n        delete this.mouseMovedHandler;\n    }\n    if (this.mouseUpHandler)\n    {\n        this.mouseUpHandler.cancel();\n        delete this.mouseUpHandler;\n    }\n    this.mouseMovedHandler = new EventHandler(window, 'mousemove', this.onMouseMoved.bind(this));\n    this.mouseUpHandler = new EventHandler(window, 'mouseup', this.onMouseUp.bind(this));\n    this.previousMouseEvent = e;\n};\n\nSplitterBar.prototype._stopDragging = function()\n{\n    utils.enableGlobalTextSelection();\n    document.body.classList.remove('disable-selection');\n    if (this.mouseMovedHandler)\n    {\n        this.mouseMovedHandler.cancel();\n        delete this.mouseMovedHandler;\n    }\n    if (this.mouseUpHandler)\n    {\n        this.mouseUpHandler.cancel();\n        delete this.mouseUpHandler;\n    }\n};\n","var SplitterBar = require('./SplitterBar'),\n    utils = require('../utils/utils');\n\n/**\n * A splitter panel manages the child containers inside it with splitter bars.\n * It can be stacked horizontally or vertically\n */\nfunction SplitterPanel(childContainers, stackedVertical)\n{\n    this.childContainers = childContainers;\n    this.stackedVertical = stackedVertical;\n    this.panelElement = document.createElement('div');\n    this.spiltterBars = [];\n    this._buildSplitterDOM();\n}\n\nmodule.exports = SplitterPanel;\n\nSplitterPanel.prototype._buildSplitterDOM = function()\n{\n    if (this.childContainers.length <= 1)\n        throw new Error('Splitter panel should contain atleast 2 panels');\n\n    this.spiltterBars = [];\n    for (var i = 0; i < this.childContainers.length - 1; i++)\n    {\n        var previousContainer = this.childContainers[i];\n        var nextContainer = this.childContainers[i + 1];\n        var splitterBar = new SplitterBar(previousContainer, nextContainer, this.stackedVertical);\n        this.spiltterBars.push(splitterBar);\n\n        // Add the container and split bar to the panel's base div element\n        this._insertContainerIntoPanel(previousContainer);\n        this.panelElement.appendChild(splitterBar.barElement);\n    }\n    this._insertContainerIntoPanel(this.childContainers.slice(-1)[0]);\n};\n\nSplitterPanel.prototype.performLayout = function(children)\n{\n    this.removeFromDOM();\n\n    // rebuild\n    this.childContainers = children;\n    this._buildSplitterDOM();\n};\n\nSplitterPanel.prototype.removeFromDOM = function()\n{\n    this.childContainers.forEach(function(container)\n    {\n        if (container.containerElement)\n        {\n            container.containerElement.classList.remove('splitter-container-vertical');\n            container.containerElement.classList.remove('splitter-container-horizontal');\n            utils.removeNode(container.containerElement);\n        }\n    });\n    this.spiltterBars.forEach(function(bar) { utils.removeNode(bar.barElement); });\n};\n\nSplitterPanel.prototype.destroy = function()\n{\n    this.removeFromDOM();\n    this.panelElement.parentNode.removeChild(this.panelElement);\n};\n\nSplitterPanel.prototype._insertContainerIntoPanel = function(container)\n{\n    if (!container)\n    {\n        console.log('undefined');\n    }\n\n    utils.removeNode(container.containerElement);\n    this.panelElement.appendChild(container.containerElement);\n    container.containerElement.classList.add(\n        this.stackedVertical ? 'splitter-container-vertical' : 'splitter-container-horizontal'\n    );\n};\n\n/**\n * Sets the percentage of space the specified [container] takes in the split panel\n * The percentage is specified in [ratio] and is between 0..1\n */\nSplitterPanel.prototype.setContainerRatio = function(container, ratio)\n{\n    var splitPanelSize = this.stackedVertical ? this.panelElement.clientHeight : this.panelElement.clientWidth;\n    var newContainerSize = splitPanelSize * ratio;\n    var barSize = this.stackedVertical ?\n        this.spiltterBars[0].barElement.clientHeight : this.spiltterBars[0].barElement.clientWidth;\n\n    var otherPanelSizeQuota = splitPanelSize - newContainerSize - barSize * this.spiltterBars.length;\n    var otherPanelScaleMultipler = otherPanelSizeQuota / splitPanelSize;\n\n    for (var i = 0; i < this.childContainers.length; i++)\n    {\n        var child = this.childContainers[i];\n        var size;\n        if (child !== container)\n        {\n            size = this.stackedVertical ? child.containerElement.clientHeight : child.containerElement.clientWidth;\n            size *= otherPanelScaleMultipler;\n        }\n        else\n            size = newContainerSize;\n\n        if (this.stackedVertical)\n            child.resize(child.width, Math.floor(size));\n        else\n            child.resize(Math.floor(size), child.height);\n    }\n};\n\nSplitterPanel.prototype.resize = function(width, height)\n{\n    if (this.childContainers.length <= 1)\n        return;\n\n    var i;\n\n    // Adjust the fixed dimension that is common to all (i.e. width, if stacked vertical; height, if stacked horizontally)\n    for (i = 0; i < this.childContainers.length; i++)\n    {\n        var childContainer = this.childContainers[i];\n        if (this.stackedVertical)\n            childContainer.resize(width, childContainer.height);\n        else\n            childContainer.resize(childContainer.width, height);\n\n        if (i < this.spiltterBars.length) {\n            var splitBar = this.spiltterBars[i];\n            if (this.stackedVertical)\n                splitBar.barElement.style.width = width + 'px';\n            else\n                splitBar.barElement.style.height = height + 'px';\n        }\n    }\n\n    // Adjust the varying dimension\n    var totalChildPanelSize = 0;\n    // Find out how much space existing child containers take up (excluding the splitter bars)\n    var self = this;\n    this.childContainers.forEach(function(container)\n    {\n        var size = self.stackedVertical ?\n            container.height :\n            container.width;\n        totalChildPanelSize += size;\n    });\n\n    // Get the thickness of the bar\n    var barSize = this.stackedVertical ?\n        this.spiltterBars[0].barElement.clientHeight : this.spiltterBars[0].barElement.clientWidth;\n\n    // Find out how much space existing child containers will take after being resized (excluding the splitter bars)\n    var targetTotalChildPanelSize = this.stackedVertical ? height : width;\n    targetTotalChildPanelSize -= barSize * this.spiltterBars.length;\n\n    // Get the scale multiplier\n    totalChildPanelSize = Math.max(totalChildPanelSize, 1);\n    var scaleMultiplier = targetTotalChildPanelSize / totalChildPanelSize;\n\n\n    // Update the size with this multiplier\n    var updatedTotalChildPanelSize = 0;\n    for (i = 0; i < this.childContainers.length; i++)\n    {\n        var child = this.childContainers[i];\n        var original = this.stackedVertical ?\n            child.containerElement.clientHeight :\n            child.containerElement.clientWidth;\n\n        var newSize = scaleMultiplier > 1 ? Math.floor(original * scaleMultiplier) :\n        Math.ceil(original * scaleMultiplier);\n        updatedTotalChildPanelSize += newSize;\n\n        // If this is the last node, add any extra pixels to fix the rounding off errors and match the requested size\n        if (i === this.childContainers.length - 1)\n            newSize += targetTotalChildPanelSize - updatedTotalChildPanelSize;\n\n        // Set the size of the panel\n        if (this.stackedVertical)\n            child.resize(child.width, newSize );\n        else\n            child.resize( newSize, child.height);\n    }\n\n    this.panelElement.style.width = width + 'px';\n    this.panelElement.style.height = height + 'px';\n};\n","var PanelContainer = require('../containers/PanelContainer'),\n    UndockInitiator = require('../utils/UndockInitiator'),\n    EventHandler = require('../utils/EventHandler'),\n    utils = require('../utils/utils');\n\n/**\n * A tab handle represents the tab button on the tab strip\n */\nfunction TabHandle(parent)\n{\n    this.parent = parent;\n    var undockHandler = TabHandle.prototype._performUndock.bind(this);\n    this.elementBase = document.createElement('div');\n    this.elementText = document.createElement('div');\n    this.elementCloseButton = document.createElement('div');\n    this.elementBase.classList.add('tab-handle');\n    this.elementBase.classList.add('disable-selection'); // Disable text selection\n    this.elementText.classList.add('tab-handle-text');\n    this.elementCloseButton.classList.add('tab-handle-close-button');\n    this.elementBase.appendChild(this.elementText);\n    if (this.parent.host.displayCloseButton)\n        this.elementBase.appendChild(this.elementCloseButton);\n\n    this.parent.host.tabListElement.appendChild(this.elementBase);\n\n    var panel = parent.container;\n    var title = panel.getRawTitle();\n    var that = this;\n    this.undockListener = {\n        onDockEnabled:function(e){ that.undockEnabled(e.state); },\n        onHideCloseButton: function(e){ that.hideCloseButton(e.state); }\n    };\n    this.eventListeners = [];\n    panel.addListener(this.undockListener);\n\n    this.elementText.innerHTML = title;\n\n    // Set the close button text (font awesome)\n    if (this.parent.container instanceof PanelContainer && this.parent.container.dockManager.closeTabIconTemplate) {\n         this.elementCloseButton.innerHTML = this.parent.container.dockManager.closeTabIconTemplate();\n    }\n    else {\n        this.elementCloseButton.innerHTML = '<i class=\"fa fa-times\"></i>';\n    }\n\n    this._bringToFront(this.elementBase);\n\n    this.undockInitiator = new UndockInitiator(this.elementBase, undockHandler);\n    this.undockInitiator.enabled = true;\n    this.mouseClickHandler = new EventHandler(this.elementBase, 'click', this.onMouseClicked.bind(this));\n    this.mouseDownHandler = new EventHandler(this.elementBase, 'mousedown', this.onMouseDown.bind(this));\n    this.closeButtonHandler = new EventHandler(this.elementCloseButton, 'mousedown', this.onCloseButtonClicked.bind(this));\n\n    this.moveThreshold = 10;\n    this.zIndexCounter = 100;\n}\n\nmodule.exports = TabHandle;\n\nTabHandle.prototype.addListener = function(listener){\n    this.eventListeners.push(listener);\n};\n\nTabHandle.prototype.removeListener = function(listener)\n{\n    this.eventListeners.splice(this.eventListeners.indexOf(listener), 1);\n};\n\nTabHandle.prototype.undockEnabled = function(state)\n{\n      this.undockInitiator.enabled = state;\n};\n\nTabHandle.prototype.onMouseDown = function(e)\n{\n    if(this.undockInitiator.enabled)\n        this.undockInitiator.setThresholdPixels(40, false);\n    if (this.mouseMoveHandler)\n    {\n        this.mouseMoveHandler.cancel();\n        delete this.mouseMoveHandler;\n    }\n    if (this.mouseUpHandler)\n    {\n        this.mouseUpHandler.cancel();\n        delete this.mouseUpHandler;\n    }\n    this.stargDragPosition = e.clientX;\n    this.mouseMoveHandler = new EventHandler(this.elementBase, 'mousemove', this.onMouseMove.bind(this));\n    this.mouseUpHandler = new EventHandler(window, 'mouseup', this.onMouseUp.bind(this));\n};\n\nTabHandle.prototype.onMouseUp = function()\n{\n    if(this.undockInitiator.enabled)\n        this.undockInitiator.setThresholdPixels(10, true);\n    if(this.elementBase){\n         this.elementBase.classList.remove('tab-handle-dragged');\n    }\n    this.dragged = false;\n    this.mouseMoveHandler.cancel();\n    this.mouseUpHandler.cancel();\n    delete this.mouseMoveHandler;\n    delete this.mouseUpHandler;\n\n};\n\nTabHandle.prototype.generateMoveTabEvent = function(event, pos) {\n    var contain = pos > event.rect.left && pos < event.rect.right;\n    var m = Math.abs(event.bound - pos);\n    if(m < this.moveThreshold && contain)\n        this.moveTabEvent(this, event.state);\n};\n\nTabHandle.prototype.moveTabEvent = function(that, state){\n    that.eventListeners.forEach(function(listener) {\n        if (listener.onMoveTab) {\n            listener.onMoveTab({self: that, state: state});\n        }\n    });\n\n};\n\nTabHandle.prototype.onMouseMove = function(e)\n{\n    if(Math.abs(this.stargDragPosition  -  e.clientX) < 10)\n        return;\n    this.elementBase.classList.add('tab-handle-dragged');\n   this.dragged = true;\n   this.prev = this.current;\n   this.current = e.clientX;\n   this.direction =  this.current - this.prev;\n   var tabRect = this.elementBase.getBoundingClientRect();\n   var event = this.direction < 0 ? {state: 'left', bound: tabRect.left, rect:tabRect} :\n    {state: 'right', bound: tabRect.right, rect:tabRect};\n   if(this.direction !== 0) this.generateMoveTabEvent(event, this.current);\n};\n\nTabHandle.prototype.hideCloseButton = function(state)\n{\n    this.elementCloseButton.style.display = state ? 'none' : 'block';\n};\n\nTabHandle.prototype.updateTitle = function()\n{\n    if (this.parent.container instanceof PanelContainer)\n    {\n        var panel = this.parent.container;\n        var title = panel.getRawTitle();\n        this.elementText.innerHTML = title;\n    }\n};\n\nTabHandle.prototype.destroy = function()\n{\n    var panel = this.parent.container;\n    panel.removeListener(this.undockListener);\n\n    this.mouseClickHandler.cancel();\n    this.mouseDownHandler.cancel();\n    this.closeButtonHandler.cancel();\n\n    if (this.mouseUpHandler) {\n        this.mouseUpHandler.cancel();\n    }\n\n    utils.removeNode(this.elementBase);\n    utils.removeNode(this.elementCloseButton);\n    delete this.elementBase;\n    delete this.elementCloseButton;\n};\n\nTabHandle.prototype._performUndock = function(e, dragOffset)\n{\n    if (this.parent.container.containerType === 'panel')\n    {\n        this.undockInitiator.enabled = false;\n        var panel = this.parent.container;\n        return panel.performUndockToDialog(e, dragOffset);\n    }\n    else\n        return null;\n};\n\nTabHandle.prototype.onMouseClicked = function()\n{\n    this.parent.onSelected();\n};\n\nTabHandle.prototype.onCloseButtonClicked = function()\n{\n    // If the page contains a panel element, undock it and destroy it\n    if (this.parent.container.containerType === 'panel')\n    {\n        this.parent.container.close();\n        // this.undockInitiator.enabled = false;\n        // var panel = this.parent.container;\n        // panel.performUndock();\n    }\n};\n\nTabHandle.prototype.setSelected = function(selected)\n{\n    var selectedClassName = 'tab-handle-selected';\n    if (selected)\n        this.elementBase.classList.add(selectedClassName);\n    else\n        this.elementBase.classList.remove(selectedClassName);\n};\n\nTabHandle.prototype.setZIndex = function(zIndex)\n{\n    this.elementBase.style.zIndex = zIndex;\n};\n\nTabHandle.prototype._bringToFront = function(element)\n{\n    element.style.zIndex = this.zIndexCounter;\n    this.zIndexCounter++;\n};\n","var TabPage = require('./TabPage');\n\n/**\n * Tab Host control contains tabs known as TabPages.\n * The tab strip can be aligned in different orientations\n */\nfunction TabHost(tabStripDirection, displayCloseButton)\n{\n    /**\n     * Create a tab host with the tab strip aligned in the [tabStripDirection] direciton\n     * Only TabHost.DIRECTION_BOTTOM and TabHost.DIRECTION_TOP are supported\n     */\n    if (tabStripDirection === undefined) {\n        tabStripDirection = TabHost.DIRECTION_BOTTOM;\n    }\n\n    if (displayCloseButton === undefined) {\n        displayCloseButton = false;\n    }\n\n    this.tabStripDirection = tabStripDirection;\n    this.displayCloseButton = displayCloseButton; // Indicates if the close button next to the tab handle should be displayed\n    this.pages = [];\n    var that = this;\n     that.eventListeners = [];\n    this.tabHandleListener = {\n        onMoveTab :function(e){ that.onMoveTab(e); }\n    };\n    this.hostElement = document.createElement('div');       // The main tab host DOM element\n    this.tabListElement = document.createElement('div');    // Hosts the tab handles\n    this.separatorElement = document.createElement('div');  // A seperator line between the tabs and content\n    this.contentElement = document.createElement('div');    // Hosts the active tab content\n    this.createTabPage = this._createDefaultTabPage;        // Factory for creating tab pages\n\n    if (this.tabStripDirection === TabHost.DIRECTION_BOTTOM)\n    {\n        this.hostElement.appendChild(this.contentElement);\n        this.hostElement.appendChild(this.separatorElement);\n        this.hostElement.appendChild(this.tabListElement);\n    }\n    else if (this.tabStripDirection === TabHost.DIRECTION_TOP)\n    {\n        this.hostElement.appendChild(this.tabListElement);\n        this.hostElement.appendChild(this.separatorElement);\n        this.hostElement.appendChild(this.contentElement);\n    }\n    else {\n        throw new Error('Only top and bottom tab strip orientations are supported');\n    }\n\n    this.hostElement.classList.add('tab-host');\n    this.tabListElement.classList.add('tab-handle-list-container');\n    this.separatorElement.classList.add('tab-handle-content-seperator');\n    this.contentElement.classList.add('tab-content');\n}\n\nmodule.exports = TabHost;\n\n// constants\nTabHost.DIRECTION_TOP = 0;\nTabHost.DIRECTION_BOTTOM = 1;\nTabHost.DIRECTION_LEFT = 2;\nTabHost.DIRECTION_RIGHT = 3;\n\nTabHost.prototype.onMoveTab = function(e){\n    // this.tabListElement;\n    var index =  Array.prototype.slice.call(this.tabListElement.childNodes).indexOf(e.self.elementBase);\n\n    this.change(/*host*/this, /*handle*/e.self, e.state, index);\n};\n\nTabHost.prototype.performTabsLayout = function(indexes){\n    this.pages = this.pages.orderByIndexes(indexes);\n\n    var items = this.tabListElement.childNodes;\n    var itemsArr = [];\n    for (var i in items) {\n        if (items[i].nodeType === 1) { // get rid of the whitespace text nodes\n            itemsArr.push(items[i]);\n        }\n    }\n    itemsArr = itemsArr.orderByIndexes(indexes);\n    for (i = 0; i < itemsArr.length; ++i) {\n        this.tabListElement.appendChild(itemsArr[i]);\n    }\n\n    if (this.activeTab)\n        this.onTabPageSelected(this.activeTab);\n};\n\nTabHost.prototype.addListener = function(listener){\n    this.eventListeners.push(listener);\n};\n\nTabHost.prototype.removeListener = function(listener)\n{\n    this.eventListeners.splice(this.eventListeners.indexOf(listener), 1);\n};\n\nTabHost.prototype.change = function(host, handle, state, index){\n    this.eventListeners.forEach(function(listener) {\n        if (listener.onChange) {\n            listener.onChange({host: host, handle: handle, state: state, index: index});\n        }\n    });\n};\n\nTabHost.prototype._createDefaultTabPage = function(tabHost, container)\n{\n    return new TabPage(tabHost, container);\n};\n\nTabHost.prototype.setActiveTab = function(container) {\n    var currentPage;\n    this.pages.forEach(function(itm) {\n        if (itm.container === container) {\n            currentPage = itm;\n        }\n    });\n    if (this.pages.length > 0 && currentPage) {\n        this.onTabPageSelected(currentPage);\n    }\n};\n\nTabHost.prototype.resize = function(width, height)\n{\n    this.hostElement.style.width = width + 'px';\n    this.hostElement.style.height = height + 'px';\n\n    var tabHeight = this.tabListElement.clientHeight;\n    if (this.timeoutPerform) //lazy check\n        clearTimeout(this.timeoutPerform);\n    var self = this;\n    this.timeoutPerform = setTimeout(function () {\n        self.resizeTabListElement(width, height);\n    }, 100);\n    var separatorHeight = this.separatorElement.clientHeight;\n    var contentHeight = height - tabHeight - separatorHeight;\n    this.contentElement.style.height = contentHeight + 'px';\n\n    if (this.activeTab)\n        this.activeTab.resize(width, contentHeight);\n};\n\nTabHost.prototype.resizeTabListElement = function(width/*, height*/) {\n    if(this.pages.length === 0) return;\n    var tabListWidth = 0;\n    this.pages.forEach(function(page){\n        var handle = page.handle;\n        handle.elementBase.style.width = ''; //clear\n        handle.elementText.style.width = '';\n        tabListWidth += handle.elementBase.clientWidth;\n    });\n    var scaleMultiplier = width / tabListWidth;\n    if(scaleMultiplier > 1.2) return; //with a reserve\n    var self = this;\n    this.pages.forEach(function(page, index){\n        var handle = page.handle;\n         var newSize = scaleMultiplier * handle.elementBase.clientWidth;\n         if(index === self.pages.length - 1)\n            newSize = newSize - 5;\n         handle.elementBase.style.width = newSize + 'px';\n         if(self.tabStripDirection === TabHost.DIRECTION_TOP){\n             handle.elementText.style.width = newSize - handle.elementCloseButton.clientWidth - 16 + 'px';\n         }\n    });\n};\n\nTabHost.prototype.performLayout = function(children)\n{\n    // Destroy all existing tab pages\n    this.pages.forEach(function(tab)\n    {\n        tab.handle.removeListener(this.tabHandleListener);\n        tab.destroy();\n    });\n    this.pages.length = 0;\n\n    var oldActiveTab = this.activeTab;\n    delete this.activeTab;\n\n    var childPanels = children.filter(function(child)\n    {\n        return child.containerType === 'panel';\n    });\n\n    if (childPanels.length > 0)\n    {\n        // Rebuild new tab pages\n        var self = this;\n        childPanels.forEach(function(child)\n        {\n            var page = self.createTabPage(self, child);\n            page.handle.addListener(self.tabHandleListener);\n            self.pages.push(page);\n\n            // Restore the active selected tab\n            if (oldActiveTab && page.container === oldActiveTab.container)\n                self.activeTab = page;\n        });\n        this._setTabHandlesVisible(true);\n    }\n    else\n        // Do not show an empty tab handle host with zero tabs\n        this._setTabHandlesVisible(false);\n\n    if (this.activeTab)\n        this.onTabPageSelected(this.activeTab);\n};\n\nTabHost.prototype._setTabHandlesVisible = function(visible)\n{\n    this.tabListElement.style.display = visible ? 'block' : 'none';\n    this.separatorElement.style.display = visible ? 'block' : 'none';\n};\n\nTabHost.prototype.onTabPageSelected = function(page)\n{\n    this.activeTab = page;\n    this.pages.forEach(function(tabPage)\n    {\n        var selected = (tabPage === page);\n        tabPage.setSelected(selected);\n    });\n\n    // adjust the zIndex of the tabs to have proper shadow/depth effect\n    var zIndexDelta = 1;\n    var zIndex = 100;\n    this.pages.forEach(function(tabPage)\n    {\n        tabPage.handle.setZIndex(zIndex);\n        var selected = (tabPage === page);\n        if (selected)\n            zIndexDelta = -1;\n        zIndex += zIndexDelta;\n    });\n\n};\n","var TabHandle = require('./TabHandle'),\n    PanelContainer = require('../containers/PanelContainer'),\n    utils = require('../utils/utils');\n\nfunction TabPage(host, container)\n{\n    if (arguments.length === 0) {\n        return;\n    }\n\n    this.selected = false;\n    this.host = host;\n    this.container = container;\n\n    this.handle = new TabHandle(this);\n    this.containerElement = container.containerElement;\n\n    if (container instanceof PanelContainer)\n    {\n        var panel = container;\n        panel.onTitleChanged = this.onTitleChanged.bind(this);\n    }\n}\n\nmodule.exports = TabPage;\n\nTabPage.prototype.onTitleChanged = function(/*sender, title*/)\n{\n    this.handle.updateTitle();\n};\n\nTabPage.prototype.destroy = function()\n{\n    this.handle.destroy();\n\n    if (this.container instanceof PanelContainer)\n    {\n        var panel = this.container;\n        delete panel.onTitleChanged;\n    }\n};\n\nTabPage.prototype.onSelected = function()\n{\n    this.host.onTabPageSelected(this);\n    if (this.container instanceof PanelContainer)\n    {\n        var panel = this.container;\n        panel.dockManager.notifyOnTabChange(this);\n    }\n\n};\n\nTabPage.prototype.setSelected = function(flag)\n{\n    this.selected = flag;\n    this.handle.setSelected(flag);\n\n    if (!this._initContent)\n        this.host.contentElement.appendChild(this.containerElement);\n    this._initContent = true;\n    if (this.selected)\n    {\n        this.containerElement.style.display = 'block';\n        // force a resize again\n        var width = this.host.contentElement.clientWidth;\n        var height = this.host.contentElement.clientHeight;\n        this.container.resize(width, height);\n    }\n    else {\n        this.containerElement.style.display = 'none';\n    }\n};\n\nTabPage.prototype.resize = function(width, height)\n{\n    this.container.resize(width, height);\n};\n","function EventHandler(source, eventName, target) {\n    // wrap the target\n    this.target = target;\n    this.eventName = eventName;\n    this.source = source;\n\n    this.source.addEventListener(eventName, this.target);\n}\n\nmodule.exports = EventHandler;\n\nEventHandler.prototype.cancel = function() {\n    this.source.removeEventListener(this.eventName, this.target);\n};\n","function Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nmodule.exports = Point;\n","function Rectangle(x, y, width, height) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.width = width || 0;\n    this.height = height || 0;\n}\n\nmodule.exports = Rectangle;\n","var EventHandler = require('./EventHandler'),\n    Point = require('./Point');\n\n/**\n * Listens for events on the [element] and notifies the [listener]\n * if an undock event has been invoked.  An undock event is invoked\n * when the user clicks on the event and drags is beyond the\n * specified [thresholdPixels]\n */\nfunction UndockInitiator(element, listener, thresholdPixels) {\n    if (!thresholdPixels) {\n        thresholdPixels = 10;\n    }\n\n    this.element = element;\n    this.listener = listener;\n    this.thresholdPixels = thresholdPixels;\n    this._enabled = false;\n    this.horizontalChange = true;\n}\n\nmodule.exports = UndockInitiator;\n\nObject.defineProperty(UndockInitiator.prototype, 'enabled', {\n    get: function() {\n        return this._enabled;\n    },\n    set: function(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            if (this.mouseDownHandler) {\n                this.mouseDownHandler.cancel();\n                delete this.mouseDownHandler;\n            }\n\n            this.mouseDownHandler = new EventHandler(this.element, 'mousedown', this.onMouseDown.bind(this));\n        }\n        else {\n            if (this.mouseDownHandler) {\n                this.mouseDownHandler.cancel();\n                delete this.mouseDownHandler;\n            }\n\n            if (this.mouseUpHandler) {\n                this.mouseUpHandler.cancel();\n                delete this.mouseUpHandler;\n            }\n\n            if (this.mouseMoveHandler) {\n                this.mouseMoveHandler.cancel();\n                delete this.mouseMoveHandler;\n            }\n        }\n    }\n});\n\nUndockInitiator.prototype.setThresholdPixels = function (thresholdPixels, horizontalChange){\n     this.horizontalChange = horizontalChange;\n     this.thresholdPixels = thresholdPixels;\n};\n\nUndockInitiator.prototype.onMouseDown = function (e) {\n    // Make sure we dont do this on floating dialogs\n    if (this.enabled) {\n        if (this.mouseUpHandler) {\n            this.mouseUpHandler.cancel();\n            delete this.mouseUpHandler;\n        }\n\n        if (this.mouseMoveHandler) {\n            this.mouseMoveHandler.cancel();\n            delete this.mouseMoveHandler;\n        }\n\n        this.mouseUpHandler = new EventHandler(window, 'mouseup', this.onMouseUp.bind(this));\n        this.mouseMoveHandler = new EventHandler(window, 'mousemove', this.onMouseMove.bind(this));\n        this.dragStartPosition = new Point(e.pageX, e.pageY);\n    }\n};\n\nUndockInitiator.prototype.onMouseUp = function () {\n    if (this.mouseUpHandler) {\n        this.mouseUpHandler.cancel();\n        delete this.mouseUpHandler;\n    }\n\n    if (this.mouseMoveHandler) {\n        this.mouseMoveHandler.cancel();\n        delete this.mouseMoveHandler;\n    }\n};\n\nUndockInitiator.prototype.onMouseMove = function (e) {\n    var position = new Point(e.pageX, e.pageY);\n    var dx = this.horizontalChange ? position.x - this.dragStartPosition.x : 10;\n    var dy = position.y - this.dragStartPosition.y;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (distance > this.thresholdPixels) {\n        this.enabled = false;\n        this._requestUndock(e);\n    }\n};\n\nUndockInitiator.prototype._requestUndock = function (e) {\n    var dragOffsetX = this.dragStartPosition.x - this.element.offsetLeft;\n    var dragOffsetY = this.dragStartPosition.y - this.element.offsetTop;\n    var dragOffset = new Point(dragOffsetX, dragOffsetY);\n    this.listener(e, dragOffset);\n};\n","var counter = 0;\n\nmodule.exports = {\n    getPixels: function (pixels) {\n        if (pixels === null) {\n            return 0;\n        }\n\n        return parseInt(pixels.replace('px', ''));\n    },\n\n    disableGlobalTextSelection: function () {\n        document.body.classList.add('disable-selection');\n    },\n\n    enableGlobalTextSelection: function () {\n        document.body.classList.remove('disable-selection');\n    },\n\n    isPointInsideNode: function (px, py, node) {\n        var element = node.container.containerElement;\n\n        return (\n            px >= element.offsetLeft &&\n            px <= element.offsetLeft + element.clientWidth &&\n            py >= element.offsetTop &&\n            py <= element.offsetTop + element.clientHeight\n        );\n    },\n\n    getNextId: function (prefix) {\n        return prefix + counter++;\n    },\n\n    removeNode: function (node) {\n        if (node.parentNode === null) {\n            return false;\n        }\n\n        node.parentNode.removeChild(node);\n\n        return true;\n    }\n};\n"],"sourceRoot":"/source/"}